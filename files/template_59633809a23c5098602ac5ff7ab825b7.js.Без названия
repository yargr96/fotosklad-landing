
; /* Start:"a:4:{s:4:"full";s:63:"/bitrix/templates/fotosklad/js/sided/openapi.js?153484101386668";s:6:"source";s:47:"/bitrix/templates/fotosklad/js/sided/openapi.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
(function(w) {
  if (w.fastXDM) return;

  var handlers  = {};
  var onEnvLoad = [];
  var env       = {};

  // Key generation
  function genKey() {
    var key = '';
    for (var i = 0; i < 5; i++) {
      key += Math.ceil(Math.random() * 15).toString(16);
    }
    return key;
  }

  function waitFor(obj, prop, func, self,  count) {
    if (obj[prop]) {
      func.apply(self);
    } else {
      count = count || 0;
      if (count < 1000) {
        setTimeout(function() {
          waitFor(obj, prop, func, self, count + 1);
        }, 0);
      }
    }
  }

  function attachScript(url) {
    setTimeout(function() {
      var newScript  = document.createElement('script');
      newScript.type = 'text/javascript';
      newScript.src  = url || w.fastXDM.helperUrl;
      waitFor(document, 'body', function() {
        document.getElementsByTagName('HEAD')[0].appendChild(newScript);
      });
    }, 0);
  }

  function walkVar(value, clean) {
    var newValue;

    switch (typeof value) {
      case 'string':
        if (clean) {
          newValue = value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;');
        } else {
          newValue = value.replace(/&#039;/g, '\'').replace(/&quot;/g, '"').replace(/&gt;/g, '>').replace(/&lt;/g, '<').replace(/&amp;/g, '&');
        }
        break;
      case 'object':
        if (Object.prototype.toString.apply(value) === '[object Array]') {
          newValue = [];
          for (var i = 0, len = value.length; i < len; i++) {
            newValue[i] = walkVar(value[i], clean);
          }
        } else {
          newValue = {};
          for (var k in value) {
            if (Object.hasOwnProperty.call(value, k)) {
              newValue[k] = walkVar(value[k], clean);
            }
          }
        }
        break;
      default:
        newValue = value;
        break;
    }

    return newValue;
  }

  // Env functions
  function getEnv(callback, self) {
    if (env.loaded) {
      callback.apply(self, [env]);
    } else {
      onEnvLoad.push([self, callback]);
    }
  }

  function envLoaded() {
    env.loaded = true;

    for (var i = 0, len = onEnvLoad.length; i < len; i++) {
      onEnvLoad[i][1].apply(onEnvLoad[i][0], [env]);
    }
  }

  function applyMethod(strData, self) {
    getEnv(function(env) {
      var data = env.json.parse(strData);
      if (data[0]) {
        if (!data[1]) data[1] = [];

        for (var i = 0, len = data[1].length; i < len; i++) {
          if (data[1][i] && data[1][i]._func) {
            var funcNum = data[1][i]._func;
            data[1][i] = function() {
              var args = Array.prototype.slice.call(arguments);
              args.unshift('_func' + funcNum);
              self.callMethod.apply(self, args);
            }
          } else if (self.options.safe) {
            data[1][i] = walkVar(data[1][i], true);
          }
        }

        setTimeout(function() {
          if (!self.methods[data[0]]) {
            throw Error('fastXDM: Method ' + data[0] + ' is undefined');
          }
          self.methods[data[0]].apply(self, data[1]);
        }, 0);
      }
    });
  }

  function extend(obj1, obj2) {
    for (var i in obj2) {
      if (obj1[i] && typeof(obj1[i]) === 'object') {
        extend(obj1[i], obj2[i])
      } else {
        obj1[i] = obj2[i];
      }
    }
  }

  // XDM object
  w.fastXDM = {
    _id: 0,
    helperUrl: 'https://vk.com/js/api/xdmHelper.js',

    Server: function(methods, filter, options) {
      this.methods   = methods || {};
      this.filter    = filter;
      this.options   = options || {};
      this.id        = w.fastXDM._id++;
      this.key       = genKey();
      this.frameName = 'fXD' + this.key;
      this.server    = true;

      this.methods['%init%'] = this.methods.__fxdm_i = function() {
        w.fastXDM.run(this.id);
        if (this.methods.onInit) {
          this.methods.onInit();
        }
      };

      handlers[this.key] = [applyMethod, this];
    },

    Client: function(methods, options) {
      this.methods = methods || {};
      this.options = options || {};
      this.id      = w.fastXDM._id++;
      this.client  = true;

      w.fastXDM.run(this.id);

      if (window.name.indexOf('fXD') === 0) {
        this.key = window.name.substr(3);
      } else {
        throw Error('Wrong window.name property.');
      }

      this.caller = window.parent;

      handlers[this.key] = [applyMethod, this];

      w.fastXDM.on('helper', function() {
        w.fastXDM.onClientStart(this);
      }, this);

      getEnv(function(env) {
        env.send(this, env.json.stringify(['%init%']));

        var methods = this.methods;
        setTimeout(function() {
          if (methods.onInit) {
            methods.onInit();
          }
        }, 0);
      }, this);
    },

    onMessage: function(e) {
      var data = e.data;
      if (!data) {
        return false;
      }
      if (typeof data !== 'string' && !(data instanceof String)) {
        return false;
      }

      var key = data.substr(0, 5);
      if (handlers[key]) {
        var self = handlers[key][1];
        if (self && (!self.filter || self.filter(e.origin))) {
          handlers[key][0](data.substr(6), self);
        }
      }
    },

    setJSON: function(json) {
      env.json = json;
    },

    getJSON: function(callback) {
      if (!callback) {
        return env.json;
      }

      getEnv(function(env) {
        callback(env.json);
      });
    },

    setEnv: function(exEnv) {
      for (var i in exEnv) {
        env[i] = exEnv[i];
      }

      envLoaded();
    },

    _q: {},

    on: function(key, act, self) {
      if (!this._q[key]) this._q[key] = [];

      if (this._q[key] == -1) {
        act.apply(self);
      } else {
        this._q[key].push([act, self]);
      }
    },

    run: function(key) {
      var len = (this._q[key] || []).length;
      for (var i = 0; i < len; i++) {
        this._q[key][i][0].apply(this._q[key][i][1]);
      }

      this._q[key] = -1;
    },

    waitFor: waitFor
  }

  w.fastXDM.Server.prototype.start = function(obj, count) {
    if (obj.contentWindow) {
      this.caller = obj.contentWindow;
      this.frame  = obj;

      w.fastXDM.on('helper', function() {
        w.fastXDM.onServerStart(this);
      }, this);
    } else { // Opera old versions
      var self = this;
      count = count || 0;
      if (count < 50) {
        setTimeout(function() {
          self.start.apply(self, [obj, count + 1]);
        }, 100);
      }
    }
  }

  w.fastXDM.Server.prototype.destroy = function() {
    delete handlers[this.key];
  }

  w.fastXDM.Server.prototype.append = function(obj, options, attrs) {
    var div       = document.createElement('DIV');
    div.innerHTML = '<iframe name="' + this.frameName + '" ' + (attrs || '') + '></iframe>';
    var frame     = div.firstChild;
    var self      = this;

    setTimeout(function() {
      frame.frameBorder = '0';
      if (options) extend(frame, options);
      obj.insertBefore(frame, obj.firstChild);
      self.start(frame);
    }, 0);

    return frame;
  }

  w.fastXDM.Client.prototype.callMethod = w.fastXDM.Server.prototype.callMethod = function() {
    var args   = Array.prototype.slice.call(arguments);
    var method = args.shift();

    for (var i = 0, len = args.length; i < len; i++) {
      if (typeof(args[i]) === 'function') {
        this.funcsCount = (this.funcsCount || 0) + 1;
        var func        = args[i];
        var funcName    = '_func' + this.funcsCount;

        this.methods[funcName] = function() {
          func.apply(this, arguments);
          delete this.methods[funcName];
        }

        args[i] = {_func: this.funcsCount};
      } else if (this.options.safe) {
        args[i] = walkVar(args[i], false);
      }
    }

    waitFor(this, 'caller', function() {
      w.fastXDM.on(this.id, function() {
        getEnv(function(env) {
          env.send(this, env.json.stringify([method, args]));
        }, this);
      }, this);
    }, this);
  }

  if (w.JSON && typeof(w.JSON) === 'object' && w.JSON.parse && w.JSON.stringify && w.JSON.stringify({a:[1,2,3]}).replace(/ /g, '') === '{"a":[1,2,3]}') {
    env.json = {parse: w.JSON.parse, stringify: w.JSON.stringify};
  } else {
    w.fastXDM._needJSON = true;
  }

  // PostMessage cover
  if (w.postMessage) {
    env.protocol = 'p';
    env.send = function(xdm, strData) {
      var win = (xdm.frame ? xdm.frame.contentWindow : xdm.caller);
      if (win) {
        try {
          win.postMessage(xdm.key + ':' + strData, "*");
        } catch(e) {
          window.postMessage.call(win, xdm.key + ':' + strData, "*");
        }
      }
    }

    if (w.addEventListener) {
      w.addEventListener("message", w.fastXDM.onMessage, false);
    } else {
      w.attachEvent("onmessage", w.fastXDM.onMessage);
    }

    if (w.fastXDM._needJSON) {
      w.fastXDM._onlyJSON = true;
      attachScript();
    } else {
      envLoaded();
    }
  } else {
    attachScript();
  }
})(window);

if (!window.VK) window.VK = {};

/*
 * Based on JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 */
if(!VK.MD5){VK.MD5=function(n){var j=function(o,r){var q=(o&65535)+(r&65535),p=(o>>16)+(r>>16)+(q>>16);return(p<<16)|(q&65535)},g=function(o,p){return(o<<p)|(o>>>(32-p))},k=function(w,r,p,o,v,u){return j(g(j(j(r,w),j(o,u)),v),p)},a=function(q,p,w,v,o,u,r){return k((p&w)|((~p)&v),q,p,o,u,r)},h=function(q,p,w,v,o,u,r){return k((p&v)|(w&(~v)),q,p,o,u,r)},c=function(q,p,w,v,o,u,r){return k(p^w^v,q,p,o,u,r)},m=function(q,p,w,v,o,u,r){return k(w^(p|(~v)),q,p,o,u,r)},b=function(A,u){var z=1732584193,y=-271733879,w=-1732584194,v=271733878,r,q,p,o;A[u>>5]|=128<<((u)%32);A[(((u+64)>>>9)<<4)+14]=u;for(var t=0,s=A.length;t<s;t+=16){r=z;q=y;p=w;o=v;z=a(z,y,w,v,A[t+0],7,-680876936);v=a(v,z,y,w,A[t+1],12,-389564586);w=a(w,v,z,y,A[t+2],17,606105819);y=a(y,w,v,z,A[t+3],22,-1044525330);z=a(z,y,w,v,A[t+4],7,-176418897);v=a(v,z,y,w,A[t+5],12,1200080426);w=a(w,v,z,y,A[t+6],17,-1473231341);y=a(y,w,v,z,A[t+7],22,-45705983);z=a(z,y,w,v,A[t+8],7,1770035416);v=a(v,z,y,w,A[t+9],12,-1958414417);w=a(w,v,z,y,A[t+10],17,-42063);y=a(y,w,v,z,A[t+11],22,-1990404162);z=a(z,y,w,v,A[t+12],7,1804603682);v=a(v,z,y,w,A[t+13],12,-40341101);w=a(w,v,z,y,A[t+14],17,-1502002290);y=a(y,w,v,z,A[t+15],22,1236535329);z=h(z,y,w,v,A[t+1],5,-165796510);v=h(v,z,y,w,A[t+6],9,-1069501632);w=h(w,v,z,y,A[t+11],14,643717713);y=h(y,w,v,z,A[t+0],20,-373897302);z=h(z,y,w,v,A[t+5],5,-701558691);v=h(v,z,y,w,A[t+10],9,38016083);w=h(w,v,z,y,A[t+15],14,-660478335);y=h(y,w,v,z,A[t+4],20,-405537848);z=h(z,y,w,v,A[t+9],5,568446438);v=h(v,z,y,w,A[t+14],9,-1019803690);w=h(w,v,z,y,A[t+3],14,-187363961);y=h(y,w,v,z,A[t+8],20,1163531501);z=h(z,y,w,v,A[t+13],5,-1444681467);v=h(v,z,y,w,A[t+2],9,-51403784);w=h(w,v,z,y,A[t+7],14,1735328473);y=h(y,w,v,z,A[t+12],20,-1926607734);z=c(z,y,w,v,A[t+5],4,-378558);v=c(v,z,y,w,A[t+8],11,-2022574463);w=c(w,v,z,y,A[t+11],16,1839030562);y=c(y,w,v,z,A[t+14],23,-35309556);z=c(z,y,w,v,A[t+1],4,-1530992060);v=c(v,z,y,w,A[t+4],11,1272893353);w=c(w,v,z,y,A[t+7],16,-155497632);y=c(y,w,v,z,A[t+10],23,-1094730640);z=c(z,y,w,v,A[t+13],4,681279174);v=c(v,z,y,w,A[t+0],11,-358537222);w=c(w,v,z,y,A[t+3],16,-722521979);y=c(y,w,v,z,A[t+6],23,76029189);z=c(z,y,w,v,A[t+9],4,-640364487);v=c(v,z,y,w,A[t+12],11,-421815835);w=c(w,v,z,y,A[t+15],16,530742520);y=c(y,w,v,z,A[t+2],23,-995338651);z=m(z,y,w,v,A[t+0],6,-198630844);v=m(v,z,y,w,A[t+7],10,1126891415);w=m(w,v,z,y,A[t+14],15,-1416354905);y=m(y,w,v,z,A[t+5],21,-57434055);z=m(z,y,w,v,A[t+12],6,1700485571);v=m(v,z,y,w,A[t+3],10,-1894986606);w=m(w,v,z,y,A[t+10],15,-1051523);y=m(y,w,v,z,A[t+1],21,-2054922799);z=m(z,y,w,v,A[t+8],6,1873313359);v=m(v,z,y,w,A[t+15],10,-30611744);w=m(w,v,z,y,A[t+6],15,-1560198380);y=m(y,w,v,z,A[t+13],21,1309151649);z=m(z,y,w,v,A[t+4],6,-145523070);v=m(v,z,y,w,A[t+11],10,-1120210379);w=m(w,v,z,y,A[t+2],15,718787259);y=m(y,w,v,z,A[t+9],21,-343485551);z=j(z,r);y=j(y,q);w=j(w,p);v=j(v,o)}return[z,y,w,v]},f=function(r){var q="",s=-1,p=r.length,o,t;while(++s<p){o=r.charCodeAt(s);t=s+1<p?r.charCodeAt(s+1):0;if(55296<=o&&o<=56319&&56320<=t&&t<=57343){o=65536+((o&1023)<<10)+(t&1023);s++}if(o<=127){q+=String.fromCharCode(o)}else{if(o<=2047){q+=String.fromCharCode(192|((o>>>6)&31),128|(o&63))}else{if(o<=65535){q+=String.fromCharCode(224|((o>>>12)&15),128|((o>>>6)&63),128|(o&63))}else{if(o<=2097151){q+=String.fromCharCode(240|((o>>>18)&7),128|((o>>>12)&63),128|((o>>>6)&63),128|(o&63))}}}}}return q},e=function(p){var o=Array(p.length>>2),r,q;for(r=0,q=o.length;r<q;r++){o[r]=0}for(r=0,q=p.length*8;r<q;r+=8){o[r>>5]|=(p.charCodeAt(r/8)&255)<<(r%32)}return o},l=function(p){var o="";for(var r=0,q=p.length*32;r<q;r+=8){o+=String.fromCharCode((p[r>>5]>>>(r%32))&255)}return o},d=function(o){return l(b(e(o),o.length*8))},i=function(q){var t="0123456789abcdef",p="",o;for(var s=0,r=q.length;s<r;s++){o=q.charCodeAt(s);p+=t.charAt((o>>>4)&15)+t.charAt(o&15)}return p};return i(d(f(n)))}}

/*
 * VKontakte Open API JavaScript library
 * http://vk.com/
 */

VK.extend = function(target, source, overwrite) {
  for (var key in source) {
    if (overwrite || typeof target[key] === 'undefined') {
      target[key] = source[key];
    }
  }
  return target;
};

VK._protocol = 'https:';

if (!VK.xdConnectionCallbacks) {

  VK.extend(VK, {
    version: 1,
    _apiId: null,
    _session: null,
    _userStatus: 'unknown',
    _domain: {
      main: 'https://oauth.vk.com/',
      api: 'https://api.vk.com/'
    },
    _path: {
      login: 'authorize',
      proxy: 'fxdm_oauth_proxy.html'
    },
    _rootId: 'vk_api_transport',
    _nameTransportPath: '',
    xdReady: false,
    access: {
      FRIENDS:   0x2,
      PHOTOS:    0x4,
      AUDIO:     0x8,
      VIDEO:     0x10,
      MATCHES:   0x20,
      QUESTIONS: 0x40,
      WIKI:      0x80
    }
  });

  VK.init = function(options) {
    var body, root;

    VK._apiId = null;
    if (!options.apiId) {
      throw Error('VK.init() called without an apiId');
    }
    VK._apiId = options.apiId;

    if (options.onlyWidgets) return true;

    if (options.nameTransportPath && options.nameTransportPath !== '') {
      VK._nameTransportPath = options.nameTransportPath;
    }

    root = document.getElementById(VK._rootId);
    if (!root) {
      root = document.createElement('div');
      root.id = VK._rootId;
      body = document.getElementsByTagName('body')[0];
      body.insertBefore(root, body.childNodes[0]);
    }
    root.style.position = 'absolute';
    root.style.top = '-10000px';

    var session = VK.Cookie.load();
    if (session) {
      VK.Auth._loadState = 'loaded';
      VK.Auth.setSession(session, session ? 'connected' : 'unknown');
    }
  };

  if (!VK.Cookie) {
    VK.Cookie = {
      _domain: null,
      load: function() {
        var cookie = document.cookie.match('\\bvk_app_' + VK._apiId + '=([^;]*)\\b')
        var session;

        if (cookie) {
          session = this.decode(cookie[1]);
          if (session.secret != 'oauth') {
            return false;
          }
          session.expire = parseInt(session.expire, 10);
          VK.Cookie._domain = '.' + window.location.hostname;//session.base_domain;
        }

        return session;
      },
      setRaw: function(val, ts, domain, time) {
        var rawCookie;
        rawCookie = 'vk_app_' + VK._apiId + '=' + val + '';
        var exp = time ? (new Date().getTime() + time * 1000) : ts * 1000;
        rawCookie += (val && ts === 0 ? '' : '; expires=' + new Date(exp).toGMTString());
        rawCookie += '; path=/';
        rawCookie += (domain ? '; domain=.' + domain : '');
        document.cookie = rawCookie;

        this._domain = domain;
      },
      set: function(session, resp) {
        if (session) {
          this.setRaw(this.encode(session), session.expire, window.location.hostname, (resp || {}).time);
        } else {
          this.clear();
        }
      },
      clear: function() {
        this.setRaw('', 0, this._domain, 0);
      },
      encode: function(params) {
        var
            pairs = [],
            key;

        for (key in params) {
          if (key != 'user') pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));
        }
        pairs.sort();

        return pairs.join('&');
      },
      decode: function(str) {
        var
            params = {},
            parts = str.split('&'),
            i,
            pair;

        for (i=0; i < parts.length; i++) {
          pair = parts[i].split('=', 2);
          if (pair && pair[0]) {
            params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
          }
        }

        return params;
      }
    };
  }

  if (!VK.Api) {
    VK.Api = {
      _headId: null,
      _callbacks: {},

      ie6_7: function() {
        if (!VK.Api.ieTested) {
          VK.Api.isIE6_7 = navigator.userAgent.match(/MSIE [6|7]/i);
          VK.Api.ieTested = true;
        }
        return VK.Api.isIE6_7;
      },

      supportCORS: function() {
        var xhr = new XMLHttpRequest();
        if ("withCredentials" in xhr) {
          return true;
        }

        if (typeof XDomainRequest != "undefined") {
          return true;
        }

        return false;
      },

      makeRequest: function(url, cb) {
        var xhr = VK.Api.createRequest('GET', url);
        if (!xhr) {
          return false;
        }

        xhr.onload = function() {
          var text = xhr.responseText;
          if (xhr.status === 200) {
            cb(text);
          } else {
            try {
              console.error('Open api access error', xhr.response);
            } catch(e) {
              //nop
            }
          }
        };

        xhr.onerror = function() {
          try {
            console.error('Open api access error');
          } catch(e) {
            //nop
          }
        };

        xhr.send();
        return true;
      },

      createRequest: function(method, url) {
        var xhr = new XMLHttpRequest();

        if ("withCredentials" in xhr) {
          // XHR for Chrome/Firefox/Opera/Safari.
          xhr.open(method, url, true);
          xhr.withCredentials = true;
        } else if (typeof XDomainRequest != "undefined") {
          // XDomainRequest for IE.
          xhr = new XDomainRequest();
          xhr.open(method, url);
          xhr.withCredentials = true;
        } else {
          // CORS not supported.
          xhr = null;
        }

        return xhr;
      },

      attachScript: function(url) {
        if (!VK.Api._headId) VK.Api._headId = document.getElementsByTagName("head")[0];
        var newScript = document.createElement('script');
        newScript.type = 'text/javascript';
        newScript.setAttribute('encoding', 'UTF-8');
        newScript.src = url;
        VK.Api._headId.appendChild(newScript);
      },

      checkMethod: function(method, params, cb, queryTry) {
        var m = method.toLowerCase();
        if (m == 'wall.post' || m == 'activity.set') {
          var text = (m == 'activity.set') ? params.text : params.message;
          if (!text) {
            text = '';
          }
          var query =  VK._protocol + '//vk.com/al_apps.php?act=wall_post_box&widget=4&method='+m+'&aid=' + parseInt(VK._apiId, 10) + '&text=' + encodeURIComponent(text);
          if (m == 'wall.post') {
            query += '&owner_id=' + parseInt(params.owner_id || 0, 10) + '&attachments=' + (params.attachments || params.attachment || '') + '&publish_date=' + (params.publish_date || '');
          }
          var method_access = '_'+(Math.random()).toString(16).substr(2);
          query += '&method_access='+method_access;
          var popup = VK.UI.popup({
            url: query,
            width: 560,
            height: 304
          });
          var timer = setInterval(function() {
            if (VK.UI.active.closed) {
              clearInterval(timer);
              params.method_access = method_access;
              VK.Api.call(method, params, cb, queryTry);
            }
          }, 500);
          return false;
        }

        if (m == 'messages.allowmessagesfromgroup') {
          var method_access = '_' + (Math.random()).toString(16).substr(2);
          var query = VK._protocol + '//vk.com/widget_allow_messages_from_community.php?act=allow_box&group_id=' + parseInt(params.group_id, 10) + '&app_id=' + parseInt(VK._apiId, 10) + '&method_access=' + method_access;

          VK.UI.popup({
            url: query,
            width: 560,
            height: 304
          });

          var timer = setInterval(function () {
            if (VK.UI.active.closed) {
              clearInterval(timer);
              params.method_access = method_access;
              VK.Api.call(method, params, cb, queryTry);
            }
          }, 500);

          return false;
        }

        return true;
      },

      call: function(method, params, cb, queryTry) {
        var
            query = params || {},
            qs,
            responseCb;

        if (typeof query != 'object' || typeof cb != 'function') {
          return false;
        }
        if (!params.method_access && !params.method_force && !VK.Api.checkMethod(method, params, cb, queryTry)) {
          return;
        }

        if (!queryTry) queryTry = 0;

        if (VK.Auth._loadState != 'loaded') {
          var authFunc = function(result) {
            if (result && result.session) {
              VK.Observer.unsubscribe('auth.loginStatus', authFunc);
              VK.Api.call(method, params, cb);
            }
          };
          VK.Observer.subscribe('auth.loginStatus', authFunc);
          VK.Auth.getLoginStatus();
          return;
        }

        if (VK.Api.queryLength(query) < 1500 && !VK.Api.ie6_7()) {
          var useXDM = false;
          var rnd = parseInt(Math.random() * 10000000, 10);
          while (VK.Api._callbacks[rnd]) {
            rnd = parseInt(Math.random() * 10000000, 10)
          }
          query.callback = 'VK.Api._callbacks['+rnd+']';
        } else {
          var useXDM = true;
        }

        if (VK._session && VK._session.sid) {
          query.access_token = VK._session.sid;
        }

        qs = VK.Cookie.encode(query);

        responseCb = function(response) {
          if (response.error && (response.error.error_code == 3 || response.error.error_code == 4 || response.error.error_code == 5)) {
            if (queryTry > 3) return false;
            var repeatCall = function(resp) {
              VK.Observer.unsubscribe('auth.sessionChange', repeatCall);
              delete params.access_token;
              if (resp.session) VK.Api.call(method, params, cb, queryTry + 1);
            }
            VK.Observer.subscribe('auth.sessionChange', repeatCall);
            VK.Auth.getLoginStatus();
          } else {
            cb(response);
          }
          if (!useXDM) delete VK.Api._callbacks[rnd];
        };

        if (useXDM) {
          if (VK.xdReady) {
            VK.XDM.remote.callMethod('apiCall', method, qs, responseCb);
          } else {
            VK.Observer.subscribe('xdm.init', function() {
              VK.XDM.remote.callMethod('apiCall', method, qs, responseCb);
            });
            VK.XDM.init();
          }
        } else {
          VK.Api._callbacks[rnd] = responseCb;
          VK.Api.attachScript(VK._domain.api + 'method/' + method +'?' + qs);
        }
      },

      queryLength: function(query) {
        var len = 100, i; // sid + sig
        for (i in query) {
          len += i.length + encodeURIComponent(query[i]).length + 1;
        }
        return len;
      }
    };

// Alias
    VK.api = function(method, params, cb) {VK.Api.call(method, params, cb);}
  };

  if (!VK.Auth) {
    VK.Auth = {
      popup: null,
      lsCb: {},

      setSession: function(session, status, settings, resp) {
        var
            login = !VK._session && session,
            logout = VK._session && !session,
            both = VK._session && session && VK._session.mid != session.mid,
            sessionChange = login || logout || (VK._session && session && VK._session.sid != session.sid),
            statusChange = status != VK._userStatus,
            response = {
              'session': session,
              'status': status,
              'settings': settings
            };

        VK._session = session;

        VK._userStatus = status;

        VK.Cookie.set(session, resp);

        if (sessionChange || statusChange || both) {
          setTimeout(function() {
            if (statusChange) {
              VK.Observer.publish('auth.statusChange', response);
            }

            if (logout || both) {
              VK.Observer.publish('auth.logout', response);
            }

            if (login || both) {
              VK.Observer.publish('auth.login', response);
            }

            if (sessionChange) {
              VK.Observer.publish('auth.sessionChange', response);
            }
          }, 0);
        }

        return response;
      },

      // Public VK.Auth methods
      login: function(cb, settings) {
        if (!VK._apiId) {
          return false;
        }

        var url = VK._domain.main + VK._path.login + '?client_id='+VK._apiId+'&display=popup&redirect_uri=close.html&response_type=token';
        if (settings && parseInt(settings, 10) > 0) {
          url += '&scope=' + settings;
        }

        VK.Observer.unsubscribe('auth.onLogin');
        VK.Observer.subscribe('auth.onLogin', cb);

        VK.UI.popup({
          width: 665,
          height: 370,
          url: url
        });

        var authCallback = function() {
          VK.Auth.getLoginStatus(function(resp) {
            VK.Observer.publish('auth.onLogin', resp);
            VK.Observer.unsubscribe('auth.onLogin');
          }, true);
        }

        VK.UI.popupOpened = true;
        var popupCheck = function() {
          if (!VK.UI.popupOpened) {
            return false;
          }

          try {
            if (!VK.UI.active.top || VK.UI.active.closed) {
              VK.UI.popupOpened = false;
              authCallback();
              return true;
            }
          } catch(e) {
            VK.UI.popupOpened = false;
            authCallback();
            return true;
          }
          setTimeout(popupCheck, 100);
        };

        setTimeout(popupCheck, 100);
      },

      // Logout user from app, vk.com & login.vk.com
      logout: function(cb) {
        VK.Auth.revokeGrants(cb);
      },

      revokeGrants: function(cb) {
        var onLogout = function(resp) {
          VK.Observer.unsubscribe('auth.statusChange', onLogout);
          if (cb) {
            cb(resp);
          }
        }

        VK.Observer.subscribe('auth.statusChange', onLogout);
        if (VK._session && VK._session.sid) {
          var url = 'https://login.vk.com/?act=openapi&oauth=1&aid=' + parseInt(VK._apiId, 10) + '&location=' + encodeURIComponent(window.location.hostname) + '&do_logout=1&token=' + VK._session.sid;
          if (VK.Api.supportCORS()) {
            var logoutCallback = function() {
              VK.Auth.setSession(null, 'unknown');
            };

            VK.Api.makeRequest(url + '&new=1', logoutCallback);
          } else {
            VK.Api.attachScript(url);
          }
        }

        VK.Cookie.clear();
      },

      // Get current login status from session (sync) (not use on load time)
      getSession: function() {
        return VK._session;
      },

      // Get current login status from vk.com (async)
      getLoginStatus: function(cb, force) {
        if (!VK._apiId) {
          return;
        }

        if (cb) {
          if (!force && VK.Auth._loadState == 'loaded') {
            cb({status: VK._userStatus, session: VK._session});
            return;
          } else {
            VK.Observer.subscribe('auth.loginStatus', cb);
          }
        }

        if (!force && VK.Auth._loadState == 'loading') {
          return;
        }

        VK.Auth._loadState = 'loading';

        var url = 'https://login.vk.com/?act=openapi&oauth=1&aid=' + parseInt(VK._apiId, 10) + '&location=' + encodeURIComponent(window.location.hostname);
        if (VK.Api.supportCORS()) {
          var loginCallback = function(response) {
            if (!this.JSON) {
              this.JSON = {};
            }

            if (typeof JSON.parse !== 'function') {
              //IE6 and IE7
              response = eval(response);
            } else {
              response = JSON.parse(response);
            }

            VK.Auth._loadState = 'loaded';
            if (response && response.auth) {
              var session = {
                mid: response.user.id,
                sid: response.access_token,
                sig: response.sig,
                secret: response.secret,
                expire: response.expire
              };

              if (force) {
                session.user = response.user;
              }

              var status = 'connected';
            } else {
              var session = null;
              var status = response.user ? 'not_authorized' : 'unknown';
              VK.Cookie.clear();
            }

            VK.Auth.setSession(session, status, false, response);
            VK.Observer.publish('auth.loginStatus', {session: session, status: status});
            VK.Observer.unsubscribe('auth.loginStatus');
          };

          VK.Api.makeRequest(url + '&new=1', loginCallback);
        } else {
          var rnd = parseInt(Math.random() * 10000000, 10);
          while (VK.Auth.lsCb[rnd]) {
            rnd = parseInt(Math.random() * 10000000, 10);
          }

          VK.Auth.lsCb[rnd] = function(response) {
            delete VK.Auth.lsCb[rnd];
            VK.Auth._loadState = 'loaded';
            if (response && response.auth) {
              var session = {
                mid: response.user.id,
                sid: response.access_token,
                sig: response.sig,
                secret: response.secret,
                expire: response.expire
              };
              if (force) session.user = response.user;
              var status = 'connected';
            } else {
              var session = null;
              var status = response.user ? 'not_authorized' : 'unknown';
              VK.Cookie.clear();
            }
            VK.Auth.setSession(session, status, false, response);
            VK.Observer.publish('auth.loginStatus', {session: session, status: status});
            VK.Observer.unsubscribe('auth.loginStatus');
          };

            // AttachScript here
          VK.Api.attachScript(url+'&rnd='+rnd);
        }
      }
    };
  }

} else { // if VK.xdConnectionCallbacks
  setTimeout(function() {
    var callback;
    while (callback = VK.xdConnectionCallbacks.pop()) {
      callback();
    }
  }, 0);
  if (VK.Widgets && !VK.Widgets._constructor) {
    VK.Widgets = false;
  }
}

if (!VK.UI) {
  VK.UI = {
    active: null,
    _buttons: [],
    popup: function(options) {
      var
          screenX = typeof window.screenX != 'undefined' ? window.screenX : window.screenLeft,
          screenY = typeof window.screenY != 'undefined' ? window.screenY : window.screenTop,
          outerWidth = typeof window.outerWidth != 'undefined' ? window.outerWidth : document.body.clientWidth,
          outerHeight = typeof window.outerHeight != 'undefined' ? window.outerHeight : (document.body.clientHeight - 22),
          width = options.width,
          height = options.height,
          left = parseInt(screenX + ((outerWidth - width) / 2), 10),
          top = parseInt(screenY + ((outerHeight - height) / 2.5), 10),
          features = (
              'width=' + width +
              ',height=' + height +
              ',left=' + left +
              ',top=' + top
          );
      this.active = window.open(options.url, 'vk_openapi', features);
    },
    button: function(el, handler) {
      var html = '';

      if (typeof el == 'string') {
        el = document.getElementById(el);
      }


      this._buttons.push(el);
      index = this._buttons.length - 1;

      html = (
          '<table cellspacing="0" cellpadding="0" id="openapi_UI_' + index + '" onmouseover="VK.UI._change(1, ' + index + ');" onmouseout="VK.UI._change(0, ' + index + ');" onmousedown="VK.UI._change(2, ' + index + ');" onmouseup="VK.UI._change(1, ' + index + ');" style="cursor: pointer; border: 0px; font-family: tahoma, arial, verdana, sans-serif, Lucida Sans; font-size: 10px;"><tr style="vertical-align: middle">' +
          '<td><div style="border: 1px solid #3b6798;border-radius: 2px 0px 0px 2px;-moz-border-radius: 2px 0px 0px 2px;-webkit-border-radius: 2px 0px 0px 2px;"><div style="border: 1px solid #5c82ab; border-top-color: #7e9cbc; background-color: #6D8DB1; color: #fff; text-shadow: 0px 1px #45688E; height: 15px; padding: 2px 4px 0px 6px;line-height: 13px;">&#1042;&#1086;&#1081;&#1090;&#1080;</div></div></td>' +
          '<td><div style="background: url(' + VK._protocol + '//vk.com/images/btns.png) 0px -42px no-repeat; width: 21px; height: 21px"></div></td>' +
          '<td><div style="border: 1px solid #3b6798;border-radius: 0px 2px 2px 0px;-moz-border-radius: 0px 2px 2px 0px;-webkit-border-radius: 0px 2px 2px 0px;"><div style="border: 1px solid #5c82ab; border-top-color: #7e9cbc; background-color: #6D8DB1; color: #fff; text-shadow: 0px 1px #45688E; height: 15px; padding: 2px 6px 0px 4px;line-height: 13px;">&#1050;&#1086;&#1085;&#1090;&#1072;&#1082;&#1090;&#1077;</div></div></td>' +
          '</tr></table>'
      );
      el.innerHTML = html;
      el.style.width = el.childNodes[0].offsetWidth + 'px';
    },
    _change: function(state, index) {
      var row = document.getElementById('openapi_UI_' + index).rows[0];
      var elems = [row.cells[0].firstChild.firstChild, row.cells[2].firstChild.firstChild];
      for (var i = 0; i < 2; ++i) {
        var elem = elems[i];
        if (state === 0) {
          elem.style.backgroundColor = '#6D8DB1';
          elem.style.borderTopColor = '#7E9CBC';
          elem.style.borderLeftColor = elem.style.borderRightColor = elem.style.borderBottomColor = '#5C82AB';
        } else if (state == 1) {
          elem.style.backgroundColor = '#7693B6';
          elem.style.borderTopColor = '#88A4C4';
          elem.style.borderLeftColor = elem.style.borderRightColor = elem.style.borderBottomColor = '#6088B4';
        } else if (state == 2) {
          elem.style.backgroundColor = '#6688AD';
          elem.style.borderBottomColor = '#7495B8';
          elem.style.borderLeftColor = elem.style.borderRightColor = elem.style.borderTopColor = '#51779F';
        }
      }
      if (state === 0 || state == 2) {
        row.cells[2].firstChild.style.backgroundPosition = '0px -42px';
      } else if (state == 1) {
        row.cells[2].firstChild.style.backgroundPosition = '0px -63px';
      }
    }
  };
}

if (!VK.XDM) {
  VK.XDM = {
    remote: null,
    init: function() {
      if (this.remote) return false;
      var url = VK._domain.api + VK._path.proxy;
      this.remote = new fastXDM.Server({
        onInit: function() {
          VK.xdReady = true;
          VK.Observer.publish('xdm.init');
        }
      });

      this.remote.append(document.getElementById(VK._rootId), {
        src: url
      });
    },
    xdHandler: function(code) {
      try {
        eval('VK.' + code);
      } catch(e) {}
    }
  };
}

if (!VK.Observer) {
  VK.Observer = {
    _subscribers: function() {
      if (!this._subscribersMap) {
        this._subscribersMap = {};
      }
      return this._subscribersMap;
    },
    publish: function(eventName) {
      var
          args = Array.prototype.slice.call(arguments),
          eventName = args.shift(),
          subscribers = this._subscribers()[eventName],
          i, j;

      if (!subscribers) return;

      for (i = 0, j = subscribers.length; i < j; i++) {
        if (subscribers[i] != null) {
          subscribers[i].apply(this, args);
        }
      }
    },
    subscribe: function(eventName, handler) {
      var
          subscribers = this._subscribers();

      if (typeof handler != 'function') return false;

      if (!subscribers[eventName]) {
        subscribers[eventName] = [handler];
      } else {
        subscribers[eventName].push(handler);
      }
    },
    unsubscribe: function(eventName, handler) {
      var
          subscribers = this._subscribers()[eventName],
          i, j;

      if (!subscribers) return false;
      if (typeof handler == 'function') {
        for (i = 0, j = subscribers.length; i < j; i++) {
          if (subscribers[i] == handler) {
            subscribers[i] = null;
          }
        }
      } else {
        delete this._subscribers()[eventName];
      }
    }
  };
}

if (!VK.Widgets) {
  VK.Widgets = {};

  VK.Widgets.count = 0;
  VK.Widgets.RPC = {};

  VK.Widgets.showBoxUrl = function(domain, url) {
    domain = (domain || VK._protocol + '//vk.com').replace(/\/?\s*$/, '');
    url = url.replace(/^\s*\/?/, '');
    return domain + '/' + url;
  };

  VK.Widgets.loading = function(obj, enabled) {
    obj.style.background = enabled ? 'url("' + VK._protocol + '//vk.com/images/upload.gif") center center no-repeat transparent' : 'none';
  };

  VK.Widgets.Comments = function(objId, options, page) {
    var pData = VK.Util.getPageData();
    if (!VK._apiId) throw Error('VK not initialized. Please use VK.init');
    options = options || {};

    var obj = document.getElementById(objId),
      params = {
        limit: options.limit || 10,
        height: options.height || 0,
        mini: options.mini === undefined ? 'auto' : options.mini,
        norealtime: options.norealtime ? 1 : 0
      }, mouseup = function() {
        rpc.callMethod('mouseUp');
        return false;
      }, move = function(event) {
        rpc.callMethod('mouseMove', {screenY: event.screenY});
      }, iframe, rpc;

    if (options.browse) { // browse all comments
      params.browse = 1;
      params.replies = options.replies || 0;
    } else { // page
      var url = options.pageUrl || pData.url;
      if (url.substr(0, 1) == '/') {
        url = (location.protocol + '//' + location.host) + url;
      }
      VK.extend(params, {
        page: page || 0,
        status_publish: options.autoPublish === undefined ? 0 : options.autoPublish,
        attach: options.attach === undefined ? '*' : (options.attach ? options.attach : ''),
        url: url,
        title: options.pageTitle || pData.title,
        description: options.pageDescription || pData.description,
        image: options.pageImage || pData.image
      });
    }
    if (options.onChange) { // DEPRECATED
      VK.Observer.subscribe('widgets.comments.new_comment', options.onChange);
      VK.Observer.subscribe('widgets.comments.delete_comment', options.onChange);
    }

    return VK.Widgets._constructor('widget_comments.php', objId, options, params, {
      showBox: function(url, props) {
        var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
          proxy: function() {
            rpc.callMethod.apply(rpc, arguments);
          }
        });
        box.show();
      },
      startDrag: function() {
        cursorBack = window.document.body.style.cursor;
        window.document.body.style.cursor = 'pointer';
        VK.Util.addEvent('mousemove', move);
        VK.Util.addEvent('mouseup', mouseup);
      },
      stopDrag: function() {
        window.document.body.style.cursor = cursorBack;
        VK.Util.removeEvent('mousemove', move);
        VK.Util.removeEvent('mouseup', mouseup);
      }
    }, {
      startHeight: 133,
      minWidth: 300
    }, function(o, i, r) {iframe = i; rpc = r;});
  };

  VK.Widgets.CommentsBrowse = function(objId, options) {
    options = options || {};
    options.browse = 1;
    return VK.Widgets.Comments(objId, options);
  };

  VK.Widgets.Recommended = function(objId, options) {
    var pData = VK.Util.getPageData();
    if (!VK._apiId) throw Error('VK not initialized. Please use VK.init');
    options = options || {};
    var params = {
      limit: options.limit || 5,
      max: options.max || 0,
      sort: options.sort || 'friend_likes',
      verb: options.verb || 0,
      period: options.period || 'week',
      target: options.target || 'parent'
    };
    return VK.Widgets._constructor('widget_recommended.php', objId, options, params, {}, {
      startHeight: (116 + params.limit * 47 - 15),
      minWidth: 150
    });
  };

  VK.Widgets.Post = function(objId, ownerId, postId, hash, options) {
    options = options || {};
    var obj = document.getElementById(objId),
      params = {
        owner_id: ownerId,
        post_id: postId,
        hash: hash || ''
      }, iframe, rpc, cursorBack;
    if (options.preview) {
      params.preview = 1;
      delete options['preview'];
    }
    return VK.Widgets._constructor('widget_post.php', objId, options, params, {
      showBox: function(url, props) {
        var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
          proxy: function() {
            rpc.callMethod.apply(rpc, arguments);
          }
        });
        box.show();
      },
      startDrag: function() {
        cursorBack = window.document.body.style.cursor;
        window.document.body.style.cursor = 'pointer';
      },
      stopDrag: function() {
        window.document.body.style.cursor = cursorBack;
      }
    }, {
      startHeight: 90,
      minWidth: 250
    }, function(o, i, r) {iframe = i; rpc = r;});
  };

  VK.Widgets.Like = (function(Like) {
    if (Like) return Like;

    var instances = [];

    Like = function(objId, options, page) {
      var pData = VK.Util.getPageData();
      if (!VK._apiId) throw Error('VK not initialized. Please use VK.init');
      options = VK.extend(options || {}, {allowTransparency: true});
      var verticalBtnHeightWidth = {
            18: 43,
            20: 47,
            22: 51,
            24: 55,
            30: 67,
          },
          type = (options.type == 'full' || options.type == 'button' || options.type == 'vertical' || options.type == 'mini') ? options.type : 'full',
          autoWidth = options.width === 'auto' && (type == 'button' || type == 'mini'),
          btnHeight = parseInt(options.height, 10) || 22,
          size = btnHeight && verticalBtnHeightWidth[btnHeight] ? btnHeight : 22,
          width = autoWidth ? 153 : (type == 'full' ? Math.max(200, options.width || 350) : (type == 'button' ? 180 : (type == 'mini' ? 115 : verticalBtnHeightWidth[size]))),
          height = type == 'vertical' ? (2 * btnHeight + 7) : btnHeight,
          params = {
            page: page || 0,
            url: options.pageUrl || pData.url,
            type: type,
            verb: options.verb == 1 ? 1 : 0,
            color: options.color || '',
            title: options.pageTitle || pData.title,
            description: options.pageDescription || pData.description,
            image: options.pageImage || pData.image,
            text: (options.text || '').substr(0, 140),
            h: btnHeight
          },
          ttHere = options.ttHere || false,
          isOver = false,
          hideTimeout = null,
          obj, buttonIfr, buttonRpc, tooltipIfr, tooltipRpc, checkTO, statsBox;
      if (type == 'vertical' || type == 'button' || type == 'mini') delete options.width;
      if (autoWidth) params.auto_width = 1;
      function showTooltip(force) {
        if ((!isOver && !force) || !tooltipRpc) return;
        if (!tooltipIfr || !tooltipRpc || tooltipIfr.style.display != 'none' && tooltipIfr.getAttribute('vkhidden') != 'yes') return;
        hideTimeout && clearTimeout(hideTimeout);
        checkTO && clearTimeout(checkTO);
        var scrollTop = options.getScrollTop ? options.getScrollTop() : (document.body.scrollTop || document.documentElement.scrollTop || 0);
        var objPos = VK.Util.getXY(obj, options.fixed);
        var startY = ttHere ? 0 : objPos[1];
        if (scrollTop > objPos[1] - 120 && options.tooltipPos != 'top' || type == 'vertical' || options.tooltipPos == 'bottom') {
          tooltipIfr.style.top = (startY + height + 2) + 'px';
          tooltipRpc.callMethod('show', false, type+'_'+size);
        } else {
          tooltipIfr.style.top = (startY - 128) + 'px';
          tooltipRpc.callMethod('show', true, type+'_'+size);
        }
        VK.Util.ss(tooltipIfr, {left: (ttHere ? 0 : objPos[0]) - (type == 'full' || type == 'button' ? 32 : 2) + 'px', display: 'block', opacity: 1, filter: 'none'});
        tooltipIfr.setAttribute('vkhidden', 'no');
        isOver = true;
      }

      function hideTooltip(force) {
        if ((isOver && !force) || !tooltipRpc) return;
        tooltipRpc.callMethod('hide');
        buttonRpc.callMethod('hide');
        hideTimeout = setTimeout(function() {
          tooltipIfr.style.display = 'none'
        }, 400);
      }

      function handleStatsBox(act) {
        hideTooltip(true);
        statsBox = VK.Util.Box(buttonIfr.src + '&act=a_stats_box&widget_width=638&from=wlike');
        statsBox.show();
      }

      var widgetId = VK.Widgets._constructor('widget_like.php', objId, options, params, {
        initTooltip: function(counter) {
          tooltipRpc = new fastXDM.Server({
            onInit: counter ? function() {
                showTooltip();
              } : function() {},
            proxy: function() {
              buttonRpc.callMethod.apply(buttonRpc, arguments);
            },
            showBox: function(url, props) {
              var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [props.width, props.height], {
                proxy: function() {
                  tooltipRpc.callMethod.apply(tooltipRpc, arguments);
                }
              });
              box.show();
            },
            statsBox: handleStatsBox
          }, false, {safe: true});
          tooltipIfr = tooltipRpc.append(ttHere ? obj : document.body, {
            src: buttonIfr.src + '&act=a_like_tooltip',
            scrolling: 'no',
            allowTransparency: true,
            id: buttonIfr.id + '_tt',
            style: {position: 'absolute', padding: 0, display: 'none', opacity: 0.01, filter: 'alpha(opacity=1)', border: '0', width: '274px', height: '130px', zIndex: 5000, overflow: 'hidden'}
          });
          tooltipIfr.setAttribute('vkhidden', 'yes');

          tooltipIfr.onmouseover = function() {
            clearTimeout(checkTO);
            isOver = true;
          };
          tooltipIfr.onmouseout = function() {
            clearTimeout(checkTO);
            isOver = false;
            checkTO = setTimeout(function() {hideTooltip(); }, 200);
          };
        },
        statsBox: handleStatsBox,
        showTooltip: showTooltip,
        hideTooltip: hideTooltip,
        destroy: function() {
          buttonRpc.destroy();
          try {buttonIfr.src = 'about: blank;';} catch (e) {}
          buttonIfr.parentNode.removeChild(buttonIfr);
          if (tooltipIfr) {
            try {tooltipIfr.src = 'about: blank;';} catch (e) {}
            tooltipIfr.parentNode.removeChild(tooltipIfr);
          }
          tooltipRpc && tooltipRpc.destroy();
          if (statsBox) {
            if (statsBox.iframe) {
              try {statsBox.iframe.src = 'about: blank;';} catch (e) {}
              statsBox.iframe.parentNode.removeChild(statsBox.iframe);
            }
            statsBox.rpc && statsBox.rpc.destroy();
          }
        },
        showBox: function(url, props) {
          var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
            proxy: function() {
              buttonRpc.callMethod.apply(buttonRpc, arguments);
            }
          });
          box.show();
        },
        proxy: function() {if (tooltipRpc) tooltipRpc.callMethod.apply(tooltipRpc, arguments);}
      }, {
        startHeight: height,
        minWidth: width
      }, function(o, i, r) {
        buttonRpc = r;
        VK.Util.ss(obj = o, {height: height + 'px', width: width + 'px', position: 'relative', clear: 'both'});
        VK.Util.ss(buttonIfr = i, {height: height + 'px', width: width + 'px', overflow: 'hidden', zIndex: 150});
        obj.onmouseover = function() {
          clearTimeout(checkTO);
          isOver = true;
        };
        obj.onmouseout = function() {
          clearTimeout(checkTO);
          isOver = false;
          checkTO = setTimeout(function() {hideTooltip(); }, 200);
        };
      });

      instances.push(widgetId);
      return widgetId;
    };

    Like.destroyAll = function() {
      var xdm = null;
      while (instances[0]) {
        xdm = VK.Widgets.RPC[instances.pop()];
        xdm && xdm.methods.destroy();
      }
    }

    return Like;
  })(VK.Widgets.Like);

  VK.Widgets.Poll = function(objId, options, pollId) {
    var pData = VK.Util.getPageData();
    if (!pollId) throw Error('No poll id passed');
    options = options || {};
    var params = {
      poll_id: pollId,
      url: options.pageUrl || pData.url || location.href,
      title: options.pageTitle || pData.title,
      description: options.pageDescription || pData.description
    };
    return VK.Widgets._constructor('al_widget_poll.php', objId, options, params, {}, {
      startHeight: 144,
      minWidth: 300
    });
  };

  VK.Widgets.Community = VK.Widgets.Group = function(objId, options, gid) {
    gid = parseInt(gid, 10);
    if (!gid) {
      throw Error('No group_id passed');
    }
    options.mode = parseInt(options.mode, 10).toString();
    var params = {
        gid: gid,
        mode: (options.mode) ? options.mode : '0'
      },
      startHeight = options.mode == 3 ? 185 : (options.mode == 1 ? 141 : options.height|0 || 290),
      rpc;
    if (options.wall) params.wall = options.wall;
    params.color1 = options.color1 || '';
    params.color2 = options.color2 || '';
    params.color3 = options.color3 || '';
    params.class_name = options.class_name || '';
    if (options.no_head) params.no_head = 1;
    if (options.no_cover) params.no_cover = 1;
    if (options.wide) {
      params.wide = 1;
      if (!options.width || options.width < 300) {
        options.width = 300;
      }
    }
    if (!options.width|0) options.width = 200;

    var cursorBack;

    function mouseup() {
      rpc.callMethod('mouseUp');
      return false;
    }

    function move(event) {
      rpc.callMethod('mouseMove', {screenY: event.screenY});
      return false;
    }

    return VK.Widgets._constructor('widget_community.php', objId, options, params, {
      showBox: function(url, props) {
        var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
          proxy: function() {
            rpc.callMethod.apply(rpc, arguments);
          }
        });
        box.show();
      },
      startDrag: function() {
        cursorBack = window.document.body.style.cursor;
        window.document.body.style.cursor = 'pointer';
        VK.Util.addEvent('mousemove', move);
        VK.Util.addEvent('mouseup', mouseup);
      },
      stopDrag: function() {
        window.document.body.style.cursor = cursorBack;
        VK.Util.removeEvent('mousemove', move);
        VK.Util.removeEvent('mouseup', mouseup);
      },
      auth: function() {
        VK.Auth.login(null, 1);
      }
    }, {
      minWidth: 120,
      maxWidth: 1200,
      startHeight: startHeight
    }, function(o, i, r) {
      rpc = r;
    });
  };

  VK.Widgets.Auth = function(objId, options) {
    var pData = VK.Util.getPageData();
    if (!VK._apiId) throw Error('VK not initialized. Please use VK.init');
    if (!options.width) {
      options.width = 200;
    }
    if (options.type) {
      type = 1;
    } else {
      type = 0;
    }
    return VK.Widgets._constructor('widget_auth.php', objId, options, {}, {makeAuth: function(data) {
      if (data.session) {
        VK.Auth._loadState = 'loaded';
        VK.Auth.setSession(data.session, 'connected');
        VK.Observer.publish('auth.loginStatus', {session: data.session, status: 'connected'});
        VK.Observer.unsubscribe('auth.loginStatus');
      }
      if (options.onAuth) {
        options.onAuth(data);
      } else {
        if (options.authUrl) {
          var href = options.authUrl;
        } else {
          var href = window.location.href;
        }
        if (href.indexOf('?') == -1) {
          href+='?';
        } else {
          href+='&';
        }
        var vars = [];

        for (var i in data) {
          if (i != 'session') vars.push(i+'='+decodeURIComponent(data[i]).replace(/&/g, '%26').replace(/\?/, '%3F'));
        }
        window.location.href = href + vars.join('&');
      }
    }}, {
      startHeight: 134
    });
  };

  VK.Widgets.Subscribe = function(objId, options, oid) {
    oid = parseInt(oid, 10);
    if (!oid) {
      throw Error('No owner_id passed');
    }
    var params = {
      oid: oid
    }, rpc;
    if (options.mode) {
      params.mode = options.mode;
    }
    if (options.soft) {
      params.soft = options.soft;
    }

    return VK.Widgets._constructor('widget_subscribe.php', objId, options, params, {
      showBox: function(url, props) {
        var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
          proxy: function() {
            rpc.callMethod.apply(rpc, arguments);
          }
        });
        box.show();
      },
      auth: function() {
        VK.Auth.login(null, 1);
      }
    }, {
      minWidth: 220,
      startHeight: 22
    }, function(o, i, r) {
      rpc = r;
    });
  };

  VK.Widgets.ContactUs = function(objId, options, oid) {
    oid = parseInt(oid, 10);

    if (!options) options = {};
    if (!oid) throw Error('No group or user id passed');

    var params = {
      oid: oid,
      height: ({18: 18, 20: 20, 22: 22, 24: 24, 30: 30})[parseInt(options.height, 10) || 24],
      text: (options.text || '').substr(0, 140)
    }, rpc;

    return VK.Widgets._constructor('widget_contactus.php', objId, options, params, {}, {
      startHeight: params.height,
      height: params.height
    }, function(o, i, r) {
      rpc = r;
    });
  };

  VK.Widgets.Ads = function(objId, options, paramsExtra) {
    options = options || {};
    paramsExtra = paramsExtra || {};
    var params = {};
    var defaults = {};
    var funcs = {};
    var obj = document.getElementById(objId);
    var iframe;
    var rpc;

    var adsParams = {};
    var adsParamsLocal = {};
    var adsParamsDefault = {};
    for (var key in paramsExtra) {
      var keyFix = (inArray(key, ['hash']) ? key : 'ads_' + key);
      adsParams[keyFix] = paramsExtra[key];
    }

    if (obj && obj.getBoundingClientRect) {
      obj.style.width  = '100%';
      obj.style.height = '100%';
      var rect = obj.getBoundingClientRect();
      obj.style.width  = '';
      obj.style.height = '';
      adsParams.ads_ad_unit_width_auto  = Math.floor(rect.right - rect.left);
      adsParams.ads_ad_unit_height_auto = Math.floor(rect.bottom - rect.top);
    }

    adsParamsDefault.ads_ad_unit_width  = 100;
    adsParamsDefault.ads_ad_unit_height = 100;

    adsParamsLocal.ads_ad_unit_width  = (parseInt(adsParams.ads_ad_unit_width)  || adsParams.ads_ad_unit_width === 'auto'  && adsParams.ads_ad_unit_width_auto  || adsParamsDefault.ads_ad_unit_width);
    adsParamsLocal.ads_ad_unit_height = (parseInt(adsParams.ads_ad_unit_height) || adsParams.ads_ad_unit_height === 'auto' && adsParams.ads_ad_unit_height_auto || adsParamsDefault.ads_ad_unit_height);
    if (adsParams.ads_handler) {
      adsParamsLocal.ads_handler = adsParams.ads_handler;
    }
    if (adsParams.ads_handler_empty_html) {
      adsParamsLocal.ads_handler_empty_html = adsParams.ads_handler_empty_html;
    }

    delete adsParams.ads_handler;
    delete adsParams.ads_handler_empty_html;

    params.act = 'ads_web';
    params.url = location.href;
    VK.extend(params, adsParams);

    options.noDefaultParams   = true;
    options.width             = adsParamsLocal.ads_ad_unit_width;
    options.allowTransparency = true;
    defaults.startHeight = adsParamsLocal.ads_ad_unit_height;
    defaults.minWidth    = adsParamsLocal.ads_ad_unit_width;
    funcs.adsOnInitLoader = adsOnInitLoader;
    funcs.adsOnInit       = adsOnInit;

    return VK.Widgets._constructor('ads_rotate.php', objId, options, params, funcs, defaults, onDone);

    function adsOnInitLoader(adsScriptVersion) {
      VK.Widgets.loading(obj, true);
      adsAttachScript(adsScriptVersion);
    }
    function adsOnInit(errorCode, adsParamsExport) {
      VK.Widgets.loading(obj, false);
      adsProcessParams(adsParamsExport);
      if (options.onAdsReady) options.onAdsReady.apply(options.onAdsReady, Array.prototype.slice.call(arguments));
      adsProcessHandler(errorCode);
    }
    function adsAttachScript(adsScriptVersion) {
      if (!('vk__adsLight' in window)) {
        window.vk__adsLight = false;
        adsScriptVersion = parseInt(adsScriptVersion);
        var attachScriptFunc = (VK.Api && VK.Api.attachScript || VK.addScript);
        var base_domain = (options.base_domain || VK._protocol + '//vk.com');
        attachScriptFunc(base_domain + '/js/al/aes_light.js?' + adsScriptVersion);
      } else if (window.vk__adsLight && vk__adsLight.userHandlers && vk__adsLight.userHandlers.onInit) {
        vk__adsLight.userHandlers.onInit(false); // false - do not publish initial onInit
      }
    }
    function adsProcessParams(adsParamsExport) {
      if (!adsParamsExport) {
        return;
      }
      for (var paramName in adsParamsExport) {
        var paramValue = adsParamsExport[paramName];
        if (paramName === 'ads_ad_unit_width' || paramName === 'ads_ad_unit_height') {
          if (!(paramName in adsParams)) {
            adsParamsLocal[paramName] = (parseInt(paramValue) || paramValue === 'auto' && adsParams[paramName + '_auto'] || adsParamsDefault[paramName]);
          }
        } else {
          if (!(paramName in adsParamsLocal)) {
            adsParamsLocal[paramName] = paramValue;
          }
        }
      }
    }
    function adsProcessHandler(errorCode) {
      var handlerResult = adsEvalHandler(adsParamsLocal.ads_handler, errorCode);
      if (errorCode <= 0 && handlerResult !== true) {
        try { console.log('VK: ad_unit_id = ' + adsParams.ads_ad_unit_id, ', errorCode = ', errorCode); } catch (e) {}
        adsInsertHtmlHandler(adsParamsLocal.ads_handler_empty_html, adsParamsLocal.ads_ad_unit_width, adsParamsLocal.ads_ad_unit_height);
      }
    }
    function adsEvalHandler(handler) {
      var result = false;
      try {
        if (!handler) {
          return false;
        }
        var func = false;
        if (isFunction(handler)) {
          func = handler;
        } else if (isString(handler)) {
          var handlerFuncs = handler.split('.');
          func = window;
          for (var i = 0, len = handlerFuncs.length; i < len; i++) {
            func = func[handlerFuncs[i]];
            if (!func) {
              break;
            }
          }
          if (!func) {
            if (handler.substr(0, 8) === 'function') {
              handler = 'return ' + handler + ';';
            }
            var handlerResult = (new Function(handler))();
            if (isFunction(handlerResult)) {
              func = handlerResult;
            } else {
              result = handlerResult;
            }
          }
        }
        if (func) {
          var args = Array.prototype.slice.call(arguments, 1);
          result = func.apply(func, args);
        }
      } catch (e) {
        try {
          console.error(e);
        } catch (e2) {}
      }

      return result;

      function isFunction(obj) {
        return Object.prototype.toString.call(obj) === '[object Function]';
      }
      function isString(obj) {
        return Object.prototype.toString.call(obj) === '[object String]';
      }
    }
    function adsInsertHtmlHandler(handlerHtml, width, height) {
      if (!handlerHtml) {
        return;
      }
      if (!obj) {
        return;
      }

      width  = (width  ? width  + 'px' : '');
      height = (height ? height + 'px' : '');

      var iframeHandlerHtml = '<html><head></head><body style="padding: 0; margin: 0;"><div>' + handlerHtml + '</div></body></html>';

      var iframeHandler = document.createElement('iframe');
      iframeHandler.onload            = fixIframeHeight;
      iframeHandler.id                = (iframe ? iframe.id : ('vkwidget-' + Math.round(Math.random() * 1000000))) + '_ads_html_handler';
      iframeHandler.src               = 'about:blank';
      iframeHandler.width             = '100%';
      iframeHandler.height            = '100%';
      iframeHandler.scrolling         = 'no';
      iframeHandler.frameBorder       = '0';
      iframeHandler.allowTransparency = true;
      iframeHandler.style.overflow    = 'hidden';
      iframeHandler.style.width       = width;
      iframeHandler.style.height      = height;

      obj.style.width                 = width;
      obj.style.height                = height;

      obj.appendChild(iframeHandler);

      iframeHandler.contentWindow.vk_ads_html_handler = iframeHandlerHtml;
      iframeHandler.src = 'javascript:window["vk_ads_html_handler"]';

      function fixIframeHeight() {
        if (height) {
          return;
        }
        try {
          var rect = iframeHandler.contentWindow.document.body.firstChild.getBoundingClientRect();
          var heightFix = Math.ceil(rect.bottom - rect.top);
          if (heightFix) {
            iframeHandler.style.height = heightFix;
            obj.style.height           = heightFix;
          }
        } catch (e) {}
      }
    }
    function indexOf(arr, value, from) {
      for (var i = from || 0, l = (arr || []).length; i < l; i++) {
        if (arr[i] == value) return i;
      }
      return -1;
    }
    function inArray(value, arr) {
      return indexOf(arr, value) != -1;
    }
    function onDone(o, i, r) {
      obj = o;
      iframe = i;
      rpc = r;
    }
  };

  VK.Widgets.AllowMessagesFromCommunity = function (objId, options, groupId) {
    groupId = parseInt(groupId, 10);

    if (!options) options = {};
    if (!groupId || groupId < 0) throw Error('No group id passed');

    var params = {
      height: ({22: 22, 24: 24, 30: 30})[parseInt(options.height, 10) || 24],
      key: options.key ? options.key.substr(0, 256) : '',
      group_id: groupId
    }, rpc;

    return VK.Widgets._constructor('widget_allow_messages_from_community.php', objId, options, params, {}, {
      startHeight: params.height,
      height: params.height
    }, function(o, i, r) {
      rpc = r;
    });
  };

  VK.Widgets.CommunityMessages = (function(CommunityMessages) {
    if (CommunityMessages) return CommunityMessages;

    var instances = {}, wCur = {};
    var BUTTONS_CONF = {
      no_button: {width: 0, height: 0},
      blue_circle: {
        width: 50,
        height: 50,
        margin: {
          bottom: 20
        }
      }
    }, DEFAULT_BUTTON_TYPE = 'blue_circle',
    BUTTON_POSITIONS = {
      left: {
        bottom: 0,
        left: 20
      },
      right: {
        bottom: 0,
        right: 20
      }
    }, DEFAULT_BUTTON_POSITION = 'right';

    /* options
      - welcomeScreen
      - expandTimeout
      - shown || expended
      - widgetPosition
      - buttonType
      - disableButtonTooltip
      - tooltipButtonText
      - disableNewMessagesSound
      - disableExpandChatSound
      - disableTitleChange
    */
    CommunityMessages = function(objId, gid, options) {
      options = options || {};

      options.width = 300;
      options.height = 399;

      if (!options.base_domain) {
        options.base_domain = options.base_domain || VK._protocol + '//vk.com';
      }

      options.expandTimeout = parseInt(options.expandTimeout) || 0;

      var params = {
        gid: gid
      };

      options.expanded = parseInt(options.expanded) || 0;

      if (!options.from_dev && lsGet('expanded') != null || options.expanded) {
        options.shown = 1;
      }

      if (options.shown) {
        params.shown = 1;
      }

      if (!options.welcomeScreen) {
        params.disable_welcome_screen = 1;
      }

      var buttonType = options.buttonType;
      if (Object.keys(BUTTONS_CONF).indexOf(buttonType) == -1) {
        buttonType = DEFAULT_BUTTON_TYPE;
      }

      if (buttonType == 'no_button') {
        options.disableButtonTooltip = 1;
      }

      if (options.disableButtonTooltip) {
        params.disable_tooltip = 1;
      }
      if (options.tooltipButtonText) {
        params.tooltip_text = options.tooltipButtonText;
      }

      if (options.disableNewMessagesSound) {
        params.disable_new_messages_sound = 1;
      }

      if (instances[objId]) {
        CommunityMessages.destroy(objId);
      }

      params.domain = document.domain;

      options.no_loading = 1;

      var curBox = false, expanded = 0;
      var ttSize = [0, 0], widgetPosition;

      changeWidgetPosition(options.widgetPosition);
      params.button_position = options.widgetPosition;

      var chatRpc, chatIfr;
      var inited = 0, timers = {};
      instances[objId] = VK.Widgets._constructor('widget_community_messages.php', objId, options, params, {
        onStartLoading: function() {
          var obj = document.getElementById(objId);
          obj.style.position = 'fixed';
          obj.style['z-index'] = 10000;
          updateWidgetPosition();
        },
        onReady: function () {
          inited = 1;
          if (options.expandTimeout > 0 && !options.shown) {
            timers.showTimer = setTimeout(function () {
              expandChat({
                playSong: !options.disableExpandChatSound,
                noSaveState: 1
              });
            }, options.expandTimeout);
          }
        },
        showBox: function(url) {
          if (curBox) {
            try {
              curBox.hide();
              try {
                curBox.iframe.src = 'about: blank;';
              } catch (e) {}
              curBox.iframe.parentNode.removeChild(curBox.iframe);
            } catch(e) { }
          }
          curBox = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, url), [], {
            proxy: function() {
              rpc.callMethod.apply(rpc, arguments);
            }
          });
          curBox.show();
        },
        setTooltipSize: function (size) {
          ttSize = size;
          if (!expanded) {
            minimize();
          }
        },
        expand: function(opts) {
          opts = opts || {};
          expanded = 1;
          expand();

          if (!opts.noSaveState) {
            lsSet('expanded', 1);
          }
        },
        minimize: function() {
          setTimeout(function() {
            expanded = 0;
            minimize(objId);
            lsRemove('expanded');
          }, 120);
        },
        canNotWrite: function(type) {
          options.onCanNotWrite && options.onCanNotWrite(type);
        },
        destroy: function() {
          chatRpc.destroy();
          try {chatIfr.src = 'about: blank;';} catch (e) {}
          try {
            chatIfr.parentNode.removeChild(chatIfr);
          } catch(e) { }
        },
        fatalError: function(error_code, public_id) {

          var query = {
            code: error_code,
            widget: 2,
            public_id: public_id,
          };

          if (error_code == 1903) {
            query.referrer_domain = document.domain;
          }

          var query_str = [];
          for(var i in query) {
            query_str.push(i+'='+query[i]);
          }

          CommunityMessages.destroy(objId);
          var box = VK.Util.Box(VK.Widgets.showBoxUrl(options.base_domain, 'blank.php?'+query_str.join('&')));
          box.show();
        },
        setPageTitle: function (title) {
          if (options.disableTitleChange) {
            return;
          }
          stopTitleAnimation();
          wCur.oldTitle = document.title || null;
          wCur.title = title;
          wCur.changeTitleMode = 0;
          startTitleNotify(1);
        },
        resetPageTitle: function () {
          stopTitleAnimation();
        },
        newMessage: function () {
          if (document.hasFocus && !document.hasFocus() && !options.disableNewMessagesSound) {
            callRpcMethod('playNewMsgSong');
          }
        }
      }, {}, function(o, i, r) {
        chatRpc = r;
        chatIfr = i;
        if (!options.shown) {
          minimize();
        } else {
          expand();
        }
      });

      function startTitleNotify(fast) {
        clearTimeout(wCur.titleTimer);
        wCur.titleTimer = setTimeout(function () {
          if (wCur.changeTitleMode == 1) {
            document.title = wCur.oldTitle || '';
          } else {
            document.title = wCur.title;
          }
          wCur.changeTitleMode = wCur.changeTitleMode == 1 ? 0 : 1;
          startTitleNotify();
        }, fast ? 0 : 1500);
      }

      function stopTitleAnimation() {
        if (options.disableTitleChange) {
          return;
        }
        clearTimeout(wCur.titleTimer);
        if (wCur.oldTitle) {
          document.title = wCur.oldTitle;
        } else if (wCur.oldTitle === null) {
          document.title = '';
        }
        wCur.title = '';
      }

      function expand() {
        var obj = document.getElementById(objId), frame = obj.getElementsByTagName('iframe')[0];

        obj.style.width = frame.width = '372px';
        obj.style.height = frame.height = '399px';
        obj.style.margin = '0px 0px 0px 0px';
        //frame.style.boxShadow = '0 0 0 1px rgba(0, 20, 51, .12), 0 20px 40px 0 rgba(0, 0, 0, 0.3)';
        //frame.style.borderRadius = '6px';
      }

      function minimize() {
        var obj = document.getElementById(objId), frame = obj.getElementsByTagName('iframe')[0];

        var btnConf = BUTTONS_CONF[buttonType];

        var w = btnConf.width + ttSize[0];
        var h = Math.max(btnConf.height, ttSize[1]);

        obj.style.width = w + 'px';
        obj.style.height = h + 'px';
        frame.style.boxShadow = 'none';

        var margin = btnConf.margin ? btnConf.margin : {};
        obj.style.margin = '0px ' + (margin.right || 0) + 'px ' + (margin.bottom || 0) + 'px 0px';

        if (frame) {
          frame.width = w;
          frame.height = h;
        }
      }

      function changeWidgetPosition(position) {
        widgetPosition = position;
        if (Object.keys(BUTTON_POSITIONS).indexOf(widgetPosition) == -1) {
          widgetPosition = DEFAULT_BUTTON_POSITION;
        }
        updateWidgetPosition();
        callRpcMethod('changeButtonPosition', widgetPosition);
      }

      function updateWidgetPosition() {
        var obj = document.getElementById(objId);

        if (!obj) {
          return;
        }

        var props = ['left', 'right', 'top', 'bottom'];
        for(var i in props) {
          obj.style[props[i]] = '';
        }

        var conf = BUTTON_POSITIONS[widgetPosition];
        for(var i in conf) {
          obj.style[i] = conf[i] + 'px';
        }

        if (!inited) {
          return;
        }

        if (expanded) {
          expand();
        } else {
          minimize();
        }
      }

      function callRpcMethod() {
        chatRpc && chatRpc.callMethod.apply(chatRpc, arguments);
      }

      /* opts
        - welcomeScreen
      */
      function expandChat(opts) {
        if (!opts || Object.prototype.toString.call(opts) !== '[object Object]') {
          opts = {};
        }

        if (opts.welcomeScreen == undefined) {
          opts.welcomeScreen = options.welcomeScreen;
        }

        clearTimeout(timers.showTimer);
        callRpcMethod('expand', opts);
      }

      function minimizeChat() {
        callRpcMethod('minimize');
      }

      function destroyChat() {
        stopTitleAnimation();
        CommunityMessages.destroy(objId);
      }

      return {
        expand: expandChat,
        minimize: minimizeChat,
        destroy: destroyChat,
        changeButtonPosition: changeWidgetPosition,
        stopTitleAnimation: stopTitleAnimation,
      };
    };

    function lsGet(key) {
      if (!window.localStorage) {
        return null;
      }
      return localStorage.getItem('vk_community_widget_' + key);
    }

    function lsSet(key, value) {
      window.localStorage && localStorage.setItem('vk_community_widget_' + key, value);
    }

    function lsRemove(key) {
      window.localStorage && localStorage.removeItem('vk_community_widget_' + key);
    }

    CommunityMessages.destroy = function(objId) {
      if (!instances[objId]) {
        return;
      }

      var xdm = VK.Widgets.RPC[instances[objId]];
      xdm && xdm.methods.destroy();

      delete instances[objId];
    };

    CommunityMessages.expand = function (objId) {
      console.log(instances[objId]);
    };

    return CommunityMessages;
  })(VK.Widgets.CommunityMessages);

  VK.Widgets._constructor = function(widgetUrl, objId, options, params, funcs, defaults, onDone, widgetId, iter) {
    var obj = document.getElementById(objId);
    widgetId = widgetId || (++VK.Widgets.count);

    if (!obj) {
      iter = iter || 0;
      if (iter > 10) {
        throw Error('VK.Widgets: object #' + objId + ' not found.');
      }
      setTimeout(function() {
        VK.Widgets._constructor(widgetUrl, objId, options, params, funcs, defaults, onDone, widgetId, iter + 1);
      }, 500);
      return widgetId;
    }

    options = options || {};
    defaults = defaults || {};
    funcs = funcs || {};

    var ifr, url, urlQueryString, encodedParam, rpc, iframe, i,
      base_domain = options.base_domain || VK._protocol + '//vk.com',
      width = options.width === 'auto' ? (obj.clientWidth || obj.offsetWidth || defaults.minWidth) | 0 : parseInt(options.width || 0, 10);
    width = width ? (Math.max(defaults.minWidth || 200, Math.min(defaults.maxWidth || 10000, width)) + 'px') : '100%';
    obj.style.width = width;

    if (options.height) {
      params.height = options.height;
      obj.style.height = options.height + 'px';
    } else {
      obj.style.height = (defaults.startHeight || 200) + 'px';
    }

    if (width === '100%') params.startWidth = (obj.clientWidth || obj.offsetWidth) | 0;
    if (!params.url) params.url = options.pageUrl || location.href.replace(/#.*$/, '');

    url = base_domain + '/' + widgetUrl;
    urlQueryString = '';
    if (!options.noDefaultParams) {
      urlQueryString += '&app=' + (VK._apiId || '0') + '&width=' + encodeURIComponent(width)
    }
    urlQueryString += '&_ver=' + VK.version
    if (VK._iframeAppWidget) {
      params.iframe_app = 1;
    }
    var pData = VK.Util.getPageData();
    params.url      = params.url     || pData.url || "";
    params.referrer = params.referrer || document.referrer || "";
    params.title    = params.title   || pData.title  || document.title || "";
    for (i in params) {
      if (i == 'title' && params[i].length > 80) params[i] = params[i].substr(0, 80)+'...';
      if (i == 'description' && params[i].length > 160) params[i] = params[i].substr(0, 160)+'...';
      if (typeof(params[i]) == 'number') {
        encodedParam = params[i];
      } else {
        try {
          encodedParam = encodeURIComponent(params[i]);
        } catch (e) {
          encodedParam = '';
        }
      }
      urlQueryString += '&' + i + '=' + encodedParam;
    }
    urlQueryString += '&' + (+new Date()).toString(16);
    url += '?' + urlQueryString.substr(1);

    funcs.onStartLoading && funcs.onStartLoading();
    if (!options.no_loading) {
      VK.Widgets.loading(obj, true);
    }

    funcs.showLoader = function(enable) {
      VK.Util.Loader(enable);
    };
    funcs.publish = function() {
      var args = Array.prototype.slice.call(arguments);
      args.push(widgetId);
      VK.Observer.publish.apply(VK.Observer, args);
    };
    funcs.onInit = function() {
      VK.Widgets.loading(obj, false);
      if (funcs.onReady) funcs.onReady();
      if (options.onReady) options.onReady();
    };
    funcs.resize = function(e, cb) {
      obj.style.height = e + 'px';
      var el = document.getElementById('vkwidget' + widgetId);
      if (el) {
        el.style.height = e + 'px';
      }
    };
    funcs.resizeWidget = function(newWidth, newHeight) {
      newWidth  = parseInt(newWidth);
      newHeight = parseInt(newHeight);
      var widgetElem = document.getElementById('vkwidget' + widgetId);
      if (isFinite(newWidth)) {
        obj.style.width = newWidth + 'px';
        if (widgetElem) {
          widgetElem.style.width = newWidth + 'px';
        }
      }
      if (isFinite(newHeight)) {
        obj.style.height = newHeight + 'px';
        if (widgetElem) {
          widgetElem.style.height = newHeight + 'px';
        }
      }
      if (options.onResizeWidget) options.onResizeWidget();
    };
    funcs.updateVersion = function(ver) {
      if (ver > 1) {
        VK.Api.attachScript('//vk.com/js/api/openapi_update.js?'+parseInt(ver));
      }
    };
    rpc = VK.Widgets.RPC[widgetId] = new fastXDM.Server(funcs, function(origin) {
      if (!origin) return true;
      origin = origin.toLowerCase();
      return (origin.match(/(\.|\/)vk\.com($|\/|\?)/));
    }, {safe: true});
    iframe = VK.Widgets.RPC[widgetId].append(obj, {
      src: url,
      width: (width.indexOf('%') != -1) ? width : (parseInt(width) || width),
      height: defaults.startHeight || '100%',
      scrolling: 'no',
      id: 'vkwidget' + widgetId,
      allowTransparency: options.allowTransparency || false,
      style: {
        overflow: 'hidden'
      }
    });
    onDone && setTimeout(function() {onDone(obj, iframe || obj.firstChild, rpc);}, 10);
    return widgetId;
  };
}

if (!VK.Util) {
  VK.Util = {
    getPageData: function() {
      if (!VK._pData) {
        var metas = document.getElementsByTagName('meta'), pData = {}, keys = ['description', 'title', 'url', 'image', 'app_id'], metaName;
        for (var i in metas) {
          if (!metas[i].getAttribute) continue;
          if (metas[i].getAttribute && ((metaName = metas[i].getAttribute('name')) || (metaName = metas[i].getAttribute('property')))) {
            for (var j in keys) {
              if (metaName == keys[j] || metaName == 'og:'+keys[j] || metaName == 'vk:'+keys[j]) {
                pData[keys[j]] = metas[i].content;
              }
            }
          }
        }
        if (pData.app_id && !VK._apiId) {
          VK._apiId = pData.app_id;
        }
        pData.title = pData.title || document.title || '';
        pData.description = pData.description || '';
        pData.image = pData.image || '';
        if (!pData.url && VK._iframeAppWidget && VK._apiId) {
          pData.url = '/app' + VK._apiId;
          if (VK._browserHash) {
            pData.url += VK._browserHash
          }
        }
        var loc = location.href.replace(/#.*$/, '');
        if (!pData.url || !pData.url.indexOf(loc)) {
          pData.url = loc;
        }
        VK._pData = pData;
      }
      return VK._pData;
    },
    getStyle: function(elem, name) {
      var ret, defaultView = document.defaultView || window;
      if (defaultView.getComputedStyle) {
        name = name.replace(/([A-Z])/g, '-$1').toLowerCase();
        var computedStyle = defaultView.getComputedStyle(elem, null);
        if (computedStyle) {
          ret = computedStyle.getPropertyValue(name);
        }
      } else if (elem.currentStyle) {
        var camelCase = name.replace(/\-(\w)/g, function(all, letter){
          return letter.toUpperCase();
        });
        ret = elem.currentStyle[name] || elem.currentStyle[camelCase];
      }

      return ret;
    },

    getXY: function(obj, fixed) {
      if (!obj || obj === undefined) return;

      var left = 0, top = 0;
      if (obj.getBoundingClientRect !== undefined) {
        var rect = obj.getBoundingClientRect();
        left = rect.left;
        top = rect.top;
        fixed = true;
      } else if (obj.offsetParent) {
        do {
          left += obj.offsetLeft;
          top += obj.offsetTop;
          if (fixed) {
            left -= obj.scrollLeft;
            top -= obj.scrollTop;
          }
        } while (obj = obj.offsetParent);
      }
      if (fixed) {
        top += window.pageYOffset || window.scrollNode && scrollNode.scrollTop || document.documentElement.scrollTop;
        left += window.pageXOffset || window.scrollNode && scrollNode.scrollLeft || document.documentElement.scrollLeft;
      }

      return [left, top];
    },

    Loader: function self(enable) {
      if (!self.loader) {
        self.loader = document.createElement('DIV');
        self.loader.innerHTML = '<style type="text/css">\
        @-webkit-keyframes VKWidgetsLoaderKeyframes {0%{opacity: 0.2;}30%{opacity: 1;}100%{opacity: 0.2;}}\
        @keyframes VKWidgetsLoaderKeyframes {0%{opacity: 0.2;}30%{opacity: 1;}100%{opacity: 0.2;}}\
        .VKWidgetsLoader div {width: 7px;height: 7px;-webkit-border-radius: 50%;-khtml-border-radius: 50%;-moz-border-radius: 50%;border-radius: 50%;background: #fff;top: 21px;position: absolute;z-index: 2;-o-transition: opacity 350ms linear; transition: opacity 350ms linear;opacity: 0.2;-webkit-animation-duration: 750ms;-o-animation-duration: 750ms;animation-duration: 750ms;-webkit-animation-name: VKWidgetsLoaderKeyframes;-o-animation-name: VKWidgetsLoaderKeyframes;animation-name: VKWidgetsLoaderKeyframes;-webkit-animation-iteration-count: infinite;-o-animation-iteration-count: infinite;animation-iteration-count: infinite;-webkit-transform: translateZ(0);transform: translateZ(0);}</style><div class="VKWidgetsLoader" style="position: fixed;left: 50%;top: 50%;margin: -25px -50px;z-index: 1002;height: 50px;width: 100px;"><div style="left: 36px;-webkit-animation-delay: 0ms;-o-animation-delay: 0ms;animation-delay: 0ms;"></div><div style="left: 47px;-webkit-animation-delay: 180ms;-o-animation-delay: 180ms;animation-delay: 180ms;"></div><div style="left: 58px;-webkit-animation-delay: 360ms;-o-animation-delay: 360ms;animation-delay: 360ms;"></div><span style="display: block;background-color: #000;-webkit-border-radius: 4px;-khtml-border-radius: 4px;-moz-border-radius: 4px;border-radius: 4px;-webkit-box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.35);-moz-box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.35);box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.35);position: absolute;left: 0;top: 0;bottom: 0; right: 0;z-index: 1;opacity: 0.7;"></span></div>';
        document.body.insertBefore(self.loader, document.body.firstChild);
      }
      self.loader.style.display = enable ? 'block' : 'none';
    },

    Box: function(src, sizes, fnc, options) {
      fnc = fnc || {};
      var overflowB = document.body.style.overflow;
      VK.Util.Loader(true);
      var is_vk = /(^|\.)(vk\.com|vkontakte\.ru)$/.test(location.hostname);
      var rpc = new fastXDM.Server(VK.extend(fnc, {
            onInit: function() {
              iframe.style.background = 'transparent';
              iframe.style.visibility = 'visible';
              document.body.style.overflow = 'hidden';
              iframe.setAttribute('allowfullscreen', 1);
              if (is_vk) document.body.className += ' layers_shown';
              VK.Util.Loader();
            },
            hide: function() {
              iframe.style.display = 'none';
            },
            tempHide: function() {
              iframe.style.left = '-10000px';
              iframe.style.top = '-10000px';
              iframe.style.width = '10px';
              iframe.style.height = '10px';
              if (is_vk) document.body.className = document.body.className.replace(/\b\s*?layers_shown\s*\b/, ' ');
              document.body.style.overflow = overflowB;
            },
            destroy: function() {
              try {
                iframe.src = 'about: blank;';
              } catch (e) {}
              iframe.parentNode.removeChild(iframe);
              if (is_vk) document.body.className = document.body.className.replace(/\b\s*?layers_shown\s*\b/, ' ');
              document.body.style.overflow = overflowB;
            },
            resize: function(w, h) {
            }
          }, true), false, {safe: true}),
          iframe = rpc.append(document.body, {
            src: src.replace(/&amp;/g, '&'),
            scrolling: 'no',
            allowTransparency: true,
            style: {position: 'fixed', left: 0, top: 0, zIndex: 1002, background: VK._protocol + '//vk.com/images/upload.gif center center no-repeat transparent', padding: '0', border: '0', width: '100%', height: '100%', overflow: 'hidden', visibility: 'hidden'}
          });
      return {
        show: function(scrollTop, height) {
          iframe.style.display = 'block';
          document.body.style.overflow = 'hidden';
        },
        hide: function() {
          iframe.style.display = 'none';
          document.body.style.overflow = overflowB;
        },
        iframe: iframe,
        rpc: rpc
      }
    },

    addEvent: function(type, func) {
      if (window.document.addEventListener) {
        window.document.addEventListener(type, func, false);
      } else if (window.document.attachEvent) {
        window.document.attachEvent('on'+type, func);
      }
    },

    removeEvent: function(type, func) {
      if (window.document.removeEventListener) {
        window.document.removeEventListener(type, func, false);
      } else if (window.document.detachEvent) {
        window.document.detachEvent('on'+type, func);
      }
    },

    ss: function(el, styles) {VK.extend(el.style, styles, true);}
  };
}

// Init asynchronous library loading
window.vkAsyncInit && setTimeout(vkAsyncInit, 0);

if (window.vkAsyncInitCallbacks && vkAsyncInitCallbacks.length) {
  setTimeout(function() {
    var callback;
    while (callback = vkAsyncInitCallbacks.pop()) {
      try {
        callback();
      } catch(e) {
        try {
          console.error(e);
        } catch (e2) {}
      }
    }
  }, 0);
}

try{stManager.done('api/openapi.js');}catch(e){}

/* End */
;
; /* Start:"a:4:{s:4:"full";s:53:"/bitrix/templates/fotosklad/js/main.js?15657048597102";s:6:"source";s:38:"/bitrix/templates/fotosklad/js/main.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
$(function () {
    $(".repeat_main_block").each(function (a) {
        var s = $(this).find(".jcarousel"), t = "jcarousel-wrap" + a;
        var visible = 5;
        var curIndex = visible;
        var itemsCnt = s.find("li").length;
        var dataLayerItems = window['dataLayerSpecBlock_' + $(s).data('listtype')];
        var dataLayerItemsId = window['dataLayerSpecBlockId_' + $(s).data('listtype')];
        $(this).addClass(t), visible < s.find("li").length && ($("." + t + " .btns span:first"), $("." + t + " .btns span:last"), s.jCarouselLite({
            scroll: 1,
            visible: visible,
            btnPrev: "." + t + " .btns span:first",
            btnNext: "." + t + " .btns span:last",
            circular: !0,
            btnNextEvent: function (a) {
                if (curIndex >= visible && curIndex < itemsCnt) {
                    window.dataLayer = window.dataLayer || [];
                    dataLayer.push({
                        "ecommerce": {
                            "impressions": [dataLayerItems[curIndex]]
                        },
                        'event': 'gtm-ee-event',
                        'gtm-ee-event-category': 'Enhanced Ecommerce',
                        'gtm-ee-event-action': 'Product Impressions',
                        'gtm-ee-event-non-interaction': 'True',
                    });
                }
                curIndex++;
            }
        }));
        s.find("li a").click(function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var dataLayerItems = window['dataLayerSpecBlock_' + $(s).data('listtype')];
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({
                'ecommerce': {
                    'currencyCode': 'RUB',
                    'click': {
                        'actionField': {'list': $(s).data('listtype')},
                        'products': [dataLayerItems[$(this).data('index')]]
                    }
                },
                'event': 'gtm-ee-event',
                'gtm-ee-event-category': 'Enhanced Ecommerce',
                'gtm-ee-event-action': 'Product Clicks',
                'gtm-ee-event-non-interaction': 'False',
            });
            location.href = url;
        });


        //кнопка "в корзину"
        s.find('li').on('click', 'a.buy_button', function () {
            var itemId = $(this).data('id');
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({
                'ecommerce': {
                    'currencyCode': 'RUB',
                    'add': {
                        'products': [{
                            'name': dataLayerItemsId[itemId].name,
                            'id': dataLayerItemsId[itemId].id,
                            'price': dataLayerItemsId[itemId].price,
                            'brand': dataLayerItemsId[itemId].brand,
                            'category': dataLayerItemsId[itemId].category,
                            'quantity': 1
                        }]
                    }
                },
                'event': 'gtm-ee-event',
                'gtm-ee-event-category': 'Enhanced Ecommerce',
                'gtm-ee-event-action': 'Adding a Product to a Shopping Cart',
                'gtm-ee-event-non-interaction': 'False',
            });
        });


        // кнопка быстрый заказ
        s.find('li').on('click', '.fast-order-button-table', function () {
            var itemId = $(this).data('id');
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({
                'ecommerce': {
                    'currencyCode': 'RUB',
                    'checkout': {
                        'actionField': {'step': 1},
                        'products': [{
                            'name': dataLayerItemsId[itemId].name,
                            'id': dataLayerItemsId[itemId].id,
                            'price': dataLayerItemsId[itemId].price,
                            'brand': dataLayerItemsId[itemId].brand,
                            'category': dataLayerItemsId[itemId].category,
                            'quantity': 1
                        }]
                    }
                },
                'event': 'gtm-ee-event',
                'gtm-ee-event-category': 'Enhanced Ecommerce',
                'gtm-ee-event-action': 'Checkout Step 1',
                'gtm-ee-event-non-interaction': 'False',
            });
        });

    });


    var a = [], s = [], t = [], n = [], e = [], i = [];
    $(".spec_main .price_an").each(function () {
        e.push($(this).attr("data-id")), s.push($(this).attr("data-sale"))
    }), $(".hits_main .price_an").each(function () {
        t.push($(this).attr("data-id")), n.push($(this).attr("data-sale"))
    }), $(".new_main .price_an").each(function () {
        a.push($(this).attr("data-id")), i.push($(this).attr("data-sale"))
    }), $.post("/ajax.php?action=getPricesEX", {
        req: [{ID: a, SEC: "new_main", SALE: i}, {
            ID: t,
            SEC: "hits_main",
            SALE: n
        }, {ID: e, SEC: "spec_main", SALE: s},
        ],
        type: "mainPage"

    }, function (a) {
        if (void 0 !== a.ERROR) ; else if ("object" == typeof a.res) {
            for (var s in a.res)
                for (var t in a.res[s]) {
                    if (null !== a.res[s][t] && 0 < parseFloat(a.res[s][t].PRICE)) {
                        if (0 < parseFloat(a.res[s][t].DISCOUNT_PRICE)) {
                            $("." + s + " .price_an[data-id=" + a.res[s][t].PRODUCT_ID + "]").html("<span style='font-size:12px;color:#989898;;'><s>" + a.res[s][t].PRICE_F + "</s></span> <span style='color: #FE9900;'>" + a.res[s][t].DISCOUNT_PRICE + "</span>")
                        } else {
                            $("." + s + " .price_an[data-id=" + a.res[s][t].PRODUCT_ID + "]").html("<span style='color: #FE9900;'>" + a.res[s][t].PRICE_F + "</span>");
                        }
                    $(".order_main_btn_block.item_" + a.res[s][t].PRODUCT_ID).html(
                        "<a class='buy_button ajax_link add2cart_popup'" +
                        " data-id=\"" +a.res[s][t].PRODUCT_ID + "\" href=\".item_"+a.res[s][t].PRODUCT_ID +"\" rel=\""+fbqData[a.res[s][t].PRODUCT_ID].AJAX_ID+"\" params=\"do=add2cart&id="+a.res[s][t].PRODUCT_ID + "\">в корзину</a>" +
                        "<div class=\"fast-order-button-table\" data-price=\"" + a.res[s][t].PRICE + "\" data-id=\""+a.res[s][t].PRODUCT_ID + "\">Быстрый заказ</div>");
                    }
                }
        }
    }, "json"), $(document).on("click", ".fs-spec-banner.dop-525670", function () {
        ga("send", "event", "Акция День фотографа 2015", "Переход из меню", location.href)
    }), $(document).on("click", "#showcase_2", function () {
        ga("send", "event", "Акция День фотографа 2015", "Переход по баннеру", location.href)
    })
});
/* End */
;
; /* Start:"a:4:{s:4:"full";s:75:"/bitrix/templates/fotosklad/js/jquery/jquery.activity.min.js?14405095531543";s:6:"source";s:60:"/bitrix/templates/fotosklad/js/jquery/jquery.activity.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
!function(e){var t=0,o={},i=0,c={init:function(t){return this.each(function(){o=jQuery.extend({achieveTime:60,loop:0,eventList:"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error",testPeriod:10,useMultiMode:1,callBack:function(){console.log("Achieved!")},watchEvery:1,counter:{test:0,achiev:0}},t),o.watchEvery*=1e3,o.useMultiMode&&c.loadMultiData(),-1!=o.counter.achiev&&(e(this).bind(o.eventList,c.eventTrigger),c.process())})},process:function(){o.counter.test+=1,o.counter.test==o.testPeriod&&(i&&(i=0,o.counter.achiev+=o.testPeriod),o.counter.test=0),t=setTimeout(c.process,o.watchEvery),o.counter.achiev>=o.achieveTime&&(o.loop||clearTimeout(t),o.counter.achiev=o.loop?0:-1,o.callBack.call(this,o)),o.useMultiMode&&(document.cookie="activity="+o.counter.test+"|"+o.counter.achiev+"; path=/;")},eventTrigger:function(){i=1},loadMultiData:function(){var e=" activity=",t=" "+document.cookie;if(t.length>0&&-1!=t.indexOf(e)){offset=t.indexOf(e)+e.length;var i=unescape(t.substring(offset,-1==t.indexOf(";",offset)?t.length:t.indexOf(";",offset))).split("|");o.counter.test=i[0],o.counter.achiev=Number(i[1])}-1==o.counter.achiev&&(o.counter.achiev=o.achieveTime-5),o.counter.test=0}};e.fn.activity=function(t){return c[t]?c[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error("Method "+t+" does not exist on jQuery.activity"):c.init.apply(this,arguments)}}(jQuery);
/* End */
;
; /* Start:"a:4:{s:4:"full";s:74:"/bitrix/templates/fotosklad/js/fancybox/jquery.fancybox.js?156577071848311";s:6:"source";s:58:"/bitrix/templates/fotosklad/js/fancybox/jquery.fancybox.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/*!
 * fancyBox - jQuery Plugin
 * version: 2.1.3 (Tue, 23 Oct 2012)
 * @requires jQuery v1.6 or later
 *
 * Examples at http://fancyapps.com/fancybox/
 * License: www.fancyapps.com/fancybox/#license
 *
 * Copyright 2012 Janis Skarnelis - janis@fancyapps.com
 *
 */


(function (window, document, $, undefined) {
	"use strict";

	var W = $(window),
		D = $(document),
		F = $.fancybox = function () {
			F.open.apply( this, arguments );
		},
		didUpdate = null,
		isTouch	  = document.createTouch !== undefined,

		isQuery	= function(obj) {
			return obj && obj.hasOwnProperty && obj instanceof $;
		},
		isString = function(str) {
			return str && $.type(str) === "string";
		},
		isPercentage = function(str) {
			return isString(str) && str.indexOf('%') > 0;
		},
		isScrollable = function(el) {
			return (el && !(el.style.overflow && el.style.overflow === 'hidden') && ((el.clientWidth && el.scrollWidth > el.clientWidth) || (el.clientHeight && el.scrollHeight > el.clientHeight)));
		},
		getScalar = function(orig, dim) {
			var value = parseInt(orig, 10) || 0;

			if (dim && isPercentage(orig)) {
				value = F.getViewport()[ dim ] / 100 * value;
			}

			return Math.ceil(value);
		},
		getValue = function(value, dim) {
			return getScalar(value, dim) + 'px';
		};

	$.extend(F, {
		// The current version of fancyBox
		version: '2.1.3',

		defaults: {
			padding : 15,
			margin  : 20,

			width     : 800,
			height    : 600,
			minWidth  : 100,
			minHeight : 100,
			maxWidth  : 9999,
			maxHeight : 9999,

			autoSize   : true,
			autoHeight : false,
			autoWidth  : false,

			autoResize  : true,
			autoCenter  : !isTouch,
			fitToView   : true,
			aspectRatio : false,
			topRatio    : 0.5,
			leftRatio   : 0.5,
            fastOrder : false,
			scrolling : 'auto', // 'auto', 'yes' or 'no'
			wrapCSS   : '',

			arrows     : true,
			closeBtn   : true,
			closeClick : false,
			nextClick  : false,
			mouseWheel : true,
			autoPlay   : false,
			playSpeed  : 3000,
			preload    : 3,
			modal      : false,
			loop       : true,

			ajax  : {
				dataType : 'html',
				headers  : { 'X-fancyBox': true }
			},
			iframe : {
				scrolling : 'auto',
				preload   : true
			},
			swf : {
				wmode: 'transparent',
				allowfullscreen   : 'true',
				allowscriptaccess : 'always'
			},

			keys  : {
				/*next : {
					13 : 'left', // enter
					34 : 'up',   // page down
					39 : 'left', // right arrow
					40 : 'up'    // down arrow
				},
				prev : {
					8  : 'right',  // backspace
					33 : 'down',   // page up
					37 : 'right',  // left arrow
					38 : 'down'    // up arrow
				},*/
				close  : [27], // escape key
				play   : [32], // space - start/stop slideshow
				toggle : [70]  // letter "f" - toggle fullscreen
			},

			direction : {
				next : 'left',
				prev : 'right'
			},

			scrollOutside  : true,

			// Override some properties
			index   : 0,
			type    : null,
			href    : null,
			content : null,
			title   : null,

			// HTML templates
			tpl: {
				wrap     : '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',
				image    : '<img class="fancybox-image" src="{href}" alt="" />',
				iframe   : '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + ($.browser.msie ? ' allowtransparency="true"' : '') + '></iframe>',
				error    : '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
				closeBtn : '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;">&times;</a>',
				next     : '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
				prev     : '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
			},

			// Properties for each animation type
			// Opening fancyBox
			openEffect  : 'fade', // 'elastic', 'fade' or 'none'
			openSpeed   : 250,
			openEasing  : 'swing',
			openOpacity : true,
			openMethod  : 'zoomIn',

			// Closing fancyBox
			closeEffect  : 'fade', // 'elastic', 'fade' or 'none'
			closeSpeed   : 250,
			closeEasing  : 'swing',
			closeOpacity : true,
			closeMethod  : 'zoomOut',

			// Changing next gallery item
			nextEffect : 'elastic', // 'elastic', 'fade' or 'none'
			nextSpeed  : 250,
			nextEasing : 'swing',
			nextMethod : 'changeIn',

			// Changing previous gallery item
			prevEffect : 'elastic', // 'elastic', 'fade' or 'none'
			prevSpeed  : 250,
			prevEasing : 'swing',
			prevMethod : 'changeOut',

			// Enable default helpers
			helpers : {
				overlay : true,
				title   : true
			},

			// Callbacks
			onCancel     : $.noop, // If canceling
			beforeLoad   : $.noop, // Before loading
			afterLoad    : $.noop, // After loading
			beforeShow   : $.noop, // Before changing in current item
			afterShow    : $.noop, // After opening
			beforeChange : $.noop, // Before changing gallery item
			beforeClose  : $.noop, // Before closing
			afterClose   : $.noop  // After closing
		},

		//Current state
		group    : {}, // Selected group
		opts     : {}, // Group options
		previous : null,  // Previous element
		coming   : null,  // Element being loaded
		current  : null,  // Currently loaded element
		isActive : false, // Is activated
		isOpen   : false, // Is currently open
		isOpened : false, // Have been fully opened at least once

		wrap  : null,
		skin  : null,
		outer : null,
		inner : null,

		player : {
			timer    : null,
			isActive : false
		},

		// Loaders
		ajaxLoad   : null,
		imgPreload : null,

		// Some collections
		transitions : {},
		helpers     : {},

		/*
		 *	Static methods
		 */

		open: function (group, opts) {
			if (!group) {
				return;
			}

			if (!$.isPlainObject(opts)) {
				opts = {};
			}

			// Close if already active
			if (false === F.close(true)) {
				return;
			}

			// Normalize group
			if (!$.isArray(group)) {
				group = isQuery(group) ? $(group).get() : [group];
			}

			// Recheck if the type of each element is `object` and set content type (image, ajax, etc)
			$.each(group, function(i, element) {
				var obj = {},
					href,
					title,
					content,
					type,
					rez,
					hrefParts,
					selector;

				if ($.type(element) === "object") {
					// Check if is DOM element
					if (element.nodeType) {
						element = $(element);
					}

					if (isQuery(element)) {
						obj = {
							href    : element.data('fancybox-href') || element.attr('href'),
							title   : element.data('fancybox-title') || element.attr('title'),
							isDom   : true,
							element : element
						};

						if ($.metadata) {
							$.extend(true, obj, element.metadata());
						}

					} else {
						obj = element;
					}
				}

				href  = opts.href  || obj.href || (isString(element) ? element : null);
				title = opts.title !== undefined ? opts.title : obj.title || '';

				content = opts.content || obj.content;
				type    = content ? 'html' : (opts.type  || obj.type);

				if (!type && obj.isDom) {
					type = element.data('fancybox-type');

					if (!type) {
						rez  = element.prop('class').match(/fancybox\.(\w+)/);
						type = rez ? rez[1] : null;
					}
				}

				if (isString(href)) {
					// Try to guess the content type
					if (!type) {
						if (F.isImage(href)) {
							type = 'image';

						} else if (F.isSWF(href)) {
							type = 'swf';

						} else if (href.charAt(0) === '#') {
							type = 'inline';

						} else if (isString(element)) {
							type    = 'html';
							content = element;
						}
					}

					// Split url into two pieces with source url and content selector, e.g,
					// "/mypage.html #my_id" will load "/mypage.html" and display element having id "my_id"
					if (type === 'ajax') {
						hrefParts = href.split(/\s+/, 2);
						href      = hrefParts.shift();
						selector  = hrefParts.shift();
					}
				}

				if (!content) {
					if (type === 'inline') {
						if (href) {
							content = $( isString(href) ? href.replace(/.*(?=#[^\s]+$)/, '') : href ); //strip for ie7

						} else if (obj.isDom) {
							content = element;
						}

					} else if (type === 'html') {
						content = href;

					} else if (!type && !href && obj.isDom) {
						type    = 'inline';
						content = element;
					}
				}

				$.extend(obj, {
					href     : href,
					type     : type,
					content  : content,
					title    : title,
					selector : selector
				});

				group[ i ] = obj;
			});

			// Extend the defaults
			F.opts = $.extend(true, {}, F.defaults, opts);

			// All options are merged recursive except keys
			if (opts.keys !== undefined) {
				F.opts.keys = opts.keys ? $.extend({}, F.defaults.keys, opts.keys) : false;
			}
			F.group = group;

			return F._start(F.opts.index);
		},

		// Cancel image loading or abort ajax request
		cancel: function () {
			var coming = F.coming;

			if (!coming || false === F.trigger('onCancel')) {
				return;
			}

			F.hideLoading();

			if (F.ajaxLoad) {
				F.ajaxLoad.abort();
			}

			F.ajaxLoad = null;

			if (F.imgPreload) {
				F.imgPreload.onload = F.imgPreload.onerror = null;
			}

			if (coming.wrap) {
				coming.wrap.stop(true, true).trigger('onReset').remove();
			}

			F.coming = null;

			// If the first item has been canceled, then clear everything
			if (!F.current) {
				F._afterZoomOut( coming );
			}
		},

		// Start closing animation if is open; remove immediately if opening/closing
		close: function (event) {
			F.cancel();
			if (false === F.trigger('beforeClose')) {
				return;
			}

			F.unbindEvents();

			if (!F.isActive) {
				return;
			}

			if (!F.isOpen || event === true) {
				$('.fancybox-wrap').stop(true).trigger('onReset').remove();

				F._afterZoomOut();

			} else {
				F.isOpen = F.isOpened = false;
				F.isClosing = true;

				$('.fancybox-item, .fancybox-nav').remove();

				F.wrap.stop(true, true).removeClass('fancybox-opened');

				F.transitions[ F.current.closeMethod ]();
			}
		},

		// Manage slideshow:
		//   $.fancybox.play(); - toggle slideshow
		//   $.fancybox.play( true ); - start
		//   $.fancybox.play( false ); - stop
		play: function ( action ) {
			var clear = function () {
					clearTimeout(F.player.timer);
				},
				set = function () {
					clear();

					if (F.current && F.player.isActive) {
						F.player.timer = setTimeout(F.next, F.current.playSpeed);
					}
				},
				stop = function () {
					clear();

					$('body').unbind('.player');

					F.player.isActive = false;

					F.trigger('onPlayEnd');
				},
				start = function () {
					if (F.current && (F.current.loop || F.current.index < F.group.length - 1)) {
						F.player.isActive = true;

						$('body').bind({
							'afterShow.player onUpdate.player'   : set,
							'onCancel.player beforeClose.player' : stop,
							'beforeLoad.player' : clear
						});

						set();

						F.trigger('onPlayStart');
					}
				};

			if (action === true || (!F.player.isActive && action !== false)) {
				start();
			} else {
				stop();
			}
		},

		// Navigate to next gallery item
		next: function ( direction ) {
			var current = F.current;

			if (current) {
				if (!isString(direction)) {
					direction = current.direction.next;
				}

				F.jumpto(current.index + 1, direction, 'next');
			}
		},

		// Navigate to previous gallery item
		prev: function ( direction ) {
			var current = F.current;

			if (current) {
				if (!isString(direction)) {
					direction = current.direction.prev;
				}

				F.jumpto(current.index - 1, direction, 'prev');
			}
		},

		// Navigate to gallery item by index
		jumpto: function ( index, direction, router ) {
			var current = F.current;

			if (!current) {
				return;
			}

			index = getScalar(index);

			F.direction = direction || current.direction[ (index >= current.index ? 'next' : 'prev') ];
			F.router    = router || 'jumpto';

			if (current.loop) {
				if (index < 0) {
					index = current.group.length + (index % current.group.length);
				}

				index = index % current.group.length;
			}

			if (current.group[ index ] !== undefined) {
				F.cancel();

				F._start(index);
			}
		},

		// Center inside viewport and toggle position type to fixed or absolute if needed
		reposition: function (e, onlyAbsolute) {
			var current = F.current,
				wrap    = current ? current.wrap : null,
				pos;

			if (wrap) {
				pos = F._getPosition(onlyAbsolute);

				if (e && e.type === 'scroll') {
					delete pos.position;

					wrap.stop(true, true).animate(pos, 200);

				} else {
					wrap.css(pos);

					current.pos = $.extend({}, current.dim, pos);
				}
			}
		},

		update: function (e) {
			var type = (e && e.type),
				anyway = !type || type === 'orientationchange';

			if (anyway) {
				clearTimeout(didUpdate);

				didUpdate = null;
			}

			if (!F.isOpen || didUpdate) {
				return;
			}

			didUpdate = setTimeout(function() {
				var current = F.current;

				if (!current || F.isClosing) {
					return;
				}

				F.wrap.removeClass('fancybox-tmp');

				if (anyway || type === 'load' || (type === 'resize' && current.autoResize)) {
					F._setDimension();
				}

				if (!(type === 'scroll' && current.canShrink)) {
					F.reposition(e);
				}

				F.trigger('onUpdate');

				didUpdate = null;

			}, (anyway && !isTouch ? 0 : 300));
		},

		// Shrink content to fit inside viewport or restore if resized
		toggle: function ( action ) {
			if (F.isOpen) {
				F.current.fitToView = $.type(action) === "boolean" ? action : !F.current.fitToView;

				// Help browser to restore document dimensions
				if (isTouch) {
					F.wrap.removeAttr('style').addClass('fancybox-tmp');

					F.trigger('onUpdate');
				}

				F.update();
			}
		},

		hideLoading: function () {
			D.unbind('.loading');

			$('#fancybox-loading').remove();
		},

		showLoading: function () {
			var el, viewport;

			F.hideLoading();

			el = $('<div id="fancybox-loading"><div></div></div>').click(F.cancel).appendTo('body');

			// If user will press the escape-button, the request will be canceled
			D.bind('keydown.loading', function(e) {
				if ((e.which || e.keyCode) === 27) {
					e.preventDefault();

					F.cancel();
				}
			});

			if (!F.defaults.fixed) {
				viewport = F.getViewport();

				el.css({
					position : 'absolute',
					top  : (viewport.h * 0.5) + viewport.y,
					left : (viewport.w * 0.5) + viewport.x
				});
			}
		},

		getViewport: function () {
			var locked = (F.current && F.current.locked) || false,
				rez    = {
					x: W.scrollLeft(),
					y: W.scrollTop()
				};

			if (locked) {
				rez.w = locked[0].clientWidth;
				rez.h = locked[0].clientHeight;

			} else {
				// See http://bugs.jquery.com/ticket/6724
				rez.w = isTouch && window.innerWidth  ? window.innerWidth  : W.width();
				rez.h = isTouch && window.innerHeight ? window.innerHeight : W.height();
			}

			return rez;
		},

		// Unbind the keyboard / clicking actions
		unbindEvents: function () {
			if (F.wrap && isQuery(F.wrap)) {
				F.wrap.unbind('.fb');
			}

			D.unbind('.fb');
			W.unbind('.fb');
		},

		bindEvents: function () {
			var current = F.current,
				keys;

			if (!current) {
				return;
			}

			// Changing document height on iOS devices triggers a 'resize' event,
			// that can change document height... repeating infinitely
			W.bind('orientationchange.fb' + (isTouch ? '' : ' resize.fb') + (current.autoCenter && !current.locked ? ' scroll.fb' : ''), F.update);

			keys = current.keys;

			if (keys) {
				D.bind('keydown.fb', function (e) {
					var code   = e.which || e.keyCode,
						target = e.target || e.srcElement;

					// Skip esc key if loading, because showLoading will cancel preloading
					if (code === 27 && F.coming) {
						return false;
					}

					// Ignore key combinations and key events within form elements
					if (!e.ctrlKey && !e.altKey && !e.shiftKey && !e.metaKey && !(target && (target.type || $(target).is('[contenteditable]')))) {
						$.each(keys, function(i, val) {
							if (current.group.length > 1 && val[ code ] !== undefined) {
								F[ i ]( val[ code ] );

								e.preventDefault();
								return false;
							}

							if ($.inArray(code, val) > -1) {
								F[ i ] ();

								e.preventDefault();
								return false;
							}
						});
					}
				});
			}

			if ($.fn.mousewheel && current.mouseWheel) {
				F.wrap.bind('mousewheel.fb', function (e, delta, deltaX, deltaY) {
					var target = e.target || null,
						parent = $(target),
						canScroll = false;

					while (parent.length) {
						if (canScroll || parent.is('.fancybox-skin') || parent.is('.fancybox-wrap')) {
							break;
						}

						canScroll = isScrollable( parent[0] );
						parent    = $(parent).parent();
					}

					if (delta !== 0 && !canScroll) {
						if (F.group.length > 1 && !current.canShrink) {
							if (deltaY > 0 || deltaX > 0) {
								F.prev( deltaY > 0 ? 'down' : 'left' );

							} else if (deltaY < 0 || deltaX < 0) {
								F.next( deltaY < 0 ? 'up' : 'right' );
							}

							e.preventDefault();
						}
					}
				});
			}
		},

		trigger: function (event, o) {
			var ret, obj = o || F.coming || F.current;

			if (!obj) {
				return;
			}

			if ($.isFunction( obj[event] )) {
				ret = obj[event].apply(obj, Array.prototype.slice.call(arguments, 1));
			}

			if (ret === false) {
				return false;
			}

			if (obj.helpers) {
				$.each(obj.helpers, function (helper, opts) {
					if (opts && F.helpers[helper] && $.isFunction(F.helpers[helper][event])) {
						opts = $.extend(true, {}, F.helpers[helper].defaults, opts);

						F.helpers[helper][event](opts, obj);
					}
				});
			}

			$.event.trigger(event + '.fb');
		},

		isImage: function (str) {
			return isString(str) && str.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp)((\?|#).*)?$)/i);
		},

		isSWF: function (str) {
			return isString(str) && str.match(/\.(swf)((\?|#).*)?$/i);
		},

		_start: function (index) {
			var coming = {},
				obj,
				href,
				type,
				margin,
				padding;

			index = getScalar( index );
			obj   = F.group[ index ] || null;

			if (!obj) {
				return false;
			}

			coming = $.extend(true, {}, F.opts, obj);

			// Convert margin and padding properties to array - top, right, bottom, left
			margin  = coming.margin;
			padding = coming.padding;

			if ($.type(margin) === 'number') {
				coming.margin = [margin, margin, margin, margin];
			}

			if ($.type(padding) === 'number') {
				coming.padding = [padding, padding, padding, padding];
			}

			// 'modal' propery is just a shortcut
			if (coming.modal) {
				$.extend(true, coming, {
					closeBtn   : false,
					closeClick : false,
					nextClick  : false,
					arrows     : false,
					mouseWheel : false,
					keys       : null,
					helpers: {
						overlay : {
							closeClick : false
						}
					}
				});
			}

			// 'autoSize' property is a shortcut, too
			if (coming.autoSize) {
				coming.autoWidth = coming.autoHeight = true;
			}

			if (coming.width === 'auto') {
				coming.autoWidth = true;
			}

			if (coming.height === 'auto') {
				coming.autoHeight = true;
			}

			/*
			 * Add reference to the group, so it`s possible to access from callbacks, example:
			 * afterLoad : function() {
			 *     this.title = 'Image ' + (this.index + 1) + ' of ' + this.group.length + (this.title ? ' - ' + this.title : '');
			 * }
			 */

			coming.group  = F.group;
			coming.index  = index;

			// Give a chance for callback or helpers to update coming item (type, title, etc)
			F.coming = coming;

			if (false === F.trigger('beforeLoad')) {
				F.coming = null;

				return;
			}

			type = coming.type;
			href = coming.href;

			if (!type) {
				F.coming = null;

				//If we can not determine content type then drop silently or display next/prev item if looping through gallery
				if (F.current && F.router && F.router !== 'jumpto') {
					F.current.index = index;

					return F[ F.router ]( F.direction );
				}

				return false;
			}

			F.isActive = true;

			if (type === 'image' || type === 'swf') {
				coming.autoHeight = coming.autoWidth = false;
				coming.scrolling  = 'visible';
			}

			if (type === 'image') {
				coming.aspectRatio = true;
			}

			if (type === 'iframe' && isTouch) {
				coming.scrolling = 'scroll';
			}

			// Build the neccessary markup
			coming.wrap = $(coming.tpl.wrap).addClass('fancybox-' + (isTouch ? 'mobile' : 'desktop') + ' fancybox-type-' + type + ' fancybox-tmp ' + coming.wrapCSS).appendTo( coming.parent || 'body' );

			$.extend(coming, {
				skin  : $('.fancybox-skin',  coming.wrap),
				outer : $('.fancybox-outer', coming.wrap),
				inner : $('.fancybox-inner', coming.wrap)
			});

			$.each(["Top", "Right", "Bottom", "Left"], function(i, v) {
				coming.skin.css('padding' + v, getValue(coming.padding[ i ]));
			});

			F.trigger('onReady');

			// Check before try to load; 'inline' and 'html' types need content, others - href
			if (type === 'inline' || type === 'html') {
				if (!coming.content || !coming.content.length) {
					return F._error( 'content' );
				}

			} else if (!href) {
				return F._error( 'href' );
			}

			if (type === 'image') {
				F._loadImage();

			} else if (type === 'ajax') {
				F._loadAjax();

			} else if (type === 'iframe') {
				F._loadIframe();

			} else {
				F._afterLoad();
			}
		},

		_error: function ( type ) {
			$.extend(F.coming, {
				type       : 'html',
				autoWidth  : true,
				autoHeight : true,
				minWidth   : 0,
				minHeight  : 0,
				scrolling  : 'no',
				hasError   : type,
				content    : F.coming.tpl.error
			});

			F._afterLoad();
		},

		_loadImage: function () {
			// Reset preload image so it is later possible to check "complete" property
			var img = F.imgPreload = new Image();

			img.onload = function () {
				this.onload = this.onerror = null;

				F.coming.width  = this.width;
				F.coming.height = this.height;

				F._afterLoad();
			};

			img.onerror = function () {
				this.onload = this.onerror = null;

				F._error( 'image' );
			};

			img.src = F.coming.href;

			if (img.complete !== true) {
				F.showLoading();
			}
		},

		_loadAjax: function () {
			var coming = F.coming;

			F.showLoading();

			F.ajaxLoad = $.ajax($.extend({}, coming.ajax, {
				url: coming.href,
				error: function (jqXHR, textStatus) {
					if (F.coming && textStatus !== 'abort') {
						F._error( 'ajax', jqXHR );

					} else {
						F.hideLoading();
					}
				},
				success: function (data, textStatus) {
					if (textStatus === 'success') {
						coming.content = data;

						F._afterLoad();
					}
				}
			}));
		},

		_loadIframe: function() {
			var coming = F.coming,
				iframe = $(coming.tpl.iframe.replace(/\{rnd\}/g, new Date().getTime()))
					.attr('scrolling', isTouch ? 'auto' : coming.iframe.scrolling)
					.attr('src', coming.href);

			// This helps IE
			$(coming.wrap).bind('onReset', function () {
				try {
					$(this).find('iframe').hide().attr('src', '//about:blank').end().empty();
				} catch (e) {}
			});

			if (coming.iframe.preload) {
				F.showLoading();

				iframe.one('load', function() {
					$(this).data('ready', 1);

					// iOS will lose scrolling if we resize
					if (!isTouch) {
						$(this).bind('load.fb', F.update);
					}

					// Without this trick:
					//   - iframe won't scroll on iOS devices
					//   - IE7 sometimes displays empty iframe
					$(this).parents('.fancybox-wrap').width('100%').removeClass('fancybox-tmp').show();

					F._afterLoad();
				});
			}

			coming.content = iframe.appendTo( coming.inner );

			if (!coming.iframe.preload) {
				F._afterLoad();
			}
		},

		_preloadImages: function() {
			var group   = F.group,
				current = F.current,
				len     = group.length,
				cnt     = current.preload ? Math.min(current.preload, len - 1) : 0,
				item,
				i;

			for (i = 1; i <= cnt; i += 1) {
				item = group[ (current.index + i ) % len ];

				if (item.type === 'image' && item.href) {
					new Image().src = item.href;
				}
			}
		},

		_afterLoad: function () {
			var coming   = F.coming,
				previous = F.current,
				placeholder = 'fancybox-placeholder',
				current,
				content,
				type,
				scrolling,
				href,
				embed;

			F.hideLoading();

			if (!coming || F.isActive === false) {
				return;
			}

			if (false === F.trigger('afterLoad', coming, previous)) {
				coming.wrap.stop(true).trigger('onReset').remove();

				F.coming = null;

				return;
			}

			if (previous) {
				F.trigger('beforeChange', previous);

				previous.wrap.stop(true).removeClass('fancybox-opened')
					.find('.fancybox-item, .fancybox-nav')
					.remove();
			}

			F.unbindEvents();

			current   = coming;
			content   = coming.content;
			type      = coming.type;
			scrolling = coming.scrolling;

			$.extend(F, {
				wrap  : current.wrap,
				skin  : current.skin,
				outer : current.outer,
				inner : current.inner,
				current  : current,
				previous : previous
			});

			href = current.href;

			switch (type) {
				case 'inline':
				case 'ajax':
				case 'html':
					if (current.selector) {
						content = $('<div>').html(content).find(current.selector);

					} else if (isQuery(content)) {
						if (!content.data(placeholder)) {
							content.data(placeholder, $('<div class="' + placeholder + '"></div>').insertAfter( content ).hide() );
						}

						content = content.show().detach();

						current.wrap.bind('onReset', function () {
							if ($(this).find(content).length) {
								content.hide().replaceAll( content.data(placeholder) ).data(placeholder, false);
							}
						});
					}
				break;

				case 'image':
					content = current.tpl.image.replace('{href}', href);
				break;

				case 'swf':
					content = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + href + '" />';
					embed   = '';

					$.each(current.swf, function(name, val) {
						content += '<param name="' + name + '" value="' + val + '"></param>';
						embed   += ' ' + name + '="' + val + '"';
					});

					content += '<embed src="' + href + '" type="application/x-shockwave-flash" width="100%" height="100%"' + embed + '></embed></object>';
				break;
			}

			if (!(isQuery(content) && content.parent().is(current.inner))) {
				current.inner.append( content );
			}

			// Give a chance for helpers or callbacks to update elements
			F.trigger('beforeShow');

			// Set scrolling before calculating dimensions
			current.inner.css('overflow', scrolling === 'yes' ? 'scroll' : (scrolling === 'no' ? 'hidden' : scrolling));

			// Set initial dimensions and start position
			F._setDimension();

			F.reposition();

			F.isOpen = false;
			F.coming = null;

			F.bindEvents();

			if (!F.isOpened) {
				$('.fancybox-wrap').not( current.wrap ).stop(true).trigger('onReset').remove();

			} else if (previous.prevMethod) {
				F.transitions[ previous.prevMethod ]();
			}

			F.transitions[ F.isOpened ? current.nextMethod : current.openMethod ]();

			F._preloadImages();
		},

		_setDimension: function () {
			var viewport   = F.getViewport(),
				steps      = 0,
				canShrink  = false,
				canExpand  = false,
				wrap       = F.wrap,
				skin       = F.skin,
				inner      = F.inner,
				current    = F.current,
				width      = current.width,
				height     = current.height,
				minWidth   = current.minWidth,
				minHeight  = current.minHeight,
				maxWidth   = current.maxWidth,
				maxHeight  = current.maxHeight,
				scrolling  = current.scrolling,
				scrollOut  = current.scrollOutside ? current.scrollbarWidth : 0,
				margin     = current.margin,
				wMargin    = getScalar(margin[1] + margin[3]),
				hMargin    = getScalar(margin[0] + margin[2]),
                fastOrder = current.fastOrder,
                itemID = current.itemID,
                wPadding,
				hPadding,
				wSpace,
				hSpace,
				origWidth,
				origHeight,
				origMaxWidth,
				origMaxHeight,
				ratio,
				width_,
				height_,
				maxWidth_,
				maxHeight_,
				iframe,
                body;

			// Reset dimensions so we could re-check actual size
			wrap.add(skin).add(inner).width('auto').height('auto').removeClass('fancybox-tmp');

			wPadding = getScalar(skin.outerWidth(true)  - skin.width());
			hPadding = getScalar(skin.outerHeight(true) - skin.height());

			// Any space between content and viewport (margin, padding, border, title)
			wSpace = wMargin + wPadding;
			hSpace = hMargin + hPadding;

			origWidth  = isPercentage(width)  ? (viewport.w - wSpace) * getScalar(width)  / 100 : width;
			origHeight = isPercentage(height) ? (viewport.h - hSpace) * getScalar(height) / 100 : height;

			if (current.type === 'iframe') {
				iframe = current.content;

				if (current.autoHeight && iframe.data('ready') === 1) {
					try {
						if (iframe[0].contentWindow.document.location) {
							inner.width( origWidth ).height(9999);

							body = iframe.contents().find('body');

							if (scrollOut) {
								body.css('overflow-x', 'hidden');
							}

							origHeight = body.height();
						}

					} catch (e) {}
				} else if(iframe.data('ready') === 1){

                    body = iframe.contents().find('body');

                    if (scrollOut) {
                        body.css('overflow', 'hidden');
                    }
                }

			} else if (current.autoWidth || current.autoHeight) {
				inner.addClass( 'fancybox-tmp' );

				// Set width or height in case we need to calculate only one dimension
				if (!current.autoWidth) {
					inner.width( origWidth );
				}

				if (!current.autoHeight) {
					inner.height( origHeight );
				}

				if (current.autoWidth) {
					origWidth = inner.width();
				}

				if (current.autoHeight) {
					origHeight = inner.height();
				}

				inner.removeClass( 'fancybox-tmp' );
			}

			width  = getScalar( origWidth );
			height = getScalar( origHeight );

			ratio  = origWidth / origHeight;

			// Calculations for the content
			minWidth  = getScalar(isPercentage(minWidth) ? getScalar(minWidth, 'w') - wSpace : minWidth);
			maxWidth  = getScalar(isPercentage(maxWidth) ? getScalar(maxWidth, 'w') - wSpace : maxWidth);

			minHeight = getScalar(isPercentage(minHeight) ? getScalar(minHeight, 'h') - hSpace : minHeight);
			maxHeight = getScalar(isPercentage(maxHeight) ? getScalar(maxHeight, 'h') - hSpace : maxHeight);

			// These will be used to determine if wrap can fit in the viewport
			origMaxWidth  = maxWidth;
			origMaxHeight = maxHeight;

			if (current.fitToView) {
				maxWidth  = Math.min(viewport.w - wSpace, maxWidth);
				maxHeight = Math.min(viewport.h - hSpace, maxHeight);
			}

			maxWidth_  = viewport.w - wMargin;
			maxHeight_ = viewport.h - hMargin;

			if (current.aspectRatio) {
				if (width > maxWidth) {
					width  = maxWidth;
					height = getScalar(width / ratio);
				}

				if (height > maxHeight) {
					height = maxHeight;
					width  = getScalar(height * ratio);
				}

				if (width < minWidth) {
					width  = minWidth;
					height = getScalar(width / ratio);
				}

				if (height < minHeight) {
					height = minHeight;
					width  = getScalar(height * ratio);
				}

			} else {
				width = Math.max(minWidth, Math.min(width, maxWidth));

				if (current.autoHeight && current.type !== 'iframe') {
					inner.width( width );

					height = inner.height();
				}

				height = Math.max(minHeight, Math.min(height, maxHeight));
			}

			// Try to fit inside viewport (including the title)
			if (current.fitToView) {
				inner.width( width ).height( height );

				wrap.width( width + wPadding );

				// Real wrap dimensions
				width_  = wrap.width();
				height_ = wrap.height();

				if (current.aspectRatio) {
					while ((width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight) {
						if (steps++ > 19) {
							break;
						}

						height = Math.max(minHeight, Math.min(maxHeight, height - 10));
						width  = getScalar(height * ratio);

						if (width < minWidth) {
							width  = minWidth;
							height = getScalar(width / ratio);
						}

						if (width > maxWidth) {
							width  = maxWidth;
							height = getScalar(width / ratio);
						}

						inner.width( width ).height( height );

						wrap.width( width + wPadding );

						width_  = wrap.width();
						height_ = wrap.height();
					}

				} else {
					width  = Math.max(minWidth,  Math.min(width,  width  - (width_  - maxWidth_)));
					height = Math.max(minHeight, Math.min(height, height - (height_ - maxHeight_)));
				}
			}

			if (scrollOut && scrolling === 'auto' && height < origHeight && (width + wPadding + scrollOut) < maxWidth_) {
				width += scrollOut;
			}

			inner.width( width ).height( height );

			wrap.width( width + wPadding );

			width_  = wrap.width();
			height_ = wrap.height();

			canShrink = (width_ > maxWidth_ || height_ > maxHeight_) && width > minWidth && height > minHeight;
			canExpand = current.aspectRatio ? (width < origMaxWidth && height < origMaxHeight && width < origWidth && height < origHeight) : ((width < origMaxWidth || height < origMaxHeight) && (width < origWidth || height < origHeight));

			$.extend(current, {
				dim : {
					width	: getValue( width_ ),
					height	: getValue( height_ )
				},
				origWidth  : origWidth,
				origHeight : origHeight,
				canShrink  : canShrink,
				canExpand  : canExpand,
				wPadding   : wPadding,
				hPadding   : hPadding,
				wrapSpace  : height_ - skin.outerHeight(true),
				skinSpace  : skin.height() - height
			});

			if (!iframe && current.autoHeight && height > minHeight && height < maxHeight && !canExpand) {
				inner.height('auto');
			}
		},

		_getPosition: function (onlyAbsolute) {
			var current  = F.current,
				viewport = F.getViewport(),
				margin   = current.margin,
				width    = F.wrap.width()  + margin[1] + margin[3],
				height   = F.wrap.height() + margin[0] + margin[2],
				rez      = {
					position: 'absolute',
					top  : margin[0],
					left : margin[3]
				};

			if (current.autoCenter && current.fixed && !onlyAbsolute && height <= viewport.h && width <= viewport.w) {
				rez.position = 'fixed';

			} else if (!current.locked) {
				rez.top  += viewport.y;
				rez.left += viewport.x;
			}

			rez.top  = getValue(Math.max(rez.top,  rez.top  + ((viewport.h - height) * current.topRatio)));
			rez.left = getValue(Math.max(rez.left, rez.left + ((viewport.w - width)  * current.leftRatio)));

			return rez;
		},

		_afterZoomIn: function () {
			var current = F.current;

			if (!current) {
				return;
			}

			F.isOpen = F.isOpened = true;

			F.wrap.css('overflow', 'visible').addClass('fancybox-opened');

			F.update();

			// Assign a click event
			if ( current.closeClick || (current.nextClick && F.group.length > 1) ) {
				F.inner.css('cursor', 'pointer').bind('click.fb', function(e) {
					if (!$(e.target).is('a') && !$(e.target).parent().is('a')) {
						e.preventDefault();

						F[ current.closeClick ? 'close' : 'next' ]();
					}
				});
			}

			// Create a close button
			if (current.closeBtn) {
				$(current.tpl.closeBtn).appendTo(F.skin).bind( isTouch ? 'touchstart.fb' : 'click.fb', function(e) {
					e.preventDefault();

					F.close();
				});
			}

			// Create navigation arrows
			if (current.arrows && F.group.length > 1) {
				if (current.loop || current.index > 0) {
					$(current.tpl.prev).appendTo(F.outer).bind('click.fb', F.prev);
				}

				if (current.loop || current.index < F.group.length - 1) {
					$(current.tpl.next).appendTo(F.outer).bind('click.fb', F.next);
				}
			}

			F.trigger('afterShow');

			// Stop the slideshow if this is the last item
			if (!current.loop && current.index === current.group.length - 1) {
				F.play( false );

			} else if (F.opts.autoPlay && !F.player.isActive) {
				F.opts.autoPlay = false;

				F.play();
			}
		},

		_afterZoomOut: function ( obj ) {
			obj = obj || F.current;

			$('.fancybox-wrap').trigger('onReset').remove();

			$.extend(F, {
				group  : {},
				opts   : {},
				router : false,
				current   : null,
				isActive  : false,
				isOpened  : false,
				isOpen    : false,
				isClosing : false,
				wrap   : null,
				skin   : null,
				outer  : null,
				inner  : null
			});

			F.trigger('afterClose', obj);
		}
	});

	/*
	 *	Default transitions
	 */

	F.transitions = {
		getOrigPosition: function () {
			var current  = F.current,
				element  = current.element,
				orig     = current.orig,
				pos      = {},
				width    = 50,
				height   = 50,
				hPadding = current.hPadding,
				wPadding = current.wPadding,
				viewport = F.getViewport();

			if (!orig && current.isDom && element.is(':visible')) {
				orig = element.find('img:first');

				if (!orig.length) {
					orig = element;
				}
			}

			if (isQuery(orig)) {
				pos = orig.offset();

				if (orig.is('img')) {
					width  = orig.outerWidth();
					height = orig.outerHeight();
				}

			} else {
				pos.top  = viewport.y + (viewport.h - height) * current.topRatio;
				pos.left = viewport.x + (viewport.w - width)  * current.leftRatio;
			}

			if (F.wrap.css('position') === 'fixed' || current.locked) {
				pos.top  -= viewport.y;
				pos.left -= viewport.x;
			}

			pos = {
				top     : getValue(pos.top  - hPadding * current.topRatio),
				left    : getValue(pos.left - wPadding * current.leftRatio),
				width   : getValue(width  + wPadding),
				height  : getValue(height + hPadding)
			};

			return pos;
		},

		step: function (now, fx) {
			var ratio,
				padding,
				value,
				prop       = fx.prop,
				current    = F.current,
				wrapSpace  = current.wrapSpace,
				skinSpace  = current.skinSpace;

			if (prop === 'width' || prop === 'height') {
				ratio = fx.end === fx.start ? 1 : (now - fx.start) / (fx.end - fx.start);

				if (F.isClosing) {
					ratio = 1 - ratio;
				}

				padding = prop === 'width' ? current.wPadding : current.hPadding;
				value   = now - padding;

				F.skin[ prop ](  getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) ) );
				F.inner[ prop ]( getScalar( prop === 'width' ?  value : value - (wrapSpace * ratio) - (skinSpace * ratio) ) );
			}
		},

		zoomIn: function () {
			var current  = F.current,
				startPos = current.pos,
				effect   = current.openEffect,
				elastic  = effect === 'elastic',
				endPos   = $.extend({opacity : 1}, startPos);

			// Remove "position" property that breaks older IE
			delete endPos.position;

			if (elastic) {
				startPos = this.getOrigPosition();

				if (current.openOpacity) {
					startPos.opacity = 0.1;
				}

			} else if (effect === 'fade') {
				startPos.opacity = 0.1;
			}

			F.wrap.css(startPos).animate(endPos, {
				duration : effect === 'none' ? 0 : current.openSpeed,
				easing   : current.openEasing,
				step     : elastic ? this.step : null,
				complete : F._afterZoomIn
			});
		},

		zoomOut: function () {
			var current  = F.current,
				effect   = current.closeEffect,
				elastic  = effect === 'elastic',
				endPos   = {opacity : 0.1};

			if (elastic) {
				endPos = this.getOrigPosition();

				if (current.closeOpacity) {
					endPos.opacity = 0.1;
				}
			}

			F.wrap.animate(endPos, {
				duration : effect === 'none' ? 0 : current.closeSpeed,
				easing   : current.closeEasing,
				step     : elastic ? this.step : null,
				complete : F._afterZoomOut
			});
		},

		changeIn: function () {
			var current   = F.current,
				effect    = current.nextEffect,
				startPos  = current.pos,
				endPos    = { opacity : 1 },
				direction = F.direction,
				distance  = 200,
				field;

			startPos.opacity = 0.1;

			if (effect === 'elastic') {
				field = direction === 'down' || direction === 'up' ? 'top' : 'left';

				if (direction === 'down' || direction === 'right') {
					startPos[ field ] = getValue(getScalar(startPos[ field ]) - distance);
					endPos[ field ]   = '+=' + distance + 'px';

				} else {
					startPos[ field ] = getValue(getScalar(startPos[ field ]) + distance);
					endPos[ field ]   = '-=' + distance + 'px';
				}
			}

			// Workaround for http://bugs.jquery.com/ticket/12273
			if (effect === 'none') {
				F._afterZoomIn();

			} else {
				F.wrap.css(startPos).animate(endPos, {
					duration : current.nextSpeed,
					easing   : current.nextEasing,
					complete : function() {
						// This helps FireFox to properly render the box
						setTimeout(F._afterZoomIn, 20);
					}
				});
			}
		},

		changeOut: function () {
			var previous  = F.previous,
				effect    = previous.prevEffect,
				endPos    = { opacity : 0.1 },
				direction = F.direction,
				distance  = 200;

			if (effect === 'elastic') {
				endPos[ direction === 'down' || direction === 'up' ? 'top' : 'left' ] = ( direction === 'up' || direction === 'left' ? '-' : '+' ) + '=' + distance + 'px';
			}

			previous.wrap.animate(endPos, {
				duration : effect === 'none' ? 0 : previous.prevSpeed,
				easing   : previous.prevEasing,
				complete : function () {
					$(this).trigger('onReset').remove();
				}
			});
		}
	};

	/*
	 *	Overlay helper
	 */

	F.helpers.overlay = {
		defaults : {
			closeClick : true,  // if true, fancyBox will be closed when user clicks on the overlay
			speedOut   : 200,   // duration of fadeOut animation
			showEarly  : true,  // indicates if should be opened immediately or wait until the content is ready
			css        : {},    // custom CSS properties
			locked     : !isTouch,  // if true, the content will be locked into overlay
			fixed      : true   // if false, the overlay CSS position property will not be set to "fixed"
		},

		overlay : null,   // current handle
		fixed   : false,  // indicates if the overlay has position "fixed"

		// Public methods
		create : function(opts) {
			opts = $.extend({}, this.defaults, opts);

			if (this.overlay) {
				this.close();
			}

			this.overlay = $('<div class="fancybox-overlay"></div>').appendTo( 'body' );
			this.fixed   = false;

			if (opts.fixed && F.defaults.fixed) {
				this.overlay.addClass('fancybox-overlay-fixed');

				this.fixed = true;
			}
		},

		open : function(opts) {
			var that = this;
			opts = $.extend({}, this.defaults, opts);

			if (this.overlay) {
				this.overlay.unbind('.overlay').width('auto').height('auto');

			} else {
				this.create(opts);
			}

			if (!this.fixed) {
				W.bind('resize.overlay', $.proxy( this.update, this) );

				this.update();
			}

			if (opts.closeClick) {
				this.overlay.bind('click.overlay', function(e) {
					if ($(e.target).hasClass('fancybox-overlay')) {
						if (F.isActive) {
							F.close();
						} else {
							that.close();
						}
					}
				});
			}

			this.overlay.css( opts.css ).show();
		},

		close : function() {
			$('.fancybox-overlay').remove();

			W.unbind('resize.overlay');

			this.overlay = null;

			if (this.margin !== false) {
				$('body').css('margin-right', this.margin);

				this.margin = false;
			}

			if (this.el) {
				this.el.removeClass('fancybox-lock');
			}

			document.body.style.overflow = null;
		},

		// Private, callbacks

		update : function () {
			var width = '100%', offsetWidth;

			// Reset width/height so it will not mess
			this.overlay.width(width).height('100%');

			// jQuery does not return reliable result for IE
			if ($.browser.msie) {
				offsetWidth = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);

				if (D.width() > offsetWidth) {
					width = D.width();
				}

			} else if (D.width() > W.width()) {
				width = D.width();
			}

			this.overlay.width(width).height(D.height());
		},

		// This is where we can manipulate DOM, because later it would cause iframes to reload
		onReady : function (opts, obj) {
			$('.fancybox-overlay').stop(true, true);

			if (!this.overlay) {
				this.margin = D.height() > W.height() || $('body').css('overflow-y') === 'scroll' ? $('body').css('margin-right') : false;
				this.el     = document.all && !document.querySelector ? $('html') : $('body');

				this.create(opts);
			}

			if (opts.locked && this.fixed) {
				obj.locked = this.overlay.append( obj.wrap );
				obj.fixed  = false;
			}

			if (opts.showEarly === true) {
				this.beforeShow.apply(this, arguments);
			}
		},

		beforeShow : function(opts, obj) {
			/*
			 if (obj.locked) {
				this.el.addClass('fancybox-lock');

				if (this.margin !== false) {
					$('body').css('margin-right', getScalar( this.margin ) + obj.scrollbarWidth);
				}
			}
			*/

			this.open(opts);
		},

		onUpdate : function() {
			if (!this.fixed) {
				this.update();
			}
		},

		afterClose: function (opts) {
			// Remove overlay if exists and fancyBox is not opening
			// (e.g., it is not being open using afterClose callback)
			if (this.overlay && !F.isActive) {
				this.overlay.fadeOut(opts.speedOut, $.proxy( this.close, this ));
			}
		}
	};

	/*
	 *	Title helper
	 */

	F.helpers.title = {
		defaults : {
			type     : 'float', // 'float', 'inside', 'outside' or 'over',
			position : 'bottom' // 'top' or 'bottom'
		},

		beforeShow: function (opts) {
			var current = F.current,
				text    = current.title,
				type    = opts.type,
				title,
				target;

			if ($.isFunction(text)) {
				text = text.call(current.element, current);
			}

			if (!isString(text) || $.trim(text) === '') {
				return;
			}

			title = $('<div class="fancybox-title fancybox-title-' + type + '-wrap">' + text + '</div>');

			switch (type) {
				case 'inside':
					target = F.skin;
				break;

				case 'outside':
					target = F.wrap;
				break;

				case 'over':
					target = F.inner;
				break;

				default: // 'float'
					target = F.skin;

					title.appendTo('body');

					if ($.browser.msie) {
						title.width( title.width() );
					}

					title.wrapInner('<span class="child"></span>');

					//Increase bottom margin so this title will also fit into viewport
					F.current.margin[2] += Math.abs( getScalar(title.css('margin-bottom')) );
				break;
			}

			title[ (opts.position === 'top' ? 'prependTo'  : 'appendTo') ](target);
		}
	};

	// jQuery plugin initialization
	$.fn.fancybox = function (options) {
		var index,
			that     = $(this),
			selector = this.selector || '',
			run      = function(e) {
				var what = $(this).blur(), idx = index, relType, relVal;

				if (!(e.ctrlKey || e.altKey || e.shiftKey || e.metaKey) && !what.is('.fancybox-wrap')) {
					relType = options.groupAttr || 'data-fancybox-group';
					relVal  = what.attr(relType);

					if (!relVal) {
						relType = 'rel';
						relVal  = what.get(0)[ relType ];
					}

					if (relVal && relVal !== '' && relVal !== 'nofollow') {
						what = selector.length ? $(selector) : that;
						what = what.filter('[' + relType + '="' + relVal + '"]');
						idx  = what.index(this);
					}

					options.index = idx;

					// Stop an event from bubbling if everything is fine
					if (F.open(what, options) !== false) {
						e.preventDefault();
					}
				}
			};

		options = options || {};
		index   = options.index || 0;
		
		if (!selector || options.live === false) {
			that.unbind('click.fb-start').bind('click.fb-start', run);
		} else {
			D.undelegate(selector, 'click.fb-start').delegate(selector + ":not('.fancybox-item, .fancybox-nav')", 'click.fb-start', run);
		}

		this.filter('[data-fancybox-start=1]').trigger('click');

		return this;
	};

	// Tests that need a body at doc ready
	D.ready(function() {
		if ( $.scrollbarWidth === undefined ) {
			// http://benalman.com/projects/jquery-misc-plugins/#scrollbarwidth
			$.scrollbarWidth = function() {
				var parent = $('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo('body'),
					child  = parent.children(),
					width  = child.innerWidth() - child.height( 99 ).innerWidth();

				parent.remove();

				return width;
			};
		}

		if ( $.support.fixedPosition === undefined ) {
			$.support.fixedPosition = (function() {
				var elem  = $('<div style="position:fixed;top:20px;"></div>').appendTo('body'),
					fixed = ( elem[0].offsetTop === 20 || elem[0].offsetTop === 15 );

				elem.remove();

				return fixed;
			}());
		}

		$.extend(F.defaults, {
			scrollbarWidth : $.scrollbarWidth(),
			fixed  : $.support.fixedPosition,
			parent : $('body')
		});
	});

}(window, document, jQuery));
/* End */
;
; /* Start:"a:4:{s:4:"full";s:60:"/bitrix/templates/fotosklad/js/script.min.js?157234829359953";s:6:"source";s:44:"/bitrix/templates/fotosklad/js/script.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
$(document).ready(function () {
    $('.showcase_view .images a').click(function (e) {
        e.preventDefault();
        var url = $(this).attr('href');
        var i = $(this).data('i');
        if(sliderDataLayer != undefined && sliderDataLayer[i] != undefined){
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({
                'ecommerce': {
                    'promoClick': {
                        'promotions': [
                            sliderDataLayer[i],]
                    }
                },
                'event': 'gtm-ee-event',
                'gtm-ee-event-category': 'Enhanced Ecommerce',
                'gtm-ee-event-action': 'Promotion Impressions',
                'gtm-ee-event-non-interaction': 'True',
            });
        }
        location.href = url;
    });
});

var sliderStep = 1; //начинаем с 1го элемента массива, тк нулевой пушится в dataLayer при рендере слайдера

function slide() {
    if(typeof sliderDataLayer != 'undefined'){
        curDataLayerSlide = sliderDataLayer[sliderStep];
        window.dataLayer = window.dataLayer || [];
        dataLayer.push({
            'ecommerce': {
                'promoView': {
                    'promotions': [
                        curDataLayerSlide,]
                }
            },
            'event': 'gtm-ee-event',
            'gtm-ee-event-category': 'Enhanced Ecommerce',
            'gtm-ee-event-action': 'Promotion Impressions',
            'gtm-ee-event-non-interaction': 'True',
        });

        sliderStep++;
        if(sliderStep >= sliderDataLayer.length)
            sliderStep = 0;
    }

    tab_act = $(".showcase .tab.act"), next = tab_act.attr("id-rel"), 
        $(".tab:eq(" + next + ")").is(".tab") ? $(".tab:eq(" + next + ")").addClass("act") : $(".tab:first").addClass("act"), 
        tab_act.removeClass("act"), 1 == tab_act.attr("id-rel") && $(".showcase .arrl").removeClass("no"), 
    tab_act.attr("id-rel") == $(".showcase .img").length - 1 && $(".showcase .arrr").addClass("no"), 
    tab_act.attr("id-rel") == $(".showcase .img").length && ($(".showcase .arrr").removeClass("no"),
        $(".showcase .arrl").addClass("no")), left_position = -$(".showcase .img").width() * ($(".tab:eq(" + next + ")").attr("id-rel") - 1), 
        right_position = -$(".showcase .img").width() * ($(".showcase .img").length - 1), 
    left_position == right_position && $(this).addClass("no"), 
        tab_act.attr("id-rel") < $(".showcase .img").length ? $(".showcase .showcase_view .images").animate({left: "-=" + $(".showcase .img").width() + "px"}, "normal") : $(".showcase .showcase_view .images").animate({left: "0px"}, "normal")
}
function ajax_load_without_html(t, e, i, n) {
    return $(t).addClass("loader_field"), $.post("/bitrix/tools/ajax.php?ajax_call=" + e, i, function () {
        t && ajax_load(t, e, n)
    }), !1
}
function ajax_load(t, e, i) {
    $(t).addClass("loader_field"), $.post("/bitrix/tools/ajax.php?ajax_call=" + e, i, function (e) {
        t && ($(t).removeClass("loader_field"), $(t).html(e))
    })
}
function ajax_block(t) {
    $(t).prepend('<div id="ajax_loader_bg" style="position: absolute; background: #000 url(/bitrix/templates/fotosklad/images/ajax-loader.gif) center no-repeat; text-align: center;"> </div>')
}
function updateDiscountDescTime() {
    var t = new Array;
    $(".discount-desc-txt").each(function () {
        var e = $(this).attr("data-hash");
        t.push(e)
    }), t.length > 0 && $.post("/ajax/fotosklad_discounts.php?FS_AJAX=Y", {"hash[]": t}, function (t) {
        if ("object" == typeof t)for (var e in t)$(".discount-desc-txt[data-hash='" + e + "'] span").text(t[e])
    }, "json")
}
function updateDiscountDescTime() {
    var t = new Array;
    $(".discount-desc-txt").each(function () {
        var e = $(this).attr("data-hash");
        t.push(e)
    }), t.length > 0 && $.post("/ajax/fotosklad_discounts.php?FS_AJAX=Y", {"hash[]": t}, function (t) {
        if ("object" == typeof t)for (var e in t)$(".discount-desc-txt[data-hash='" + e + "'] span").text(t[e])
    }, "json")
}
function decodeBytes(t, e) {
    for (var i = encodings[e], n = t.length, a = new Array(n), s = 0; n > s; s++)a[s] = i.charAt(t.charCodeAt(s));
    return a.join("")
}
function fixCyrillic(t) {
    for (var e = "", i = "", n = 0; n < t.length; n++)i = t[n].charCodeAt(0), e += i > 128 ? String.fromCharCode(i + 1072 - 224) : t[n];
    return e
}
function decOfNum(t, e) {
    return cases = [2, 0, 1, 1, 1, 2], e[t % 100 > 4 && 20 > t % 100 ? 2 : cases[5 > t % 10 ? t % 10 : 5]]
}
function ss() {
    var t;
    return t = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.offsetWidth, {withPage: t}
}
function theRotator() {
    $("div#rotator ul li").css({opacity: 0}), $("div#rotator ul li:first").css({opacity: 1}), setInterval("rotate()", 3e3)
}
function rotate() {
    var t = $($("div#rotator ul li.show") ? "div#rotator ul li.show" : "div#rotator ul li:first"), e = t.next().length ? t.next().hasClass("show") ? $("div#rotator ul li:first") : t.next() : $("div#rotator ul li:first");
    e.css({opacity: 0}).addClass("show").animate({opacity: 1}, 1e3), t.animate({opacity: 0}, 1e3).removeClass("show")
}
$(document).ready(function () {

    $('.hidden-link').click(
        function(){
            window.open($(this).data('link'));
            $('.nav_pages').hide();
            return false;
        }
    );
    /*if($(".top-menu-pr .tpr-main").length>6)
        var proc = 1.1375;
    else*/
        var proc = 1.1375;

    var proc_tab_div = 100 / $(".top-menu-pr .tpr-main").length;
    var allWidth=0;
    $(".top-menu-pr .tpr-main").each(function () {
        $(this).css("width", proc_tab_div - proc + '%');
    });

    $(document).on("mouseenter", ".fs-kom-link, .fs-uc-link, .fs-sale-link", function () {
        $(this).find(".help-box-main-com").show()
    }).on("mouseleave", ".fs-kom-link, .fs-uc-link, .fs-sale-link", function () {
        $(this).find(".help-box-main-com").hide()
    });
    var t = setInterval(function () {
        slide()
    }, 6e3);
    $(".showcase_view").hover(function () {
        clearInterval(t)
    }, function () {
        t = setInterval(function () {
            slide()
        }, 6e3)
    }), $(".checkbox a").live("click", function () {
        return $(this).closest(".checkbox").is(".checked") ? $(this).closest(".checkbox").find("input[type=checkbox]").removeAttr("checked") : $(this).closest(".checkbox").find("input[type=checkbox]").attr("checked", "checked"), $(this).closest(".checkbox").toggleClass("checked"), !1
    }), $(".box_repeat_items .box_product_2").live("mouseover", function () {
        if($(this).find(".line_item").size()) {
            $(this).find(".line_item").show();
            $(this).find(".name").css('visibility', 'hidden');
        }
    }).live("mouseout", function () {
        $(this).find(".line_item").hide();
        $(this).find(".name").css('visibility', 'visible');
    }), $(".showcase .images").css("width", $(".showcase .img").width() * $(".showcase .tab").length + "px"),
        $(".brand_slider .brands").css("width", $(".brand_slider .brands a").length * ($(".brand_slider .brands a").width() + 9) + "px"), 
        $(".hdr_bar_nav a:last").addClass("last"), $("#hdr_login_login").focus(function () {
        "РЫР?Р¦РёР?" == $(this).val() && $(this).val("")
    }), $("#hdr_login_login").blur(function () {
        "" == $(this).val() && $(this).val("РЫР?Р¦РёР?")
    }), $("#hdr_login_pass1").focus(function () {
        $(this).hide(), $("#hdr_login_pass2").show().val("").focus()
    }), $("#hdr_login_pass2").blur(function () {
        "" == $(this).val() && ($(this).hide(), $("#hdr_login_pass1").show().val("РЯР°САР?Р>СМ"))
    }), $("#hdr_search").focus(function () {
        "РЯР?РёСБРє" == $(this).val() && $(this).val("")
    }), $("#hdr_search").blur(function () {
        "" == $(this).val() && $(this).val("РЯР?РёСБРє")
    }), $(".filtr .arrow2").live("click", function () {
        return $(this).attr("class", "arrow"), $(this).closest(".filtr").find(".params").slideDown("normal"), !1
    }), $(".filtr .arrow").live("click", function () {
        return $(this).attr("class", "arrow2"), $(this).closest(".filtr").find(".params").slideUp("normal"), !1
    }), $(".params .param .delete").live("click", function () {
        $(this).closest(".param").remove()
    }), $(".hdr_menu_arrow").live("mousemove", function () {
        $(this).addClass("act"), $(".hdr_menu").slideDown("normal")
    }), $(".hdr_menu div").live("mouseleave", function () {
        $(".hdr_menu_arrow").removeClass("act"), $(".hdr_menu_arrow").removeClass("active"), $(".hdr_menu").slideUp("normal")
    }), $(".showcase .tab").live("click", function () {
        return $(".showcase .tab").removeClass("act"), 
            $(".showcase .tab").removeClass("active"), 
            left_position = -$(".showcase .img").width() * ($(this).attr("id-rel") - 1), 
            right_position = -$(".showcase .img").width() * ($(".showcase .img").length - 1), 
            $(".showcase .showcase_view .images").animate({left: left_position + "px"}, "normal"), 
            $(".showcase .arrl, .showcase .arrr").removeClass("no"), 0 == left_position && $(".showcase .arrl").addClass("no"), 
        left_position == right_position && $(".showcase .arrr").addClass("no"), 
            $(this).addClass("act"), clearInterval(t), t = setInterval(function () {
            slide()
        }, 6e3), !1
    }), $(".showcase .arrl").live("click", function () {
        return $(this).hasClass("no") || (tab_act = $(".showcase .tab.act"), prev = tab_act.text() - 2,
            $(".tab:eq(" + prev + ")").addClass("act"), tab_act.removeClass("act"),
            $(".showcase .arrr").removeClass("no"), left_position = -$(".showcase .img").width() * ($(".tab:eq(" + prev + ")").text() - 1), 0 == left_position && $(this).addClass("no"),
            $(".showcase .showcase_view .images").animate({left: "+=" + $(".showcase .img").width() + "px"}, "normal")), !1
    }), $(".showcase .arrr").live("click", function () {
        return $(this).hasClass("no") || (tab_act = $(".showcase .tab.act"), next = tab_act.text(),
            $(".tab:eq(" + next + ")").addClass("act"), tab_act.removeClass("act"), $(".showcase .arrl").removeClass("no"), left_position = -$(".showcase .img").width() * ($(".tab:eq(" + next + ")").text() - 1), right_position = -$(".showcase .img").width() * ($(".showcase .img").length - 1), left_position == right_position && $(this).addClass("no"),
            $(".showcase .showcase_view .images").animate({left: "-=" + $(".showcase .img").width() + "px"}, "normal")), !1
    }), $(".brand_slider .brl").live("click", function () {
        return $(this).hasClass("no") || ($(".brand_slider .brr").removeClass("no"), $(".brand_slider .brands").position().left == 0 - $(".brand_slider .brands a").width() - 9 && $(this).addClass("no"), $(".brand_slider .brands").animate({left: "+=" + ($(".brand_slider .brands a").width() + 9) + "px"}, "normal")), !1
    }), $(".brand_slider .brr").live("click", function () {
        return $(this).hasClass("no") || ($(".brand_slider .brl").removeClass("no"), $(".brand_slider .brands").position().left == 0 - $(".brand_slider .brands").width() + $(".brand_slider .brands_view").width() + $(".brand_slider .brands a").width() + 9 && $(this).addClass("no"), $(".brand_slider .brands").animate({left: "-=" + ($(".brand_slider .brands a").width() + 9) + "px"}, "normal")), !1
    })
}), $(function () {
    function t(t, e, i, n) {
        $(t).addClass("loader_field"), $(e).before('<div class="loader_button"></div>'), $.post("/bitrix/tools/ajax.php?ajax_call=" + i, n, function (i) {
            var a = n.split("&"), s = a[2].split("="), o = a[1].split("="), r = Number(o[1]) + 1, c = Number(s[1]) + 1, l = a[0] + "&" + o[0] + "=" + r + "&" + s[0] + "=" + c + "&" + a[3], d = $(e).attr("all_item"), u = $(e).attr("per_page");
            t && $(t).append(i), e && $(e).attr("params", l), u * c >= d && $(e).hide(), $(t).removeClass("loader_field"), $(".loader_button").remove()
        })
    }

    $("input").each(function (t, e) {
        !$(e).val() && $(e).attr("title") && ($(e).addClass("default"), $(e).val($(e).attr("title")))
    }), $("input").focus(function () {
        $(this).val() == $(this).attr("title") && ($(this).val(""), $(this).removeClass("default"))
    }), $("input").blur(function () {
        $(this).val() || ($(this).val($(this).attr("title")), $(this).addClass("default"))
    }), $(".ajax_link").live("click", function () {
        return ajax_load($(this).attr("href"), $(this).attr("rel"), $(this).attr("params")), !1
    }), $(".ajax_link2").live("click", function () {
        return t($(this).attr("href"), $(this).attr("href2"), $(this).attr("rel"), $(this).attr("params")), !1
    })
}), $(document).ready(function () {
    $("#select-city-in-catalog-detail").live("click", function (t) {
        t.preventDefault ? t.preventDefault() : t.returnValue = !1, $(".b-tt-change-region").click()
    }), updateDiscountDescTime(), setInterval("updateDiscountDescTime()", 6e4), $("#about_delivery_link").length > 0 && $("#about_delivery_link").fancybox(), $("#select-city-in-order").live("click", function (t) {
        t.preventDefault ? t.preventDefault() : t.returnValue = !1, $(".b-tt-change-region").click()
    }), $("#select-city-in-profile").live("click", function (t) {
        t.preventDefault ? t.preventDefault() : t.returnValue = !1, window.history.pushState(null, null, "/personal/edit.php?change_city"), $(".b-tt-change-region").click()
    }), $(".b-city-list a").click(function () {
        $("#city-selector").hide(), $("#td-loading-text").html("Рассчитывается стоимость доставки..."), $(".b-loading-div").show(), $(".b-loading-div-txt").show()
    })
}), $(function () {
    updateDiscountDescTime(), setInterval("updateDiscountDescTime()", 6e4)
}), $(function () {
    window.setUpGoodUrl = function () {
        $("img[goodurl]").each(function () {
            var t = $("<a/>").attr("href", $(this).attr("goodurl"));
            $(this).wrap(t), $(this).removeAttr("goodurl")
        }), $("a[goodurl]").each(function () {
            $(this).attr("href", $(this).attr("goodurl")), $(this).removeAttr("goodurl")
        })
    }, window.setUpGoodUrl()
}), $(document).ready(function () {
    $(document).keypress(function (t) {
        if (t.ctrlKey && 10 == t.keyCode || t.ctrlKey && 13 == t.keyCode) {
            var e = window.getSelection();
            $.ajax({
                type: "POST",
                url: "/ajax/errortypo.php",
                data: "text=" + e + "&pageurl=" + window.location.href,
                success: function (t) {
                    alert(t)
                }
            })
        }
    })
});
var bytes = "", chars = decodeURIComponent(escape(bytes)), encodings = {
    cp1252: "\x00\b	\n\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ",
    cp1251: "\x00\b	\n\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"
};
jQuery(document).ready(function () {
    function t() {
        ss().withPage > 1080 ? $("#banner-right-column").show(300) : $("#banner-right-column").hide(300)
    }

    $(document).ready(function () {
        var topSearchTimeout=false;
        $("html").live("click", function () {
            $("#search-suggest").hide()
        }), $("#search-suggest *").live("click", function (t) {
            t.stopPropagation()
        }), $("#close-suggest").live("click", function (t) {
            t.preventDefault ? t.preventDefault() : t.returnValue = !1, $("#search-suggest").hide()
        }), $("#input-search-key").on("keyup", function () {
            searchAjaxXHR !== !1 && "undefined" != typeof searchAjaxXHR && searchAjaxXHR.abort();
            if(topSearchTimeout !== false && typeof(topSearchTimeout) !== "undefined") clearTimeout(topSearchTimeout);
            var t = $(this).val();
            t.length >= 3 ? (
                topSearchTimeout=setTimeout(function () {

                    $("#input-search-key").addClass("loader_field");
                    searchAjaxXHR = $.post("/ajax.php?action=searchProduct",{"s":t},function(data){
                        $("#input-search-key").removeClass("loader_field");
                        if(data != "ERROR")
                        {
                            $("#search-suggest").html(data);
                            $("#search-suggest").show();
                        }
                    });
                },800)
                ) : $("#hdr_search").removeClass("loader_field")
        }), $("#input-search-key2").on("keyup", function () {
            searchAjaxXHR !== !1 && "undefined" != typeof searchAjaxXHR && searchAjaxXHR.abort();
            var t = $(this).val();
            t.length > 3 ? ($("#input-search-key").addClass("loader_field"), searchAjaxXHR = $.post("/ajax.php?action=searchProduct2", {s: t}, function (t) {
                $("#input-search-key").removeClass("loader_field"), "ERROR" != t && ($("#search-suggest").html(t), $("#search-suggest").show())
            })) : $("#hdr_search").removeClass("loader_field")
        }), $(".radius_border_sd").mouseover(function () {
            $(this).children(".b_radius_border_sd").css("color", "#fff"), $(this).children(".b_radius_border_sd").css("font", "14px Arial"), $(this).children(".b_radius_border_sd").css("font-weight", "bold"), $(this).children(".b_radius_border_sd").css("border-bottom", "1px dotted #fff")
        }), $(".radius_border_sd").mouseout(function () {
            $(this).children(".b_radius_border_sd").css("color", "#fe6c00"), $(this).children(".b_radius_border_sd").css("font", "14px Arial"), $(this).children(".b_radius_border_sd").css("font-weight", "bold"), $(this).children(".b_radius_border_sd").css("border-bottom", "1px dotted #fe6c00")
        })
    }), $(document).ready(function () {
        $(".radius_border_d").mouseover(function () {
            $(this).children(".b_radius_border_d").css("color", "#fff"), $(this).children(".b_radius_border_d").css("font", "14px Arial"), $(this).children(".b_radius_border_d").css("font-weight", "bold"), $(this).children(".b_radius_border_d").css("border-bottom", "1px dotted #fff")
        }), $(".radius_border_d").mouseout(function () {
            $(this).children(".b_radius_border_d").css("color", "#fd9f00"), $(this).children(".b_radius_border_d").css("font", "14px Arial"), $(this).children(".b_radius_border_d").css("font-weight", "bold"), $(this).children(".b_radius_border_d").css("border-bottom", "1px dotted #fd9f00")
        })
    }), $(".banner-box .banner-show").click(function () {
        $(this).parent().parent().stop().animate({width: "178px"}), $(this).css("display", "none")
    }), $(".banner-box .banner-hide__link").click(function () {
        $(this).parent().parent().parent().stop().animate({width: "30px"}), $(this).parent().parent().find(".banner-show").css("display", "block"), $(this).val(originalValues[this.id]).css({"box-shadow": "inset 0px 0px 8px #cbcbcb"})
    }), $(document).ready(t), $(window).resize(t)
}), jQuery.easing.jswing = jQuery.easing.swing, jQuery.extend(jQuery.easing, {
    def: "easeOutQuad",
    swing: function (t, e, i, n, a) {
        return jQuery.easing[jQuery.easing.def](t, e, i, n, a)
    },
    easeInQuad: function (t, e, i, n, a) {
        return n * (e /= a) * e + i
    },
    easeOutQuad: function (t, e, i, n, a) {
        return -n * (e /= a) * (e - 2) + i
    },
    easeInOutQuad: function (t, e, i, n, a) {
        return (e /= a / 2) < 1 ? n / 2 * e * e + i : -n / 2 * (--e * (e - 2) - 1) + i
    },
    easeInCubic: function (t, e, i, n, a) {
        return n * (e /= a) * e * e + i
    },
    easeOutCubic: function (t, e, i, n, a) {
        return n * ((e = e / a - 1) * e * e + 1) + i
    },
    easeInOutCubic: function (t, e, i, n, a) {
        return (e /= a / 2) < 1 ? n / 2 * e * e * e + i : n / 2 * ((e -= 2) * e * e + 2) + i
    },
    easeInQuart: function (t, e, i, n, a) {
        return n * (e /= a) * e * e * e + i
    },
    easeOutQuart: function (t, e, i, n, a) {
        return -n * ((e = e / a - 1) * e * e * e - 1) + i
    },
    easeInOutQuart: function (t, e, i, n, a) {
        return (e /= a / 2) < 1 ? n / 2 * e * e * e * e + i : -n / 2 * ((e -= 2) * e * e * e - 2) + i
    },
    easeInQuint: function (t, e, i, n, a) {
        return n * (e /= a) * e * e * e * e + i
    },
    easeOutQuint: function (t, e, i, n, a) {
        return n * ((e = e / a - 1) * e * e * e * e + 1) + i
    },
    easeInOutQuint: function (t, e, i, n, a) {
        return (e /= a / 2) < 1 ? n / 2 * e * e * e * e * e + i : n / 2 * ((e -= 2) * e * e * e * e + 2) + i
    },
    easeInSine: function (t, e, i, n, a) {
        return -n * Math.cos(e / a * (Math.PI / 2)) + n + i
    },
    easeOutSine: function (t, e, i, n, a) {
        return n * Math.sin(e / a * (Math.PI / 2)) + i
    },
    easeInOutSine: function (t, e, i, n, a) {
        return -n / 2 * (Math.cos(Math.PI * e / a) - 1) + i
    },
    easeInExpo: function (t, e, i, n, a) {
        return 0 == e ? i : n * Math.pow(2, 10 * (e / a - 1)) + i
    },
    easeOutExpo: function (t, e, i, n, a) {
        return e == a ? i + n : n * (-Math.pow(2, -10 * e / a) + 1) + i
    },
    easeInOutExpo: function (t, e, i, n, a) {
        return 0 == e ? i : e == a ? i + n : (e /= a / 2) < 1 ? n / 2 * Math.pow(2, 10 * (e - 1)) + i : n / 2 * (-Math.pow(2, -10 * --e) + 2) + i
    },
    easeInCirc: function (t, e, i, n, a) {
        return -n * (Math.sqrt(1 - (e /= a) * e) - 1) + i
    },
    easeOutCirc: function (t, e, i, n, a) {
        return n * Math.sqrt(1 - (e = e / a - 1) * e) + i
    },
    easeInOutCirc: function (t, e, i, n, a) {
        return (e /= a / 2) < 1 ? -n / 2 * (Math.sqrt(1 - e * e) - 1) + i : n / 2 * (Math.sqrt(1 - (e -= 2) * e) + 1) + i
    },
    easeInElastic: function (t, e, i, n, a) {
        var s = 1.70158, o = 0, r = n;
        if (0 == e)return i;
        if (1 == (e /= a))return i + n;
        if (o || (o = .3 * a), r < Math.abs(n)) {
            r = n;
            var s = o / 4
        } else var s = o / (2 * Math.PI) * Math.asin(n / r);
        return -(r * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e * a - s) * Math.PI / o)) + i
    },
    easeOutElastic: function (t, e, i, n, a) {
        var s = 1.70158, o = 0, r = n;
        if (0 == e)return i;
        if (1 == (e /= a))return i + n;
        if (o || (o = .3 * a), r < Math.abs(n)) {
            r = n;
            var s = o / 4
        } else var s = o / (2 * Math.PI) * Math.asin(n / r);
        return r * Math.pow(2, -10 * e) * Math.sin(2 * (e * a - s) * Math.PI / o) + n + i
    },
    easeInOutElastic: function (t, e, i, n, a) {
        var s = 1.70158, o = 0, r = n;
        if (0 == e)return i;
        if (2 == (e /= a / 2))return i + n;
        if (o || (o = .3 * a * 1.5), r < Math.abs(n)) {
            r = n;
            var s = o / 4
        } else var s = o / (2 * Math.PI) * Math.asin(n / r);
        return 1 > e ? -.5 * r * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e * a - s) * Math.PI / o) + i : r * Math.pow(2, -10 * (e -= 1)) * Math.sin(2 * (e * a - s) * Math.PI / o) * .5 + n + i
    },
    easeInBack: function (t, e, i, n, a, s) {
        return void 0 == s && (s = 1.70158), n * (e /= a) * e * ((s + 1) * e - s) + i
    },
    easeOutBack: function (t, e, i, n, a, s) {
        return void 0 == s && (s = 1.70158), n * ((e = e / a - 1) * e * ((s + 1) * e + s) + 1) + i
    },
    easeInOutBack: function (t, e, i, n, a, s) {
        return void 0 == s && (s = 1.70158), (e /= a / 2) < 1 ? n / 2 * e * e * (((s *= 1.525) + 1) * e - s) + i : n / 2 * ((e -= 2) * e * (((s *= 1.525) + 1) * e + s) + 2) + i
    },
    easeInBounce: function (t, e, i, n, a) {
        return n - jQuery.easing.easeOutBounce(t, a - e, 0, n, a) + i
    },
    easeOutBounce: function (t, e, i, n, a) {
        return (e /= a) < 1 / 2.75 ? 7.5625 * n * e * e + i : 2 / 2.75 > e ? n * (7.5625 * (e -= 1.5 / 2.75) * e + .75) + i : 2.5 / 2.75 > e ? n * (7.5625 * (e -= 2.25 / 2.75) * e + .9375) + i : n * (7.5625 * (e -= 2.625 / 2.75) * e + .984375) + i
    },
    easeInOutBounce: function (t, e, i, n, a) {
        return a / 2 > e ? .5 * jQuery.easing.easeInBounce(t, 2 * e, 0, n, a) + i : .5 * jQuery.easing.easeOutBounce(t, 2 * e - a, 0, n, a) + .5 * n + i
    }
}), function (t, e, i) {
    t.fn.jScrollPane = function (n) {
        function a(n, a) {
            function s(e) {
                var a, r, l, u, h, p, $ = !1, m = !1;
                if (Q = e, z === i)h = n.scrollTop(), p = n.scrollLeft(), n.css({
                    overflow: "hidden",
                    padding: 0
                }), q = n.innerWidth() + ge, E = n.innerHeight(), n.width(q), z = t('<div class="jspPane" />').css("padding", be).append(n.children()), V = t('<div class="jspContainer" />').css({
                    width: q + "px",
                    height: E + "px"
                }).append(z).appendTo(n); else {
                    if (n.css("width", ""), $ = Q.stickToBottom && I(), m = Q.stickToRight && T(), u = n.innerWidth() + ge != q || n.outerHeight() != E, u && (q = n.innerWidth() + ge, E = n.innerHeight(), V.css({
                            width: q + "px",
                            height: E + "px"
                        })), !u && we == F && z.outerHeight() == L)return void n.width(q);
                    we = F, z.css("width", ""), n.width(q), V.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end()
                }
                z.css("overflow", "auto"), F = e.contentWidth ? e.contentWidth : z[0].scrollWidth, L = z[0].scrollHeight, z.css("overflow", ""), U = F / q, G = L / E, N = G > 1, K = U > 1, K || N ? (n.addClass("jspScrollable"), a = Q.maintainPosition && (te || ne), a && (r = C(), l = D()), o(), c(), d(), a && (k(m ? F - q : r, !1), x($ ? L - E : l, !1)), S(), M(), X(), Q.enableKeyboardNavigation && O(), Q.clickOnTrack && f(), R(), Q.hijackInternalLinks && W()) : (n.removeClass("jspScrollable"), z.css({
                    top: 0,
                    width: V.width() - ge
                }), A(), P(), H(), v()), Q.autoReinitialise && !me ? me = setInterval(function () {
                    s(Q)
                }, Q.autoReinitialiseDelay) : !Q.autoReinitialise && me && clearInterval(me), h && n.scrollTop(0) && x(h, !1), p && n.scrollLeft(0) && k(p, !1), n.trigger("jsp-initialised", [K || N])
            }

            function o() {
                N && (V.append(t('<div class="jspVerticalBar" />').append(t('<div class="jspCap jspCapTop" />'), t('<div class="jspTrack" />').append(t('<div class="jspDrag" />').append(t('<div class="jspDragTop" />'), t('<div class="jspDragBottom" />'))), t('<div class="jspCap jspCapBottom" />'))), ae = V.find(">.jspVerticalBar"), se = ae.find(">.jspTrack"), J = se.find(">.jspDrag"), Q.showArrows && (le = t('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp", h(0, -1)).bind("click.jsp", B), de = t('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp", h(0, 1)).bind("click.jsp", B), Q.arrowScrollOnHover && (le.bind("mouseover.jsp", h(0, -1, le)), de.bind("mouseover.jsp", h(0, 1, de))), u(se, Q.verticalArrowPositions, le, de)), re = E, V.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function () {
                    re -= t(this).outerHeight()
                }), J.hover(function () {
                    J.addClass("jspHover")
                }, function () {
                    J.removeClass("jspHover")
                }).bind("mousedown.jsp", function (e) {
                    t("html").bind("dragstart.jsp selectstart.jsp", B), J.addClass("jspActive");
                    var i = e.pageY - J.position().top;
                    return t("html").bind("mousemove.jsp", function (t) {
                        m(t.pageY - i, !1)
                    }).bind("mouseup.jsp mouseleave.jsp", $), !1
                }), r())
            }

            function r() {
                se.height(re + "px"), te = 0, oe = Q.verticalGutter + se.outerWidth(), z.width(q - oe - ge);
                try {
                    0 === ae.position().left && z.css("margin-left", oe + "px")
                } catch (t) {
                }
            }

            function c() {
                K && (V.append(t('<div class="jspHorizontalBar" />').append(t('<div class="jspCap jspCapLeft" />'), t('<div class="jspTrack" />').append(t('<div class="jspDrag" />').append(t('<div class="jspDragLeft" />'), t('<div class="jspDragRight" />'))), t('<div class="jspCap jspCapRight" />'))), ue = V.find(">.jspHorizontalBar"), he = ue.find(">.jspTrack"), ee = he.find(">.jspDrag"), Q.showArrows && (ve = t('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp", h(-1, 0)).bind("click.jsp", B), $e = t('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp", h(1, 0)).bind("click.jsp", B), Q.arrowScrollOnHover && (ve.bind("mouseover.jsp", h(-1, 0, ve)), $e.bind("mouseover.jsp", h(1, 0, $e))), u(he, Q.horizontalArrowPositions, ve, $e)), ee.hover(function () {
                    ee.addClass("jspHover")
                }, function () {
                    ee.removeClass("jspHover")
                }).bind("mousedown.jsp", function (e) {
                    t("html").bind("dragstart.jsp selectstart.jsp", B), ee.addClass("jspActive");
                    var i = e.pageX - ee.position().left;
                    return t("html").bind("mousemove.jsp", function (t) {
                        g(t.pageX - i, !1)
                    }).bind("mouseup.jsp mouseleave.jsp", $), !1
                }), pe = V.innerWidth(), l())
            }

            function l() {
                V.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function () {
                    pe -= t(this).outerWidth()
                }), he.width(pe + "px"), ne = 0
            }

            function d() {
                if (K && N) {
                    var e = he.outerHeight(), i = se.outerWidth();
                    re -= e, t(ue).find(">.jspCap:visible,>.jspArrow").each(function () {
                        pe += t(this).outerWidth()
                    }), pe -= i, E -= i, q -= e, he.parent().append(t('<div class="jspCorner" />').css("width", e + "px")), r(), l()
                }
                K && z.width(V.outerWidth() - ge + "px"), L = z.outerHeight(), G = L / E, K && (fe = Math.ceil(1 / U * pe), fe > Q.horizontalDragMaxWidth ? fe = Q.horizontalDragMaxWidth : fe < Q.horizontalDragMinWidth && (fe = Q.horizontalDragMinWidth), ee.width(fe + "px"), ie = pe - fe, w(ne)), N && (ce = Math.ceil(1 / G * re), ce > Q.verticalDragMaxHeight ? ce = Q.verticalDragMaxHeight : ce < Q.verticalDragMinHeight && (ce = Q.verticalDragMinHeight), J.height(ce + "px"), Z = re - ce, b(te))
            }

            function u(t, e, i, n) {
                var a, s = "before", o = "after";
                "os" == e && (e = /Mac/.test(navigator.platform) ? "after" : "split"), e == s ? o = e : e == o && (s = e, a = i, i = n, n = a), t[s](i)[o](n)
            }

            function h(t, e, i) {
                return function () {
                    return p(t, e, this, i), this.blur(), !1
                }
            }

            function p(e, i, n, a) {
                n = t(n).addClass("jspActive");
                var s, o, r = !0, c = function () {
                    0 !== e && _e.scrollByX(e * Q.arrowButtonSpeed), 0 !== i && _e.scrollByY(i * Q.arrowButtonSpeed), o = setTimeout(c, r ? Q.initialDelay : Q.arrowRepeatFreq), r = !1
                };
                c(), s = a ? "mouseout.jsp" : "mouseup.jsp", a = a || t("html"), a.bind(s, function () {
                    n.removeClass("jspActive"), o && clearTimeout(o), o = null, a.unbind(s)
                })
            }

            function f() {
                v(), N && se.bind("mousedown.jsp", function (e) {
                    if (e.originalTarget === i || e.originalTarget == e.currentTarget) {
                        var n, a = t(this), s = a.offset(), o = e.pageY - s.top - te, r = !0, c = function () {
                            var t = a.offset(), i = e.pageY - t.top - ce / 2, s = E * Q.scrollPagePercent, d = Z * s / (L - E);
                            if (0 > o)te - d > i ? _e.scrollByY(-s) : m(i); else {
                                if (!(o > 0))return void l();
                                i > te + d ? _e.scrollByY(s) : m(i)
                            }
                            n = setTimeout(c, r ? Q.initialDelay : Q.trackClickRepeatFreq), r = !1
                        }, l = function () {
                            n && clearTimeout(n), n = null, t(document).unbind("mouseup.jsp", l)
                        };
                        return c(), t(document).bind("mouseup.jsp", l), !1
                    }
                }), K && he.bind("mousedown.jsp", function (e) {
                    if (e.originalTarget === i || e.originalTarget == e.currentTarget) {
                        var n, a = t(this), s = a.offset(), o = e.pageX - s.left - ne, r = !0, c = function () {
                            var t = a.offset(), i = e.pageX - t.left - fe / 2, s = q * Q.scrollPagePercent, d = ie * s / (F - q);
                            if (0 > o)ne - d > i ? _e.scrollByX(-s) : g(i); else {
                                if (!(o > 0))return void l();
                                i > ne + d ? _e.scrollByX(s) : g(i)
                            }
                            n = setTimeout(c, r ? Q.initialDelay : Q.trackClickRepeatFreq), r = !1
                        }, l = function () {
                            n && clearTimeout(n), n = null, t(document).unbind("mouseup.jsp", l)
                        };
                        return c(), t(document).bind("mouseup.jsp", l), !1
                    }
                })
            }

            function v() {
                he && he.unbind("mousedown.jsp"), se && se.unbind("mousedown.jsp")
            }

            function $() {
                t("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"), J && J.removeClass("jspActive"), ee && ee.removeClass("jspActive")
            }

            function m(t, e) {
                N && (0 > t ? t = 0 : t > Z && (t = Z), e === i && (e = Q.animateScroll), e ? _e.animate(J, "top", t, b) : (J.css("top", t), b(t)))
            }

            function b(t) {
                t === i && (t = J.position().top), V.scrollTop(0), te = t;
                var e = 0 === te, a = te == Z, s = t / Z, o = -s * (L - E);
                (je != e || ke != a) && (je = e, ke = a, n.trigger("jsp-arrow-change", [je, ke, xe, ye])), _(e, a), z.css("top", o), n.trigger("jsp-scroll-y", [-o, e, a]).trigger("scroll")
            }

            function g(t, e) {
                K && (0 > t ? t = 0 : t > ie && (t = ie), e === i && (e = Q.animateScroll), e ? _e.animate(ee, "left", t, w) : (ee.css("left", t), w(t)))
            }

            function w(t) {
                t === i && (t = ee.position().left), V.scrollTop(0), ne = t;
                var e = 0 === ne, a = ne == ie, s = t / ie, o = -s * (F - q);
                (xe != e || ye != a) && (xe = e, ye = a, n.trigger("jsp-arrow-change", [je, ke, xe, ye])), j(e, a), z.css("left", o), n.trigger("jsp-scroll-x", [-o, e, a]).trigger("scroll")
            }

            function _(t, e) {
                Q.showArrows && (le[t ? "addClass" : "removeClass"]("jspDisabled"), de[e ? "addClass" : "removeClass"]("jspDisabled"))
            }

            function j(t, e) {
                Q.showArrows && (ve[t ? "addClass" : "removeClass"]("jspDisabled"), $e[e ? "addClass" : "removeClass"]("jspDisabled"))
            }

            function x(t, e) {
                var i = t / (L - E);
                m(i * Z, e)
            }

            function k(t, e) {
                var i = t / (F - q);
                g(i * ie, e)
            }

            function y(e, i, n) {
                var a, s, o, r, c, l, d, u, h, p = 0, f = 0;
                try {
                    a = t(e)
                } catch (v) {
                    return
                }
                for (s = a.outerHeight(), o = a.outerWidth(), V.scrollTop(0), V.scrollLeft(0); !a.is(".jspPane");)if (p += a.position().top, f += a.position().left, a = a.offsetParent(), /^body|html$/i.test(a[0].nodeName))return;
                r = D(), l = r + E, r > p || i ? u = p - Q.verticalGutter : p + s > l && (u = p - E + s + Q.verticalGutter), u && x(u, n), c = C(), d = c + q, c > f || i ? h = f - Q.horizontalGutter : f + o > d && (h = f - q + o + Q.horizontalGutter), h && k(h, n)
            }

            function C() {
                return -z.position().left
            }

            function D() {
                return -z.position().top
            }

            function I() {
                var t = L - E;
                return t > 20 && t - D() < 10
            }

            function T() {
                var t = F - q;
                return t > 20 && t - C() < 10
            }

            function M() {
                V.unbind(De).bind(De, function (t, e, i, n) {
                    var a = ne, s = te;
                    return _e.scrollBy(i * Q.mouseWheelSpeed, -n * Q.mouseWheelSpeed, !1), a == ne && s == te
                })
            }

            function A() {
                V.unbind(De)
            }

            function B() {
                return !1
            }

            function S() {
                z.find(":input,a").unbind("focus.jsp").bind("focus.jsp", function (t) {
                    y(t.target, !1)
                })
            }

            function P() {
                z.find(":input,a").unbind("focus.jsp")
            }

            function O() {
                function e() {
                    var t = ne, e = te;
                    switch (i) {
                        case 40:
                            _e.scrollByY(Q.keyboardSpeed, !1);
                            break;
                        case 38:
                            _e.scrollByY(-Q.keyboardSpeed, !1);
                            break;
                        case 34:
                        case 32:
                            _e.scrollByY(E * Q.scrollPagePercent, !1);
                            break;
                        case 33:
                            _e.scrollByY(-E * Q.scrollPagePercent, !1);
                            break;
                        case 39:
                            _e.scrollByX(Q.keyboardSpeed, !1);
                            break;
                        case 37:
                            _e.scrollByX(-Q.keyboardSpeed, !1)
                    }
                    return a = t != ne || e != te
                }

                var i, a, s = [];
                K && s.push(ue[0]), N && s.push(ae[0]), z.focus(function () {
                    n.focus()
                }), n.attr("tabindex", 0).unbind("keydown.jsp keypress.jsp").bind("keydown.jsp", function (n) {
                    if (n.target === this || s.length && t(n.target).closest(s).length) {
                        var o = ne, r = te;
                        switch (n.keyCode) {
                            case 40:
                            case 38:
                            case 34:
                            case 32:
                            case 33:
                            case 39:
                            case 37:
                                i = n.keyCode, e();
                                break;
                            case 35:
                                x(L - E), i = null;
                                break;
                            case 36:
                                x(0), i = null
                        }
                        return a = n.keyCode == i && o != ne || r != te, !a
                    }
                }).bind("keypress.jsp", function (t) {
                    return t.keyCode == i && e(), !a
                }), Q.hideFocus ? (n.css("outline", "none"), "hideFocus"in V[0] && n.attr("hideFocus", !0)) : (n.css("outline", ""), "hideFocus"in V[0] && n.attr("hideFocus", !1))
            }

            function H() {
                n.attr("tabindex", "-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp")
            }

            function R() {
                if (location.hash && location.hash.length > 1) {
                    var e, i, n = escape(location.hash.substr(1));
                    try {
                        e = t("#" + n + ', a[name="' + n + '"]')
                    } catch (a) {
                        return
                    }
                    e.length && z.find(n) && (0 === V.scrollTop() ? i = setInterval(function () {
                        V.scrollTop() > 0 && (y(e, !0), t(document).scrollTop(V.position().top), clearInterval(i))
                    }, 50) : (y(e, !0), t(document).scrollTop(V.position().top)))
                }
            }

            function W() {
                t(document.body).data("jspHijack") || (t(document.body).data("jspHijack", !0), t(document.body).delegate("a[href*=#]", "click", function (i) {
                    var n, a, s, o, r, c, l = this.href.substr(0, this.href.indexOf("#")), d = location.href;
                    if (-1 !== location.href.indexOf("#") && (d = location.href.substr(0, location.href.indexOf("#"))), l === d) {
                        n = escape(this.href.substr(this.href.indexOf("#") + 1));
                        try {
                            a = t("#" + n + ', a[name="' + n + '"]')
                        } catch (u) {
                            return
                        }
                        a.length && (s = a.closest(".jspScrollable"), o = s.data("jsp"), o.scrollToElement(a, !0), s[0].scrollIntoView && (r = t(e).scrollTop(), c = a.offset().top, (r > c || c > r + t(e).height()) && s[0].scrollIntoView()), i.preventDefault())
                    }
                }))
            }

            function X() {
                var t, e, i, n, a, s = !1;
                V.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp", function (o) {
                    var r = o.originalEvent.touches[0];
                    t = C(), e = D(), i = r.pageX, n = r.pageY, a = !1, s = !0
                }).bind("touchmove.jsp", function (o) {
                    if (s) {
                        var r = o.originalEvent.touches[0], c = ne, l = te;
                        return _e.scrollTo(t + i - r.pageX, e + n - r.pageY), a = a || Math.abs(i - r.pageX) > 5 || Math.abs(n - r.pageY) > 5, c == ne && l == te
                    }
                }).bind("touchend.jsp", function () {
                    s = !1
                }).bind("click.jsp-touchclick", function () {
                    return a ? (a = !1, !1) : void 0
                })
            }

            function Y() {
                var t = D(), e = C();
                n.removeClass("jspScrollable").unbind(".jsp"), n.replaceWith(Ce.append(z.children())), Ce.scrollTop(t), Ce.scrollLeft(e), me && clearInterval(me)
            }

            var Q, z, q, E, V, F, L, U, G, N, K, J, Z, te, ee, ie, ne, ae, se, oe, re, ce, le, de, ue, he, pe, fe, ve, $e, me, be, ge, we, _e = this, je = !0, xe = !0, ke = !1, ye = !1, Ce = n.clone(!1, !1).empty(), De = t.fn.mwheelIntent ? "mwheelIntent.jsp" : "mousewheel.jsp";
            be = n.css("paddingTop") + " " + n.css("paddingRight") + " " + n.css("paddingBottom") + " " + n.css("paddingLeft"), ge = (parseInt(n.css("paddingLeft"), 10) || 0) + (parseInt(n.css("paddingRight"), 10) || 0), t.extend(_e, {
                reinitialise: function (e) {
                    e = t.extend({}, Q, e), s(e)
                }, scrollToElement: function (t, e, i) {
                    y(t, e, i)
                }, scrollTo: function (t, e, i) {
                    k(t, i), x(e, i)
                }, scrollToX: function (t, e) {
                    k(t, e)
                }, scrollToY: function (t, e) {
                    x(t, e)
                }, scrollToPercentX: function (t, e) {
                    k(t * (F - q), e)
                }, scrollToPercentY: function (t, e) {
                    x(t * (L - E), e)
                }, scrollBy: function (t, e, i) {
                    _e.scrollByX(t, i), _e.scrollByY(e, i)
                }, scrollByX: function (t, e) {
                    var i = C() + Math[0 > t ? "floor" : "ceil"](t), n = i / (F - q);
                    g(n * ie, e)
                }, scrollByY: function (t, e) {
                    var i = D() + Math[0 > t ? "floor" : "ceil"](t), n = i / (L - E);
                    m(n * Z, e)
                }, positionDragX: function (t, e) {
                    g(t, e)
                }, positionDragY: function (t, e) {
                    m(t, e)
                }, animate: function (t, e, i, n) {
                    var a = {};
                    a[e] = i, t.animate(a, {duration: Q.animateDuration, easing: Q.animateEase, queue: !1, step: n})
                }, getContentPositionX: function () {
                    return C()
                }, getContentPositionY: function () {
                    return D()
                }, getContentWidth: function () {
                    return F
                }, getContentHeight: function () {
                    return L
                }, getPercentScrolledX: function () {
                    return C() / (F - q)
                }, getPercentScrolledY: function () {
                    return D() / (L - E)
                }, getIsScrollableH: function () {
                    return K
                }, getIsScrollableV: function () {
                    return N
                }, getContentPane: function () {
                    return z
                }, scrollToBottom: function (t) {
                    m(Z, t)
                }, hijackInternalLinks: t.noop, destroy: function () {
                    Y()
                }
            }), s(a)
        }

        return n = t.extend({}, t.fn.jScrollPane.defaults, n), t.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function () {
            n[this] = n[this] || n.speed
        }), this.each(function () {
            var e = t(this), i = e.data("jsp");
            i ? i.reinitialise(n) : (i = new a(e, n), e.data("jsp", i))
        })
    }, t.fn.jScrollPane.defaults = {
        showArrows: !1,
        maintainPosition: !0,
        stickToBottom: !1,
        stickToRight: !1,
        clickOnTrack: !0,
        autoReinitialise: !1,
        autoReinitialiseDelay: 500,
        verticalDragMinHeight: 0,
        verticalDragMaxHeight: 99999,
        horizontalDragMinWidth: 0,
        horizontalDragMaxWidth: 99999,
        contentWidth: i,
        animateScroll: !1,
        animateDuration: 300,
        animateEase: "linear",
        hijackInternalLinks: !1,
        verticalGutter: 4,
        horizontalGutter: 4,
        mouseWheelSpeed: 0,
        arrowButtonSpeed: 0,
        arrowRepeatFreq: 50,
        arrowScrollOnHover: !1,
        trackClickSpeed: 0,
        trackClickRepeatFreq: 70,
        verticalArrowPositions: "split",
        horizontalArrowPositions: "split",
        enableKeyboardNavigation: !0,
        hideFocus: !1,
        keyboardSpeed: 0,
        initialDelay: 300,
        speed: 30,
        scrollPagePercent: .8
    }
}(jQuery, this), $(function () {
    var t = {
        delay: 6e3,
        height: 250,
        width: 735,
        pos: 0,
        nav: null,
        timer: null,
        holder: null,
        length: 0,
        animation: function (t) {
            var e, i = this;
            i.pos = t >= 0 ? t : ++i.pos, i.pos >= i.length && (i.pos = 0), e = i.pos * -i.width, clearTimeout(i.timer), i.holder.stop().animate({left: e + "px"}, 1500, "easeOutCirc", function () {
                i.timer = setTimeout(function () {
                    i.animation(-1)
                }, i.delay)
            }), i.nav.removeClass("active"), i.nav.eq(i.pos).addClass("active")
        },
        nav_click: function (t) {
            var e = this;
            e.animation(t)
        },
        init: function () {
            var t = this;
            t.holder = $(".box_gallery_wrap:first"), t.length = t.holder.find("img").length, t.holder.width(t.length * t.width), t.nav = $(".box_nav_gallery li").click(function () {
                t.nav_click($(this).index())
            }), t.timer = setTimeout(function () {
                t.animation(-1)
            }, t.delay)
        }
    };
    t.init(), $(".filter_first, .filter_next").click(function () {
        $(this).is(".active") ? ($(this).removeClass("active"), $(this).next(".filter_cont").slideUp()) : ($(this).addClass("active"), $(this).next(".filter_cont").slideDown())
    }), $(".filter_first a, .filter_next a").click(function (t) {
        t.preventDefault()
    }), $("a#link_notelForm").fancybox({
        padding: 10,
        width: 360,
        height: 450,
        type: "iframe",
        fitToView: !0,
        autoSize: !1
    }), $("a#login_menu, #auth_link").fancybox({
        padding: 20,
        helpers: {
            overlay:{
                closeClick: false
            }
        }
    }), $(".reg-win").fancybox({
        padding: 0,
        type: "iframe",
        width: 440,
        height: 560,
        fitToView: !0,
        autoSize: !1,
        afterShow: function () {
            ga("send", "event", "RegWindowClub", "Открытие окна", location.href), console.log("Track IT!")
        }
    }),
    $('#link_feedbackForm').fancybox({

        'width': 360,
        'height': 380,
        'padding': 10,
        'autoSize': false,
        'overlayShow': true,
        'hideOnContentClick': false,
        'type':'ajax'
    });

}), $(document).ready(function () {
    theRotator()
}), setLoadDiv = function (t) {
    t.length > 0 && $(t).append('<div class = "spinner" style = "display: block;" ><div class = "rect1" > </div> <div class = "rect2" > </div> <div class = "rect3" > </div> <div class = "rect4" > </div> <div class = "rect5" > </div> </div>')
}, $(function () {
    $(document).on("click", ".sort-form-ajax .sort a, a.view_off_1, a.view_off_2", function (t) {
        t.preventDefault(), $(".head_sort").next().html("");
        var e = "." + $(".head_sort").next().attr("class"), i = ".products_repeat";
        $(".items_pager").remove(), setLoadDiv(e);
        var n = location.pathname;
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        var o = '';
        var page_val = getParameterByName('page');
        if(Number(page_val)>0) o = '&page='+page_val;
        if(location.pathname.indexOf("/tag/")){

            var tag_split = location.pathname.split('/');
            o = o + '&tag='+tag_split[4];
        }
        rent= 'rent=y';
        if(location.search.indexOf(rent)==-1){
            rent='';
        }else{
            rent='&'+rent;
        }
        if (typeof window.currentAjaxItemsCatalogSort!=="undefined") {
            window.currentAjaxItemsCatalogSort.abort();
        }
        if(typeof window.requestQuery == "undefined"){
            window.requestQuery='';
        }else{
            window.requestQuery = "&"+requestQuery;
        }
        var $form = $(this).closest('form'),
            postParamsByGet = window.location.search,
            postParamsByForm = $form.serialize(),
            arPostParams = [],
            postParams = '';

        if (postParamsByGet && postParamsByGet!=='?')
        {
            arPostParams.push(window.location.search.slice(1));
        }

        if (postParamsByForm)
        {
            arPostParams.push(postParamsByForm);
        }

        if (arPostParams)
        {
            postParams = arPostParams.join('&');
        }

        return window.currentAjaxItemsCatalogSort=$.post("/ajax.php?action=ItemsCatalogSort" + o + window.requestQuery +"&back_url=" + location.pathname + "&" + $(this).attr("data-href") + "&section_id=" + $("#sect-id-ajax").val()+rent, postParams, function (t) {
            $(".head_sort").remove(),
                $(i).replaceWith(t);

        }), !1
    })
});
$(function(){
	$.fn.scrollToTop = function(){
		$(this).hide().removeAttr("href");
		if($(window).scrollTop()!="0") $(this).fadeIn("slow");
		var scrollDiv = $(this);
//		scrollDiv.css('left', $('.page').position().left/2);
		$(window).scroll(function(){
			if($(window).scrollTop()=="0")
				scrollDiv.fadeOut("slow");
			else
				scrollDiv.fadeIn("slow");
		});
		scrollDiv.click(function(){
			$("html, body").animate({scrollTop:0},"slow");  return false;
		});
	};
	$("#toTop").scrollToTop();

    // Add new fast order
    $(document).on("click",".goto_rent, .fast-order-button, .fast-order-button-list, .fast-order-button-table, .fast-order-button-sections", function() {
        var $pr_id = $(this).data("id");
        if((this.classList[1])&&(this.classList[1]=='rent')) {
            $.fancybox.open([{href: '/ajax/fast_rent.php?id=' + $pr_id}], {
                type: 'iframe',
                maxWidth: 500,
                fitToView: true,
                width: '70%',
                maxHeight: 630,
                autoSize: true
            });
        }else {
            $.fancybox.open([{href: '/ajax/fast_order.php?id=' + $pr_id,}], {
                type: 'iframe',
                maxWidth: 300,
                fitToView: true,
                width: '70%',
                maxHeight: 400,
                autoSize: true,
                fastOrder: true,
                itemID : $pr_id,
            });
            if(typeof($('meta[itemprop=price]').attr("content"))!="undefined")
                price = $('meta[itemprop=price]').attr("content");
            else
                price = $(this).attr("data-price"); // product price
        }
        //alert(document.getElementById("fastOrderForm").style.height+50);
        parent.$('.fancybox-inner').height($('#fastOrderForm').height()+50);
    });
});
function Rent_Coefficient(num) {
    var int_num= parseInt(num);
    if (int_num > 0 ) {
        if (int_num < 4) {
            coeff = 1;
        } else {
            if (int_num < 8) {
                coeff = 0.9 ;
            } else {
                if (int_num < 31) {
                    coeff =  0.8 ;
                } else {
                    coeff =  0.65 ;
                }
            }
        }
    }
    return coeff;
}
$(function() {
    $('.partner_links').click(function () {
        return window.open($(this).data('link'));
    })
});
var CladrCanHandle = function(t){
    if(document.getElementById('CladrCanHandleChange').getAttribute("data-enable") == "0"){
        t.value= "";
        return true;
    }else{
        return true;
    }
}
var swapCanHandle= function (t){
    if (t.getAttribute("data-enable") == "0"){
        t.setAttribute("data-enable","1");
        t.innerHTML= "Включить подсказки";
    }else{
        t.setAttribute("data-enable","0");
        t.innerHTML= "Выключить подсказки";
    }
}
function initMaskInput(params)
{
    function setMaskPlaceholder($item, mask, placeholder)
    {
        $item.mask(mask);
        $item.attr('placeholder', placeholder);
    }
    function setCountryParams()
    {
        var $phones = arguments[0]
            mask = '+7(hhh)hhh-hh-hh',
            placeholder = '+7(___) ___-__-__';

        switch ($(this).val()) {
            case "Russia":
                mask = "+7(hhh)hhh-hh-hh";
                placeholder = "+7(___) ___-__-__";
                break;
            case "Belarus":
                mask = "+375(hh)hh-hh-hh";
                placeholder = "+375(__) ___-__-__";
                break;
            case "Kazakhstan":
                mask = "+7(hhh)hhh-hh-hh";
                placeholder = "+7(___) ___-__-__";
                break;
            case "Kirgizia":
                mask = "+996(hhh) hh-hh-hh";
                placeholder = "+996(___) ___-__-__";
                break;
            case "Armenia":
                mask = "+374(hh) hh-hh-hh";
                placeholder = "+374(__) ___-__-__";
                break;

        }
        $phones.each(function(indPhone, itemPhone){
            setMaskPlaceholder($(itemPhone), mask, placeholder);
        });
    }
    var defaultParams = {
        container: '.js-mask_container',
        country: '.js-mask_country',
        phone: '.js-mask_phone'
    },
    useParams = {};
    if (params)
    {
        for (var k in defaultParams)
        {
            useParams[k] = typeof params[k] == 'undefined' ? defaultParams[k] : params[k];
        }
    }
    else
    {
        useParams = defaultParams;
    }

    var $container = $(useParams.container);

    $container.each(function(indContainer, itemContainer){
        var $phones = $(itemContainer).find(useParams.phone),
            $country = $(itemContainer).find(useParams.country);
        $country.each(function(indCountry, itemCountry){
            $(itemCountry).change($.proxy(setCountryParams, $(itemCountry), $phones));
        });
        $country.trigger('change');
    });
}

/**
 * Add2cart popup
 */
var timer
$(document).ready(function () {
    let currentRequest = null;
    $(document).on('click', '.add2cart_popup', function (e) {
        e.preventDefault ? e.preventDefault() : e.returnValue = false;
        let $btn = $(e.target);
        currentRequest = $.ajax({
            type: 'GET',
            url: '/ajax/add2cart_popup.php',
            data: {'product_id': $(this).data('id'), 'ajax_id': $(this).attr('rel')},
            beforeSend: function(xhr) {
                if (currentRequest != null) {
                    xhr.abort();
                }
                $btn.addClass('btn--action-started');
            },
            success: function (data) {
                let $container = $('#add2cart_popup').length ? $('#add2cart_popup') : $('<div id="add2cart_popup"></div>').appendTo('body');
                $container.html(data);
            },
            complete: function()
            {
                $btn.removeClass('btn--action-started');
                currentRequest = null;

                if ($('#basket-form-container').length && $('#basket-form').length)
                {
                    ajax_block('#basket-form-container');
                    ajax_load('#basket-form-container', AJAX_CALL_ID, $('#basket-form').serializeArray());
                }
            }
        });
    });
});
/* End */
;
; /* Start:"a:4:{s:4:"full";s:66:"/bitrix/templates/fotosklad/js/jcarousellite.min.js?14346326212057";s:6:"source";s:51:"/bitrix/templates/fotosklad/js/jcarousellite.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
!function(e){function t(t,n){return parseInt(e.css(t[0],n))||0}function n(e){return e[0].offsetWidth+t(e,"marginLeft")+t(e,"marginRight")}function l(e){return e[0].offsetHeight+t(e,"marginTop")+t(e,"marginBottom")}e.fn.jCarouselLite=function(t){return t=e.extend({btnPrev:null,btnNext:null,btnGo:null,mouseWheel:!1,auto:null,speed:200,easing:null,vertical:!1,circular:!0,visible:3,start:0,scroll:1,beforeStart:null,afterEnd:null},t||{}),this.each(function(){function i(){return v.slice(p).slice(0,h)}function r(n){if(!s){if(t.beforeStart&&t.beforeStart.call(this,i()),t.circular)n<=t.start-h-1?(u.css(c,-((b-2*h)*g)+"px"),p=n==t.start-h-1?b-2*h-1:b-2*h-t.scroll):n>=b-h+1?(u.css(c,-(h*g)+"px"),p=n==b-h+1?h+1:h+t.scroll):p=n;else{if(0>n||n>b-h)return;p=n}s=!0,u.animate("left"==c?{left:-(p*g)}:{top:-(p*g)},t.speed,t.easing,function(){t.afterEnd&&t.afterEnd.call(this,i()),s=!1}),t.circular||(e(t.btnPrev+","+t.btnNext).removeClass("disabled"),e(p-t.scroll<0&&t.btnPrev||p+t.scroll>b-h&&t.btnNext||[]).addClass("disabled"))}return!1}var s=!1,c=t.vertical?"top":"left",o=t.vertical?"height":"width",a=e(this),u=e("ul",a),f=e("li",u),d=f.size(),h=t.visible;t.circular&&(u.prepend(f.slice(d-h-1+1).clone()).append(f.slice(0,h).clone()),t.start+=h);var v=e("li",u),b=v.size(),p=t.start;a.css("visibility","visible"),v.css({overflow:"hidden","float":t.vertical?"none":"left"}),u.css({margin:"0",padding:"0",position:"relative","list-style-type":"none","z-index":"1"}),a.css({overflow:"hidden",position:"relative","z-index":"2",left:"0px"});var g=t.vertical?l(v):n(v),x=g*b,m=g*h;v.css({width:v.width(),height:v.height()}),u.css(o,x+"px").css(c,-(p*g)),a.css(o,m+"px"),t.btnPrev&&e(t.btnPrev).click(function(){return r(p-t.scroll)}),t.btnNext&&e(t.btnNext).click(function(){return r(p+t.scroll)}),t.btnGo&&e.each(t.btnGo,function(n,l){e(l).click(function(){return r(t.circular?t.visible+n:n)})}),t.mouseWheel&&a.mousewheel&&a.mousewheel(function(e,n){return r(n>0?p-t.scroll:p+t.scroll)}),t.auto&&setInterval(function(){r(p+t.scroll)},t.auto+t.speed)})}}(jQuery);
/* End */
;
; /* Start:"a:4:{s:4:"full";s:59:"/bitrix/templates/fotosklad/js/slick.min.js?156570485942863";s:6:"source";s:43:"/bitrix/templates/fotosklad/js/slick.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});

/* End */
;
; /* Start:"a:4:{s:4:"full";s:61:"/bitrix/templates/fotosklad/js/trackbar.min.js?14346327684894";s:6:"source";s:42:"/bitrix/templates/fotosklad/js/trackbar.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
function cDoubleTrackBar(t,i,e){switch(typeof t){case"string":this.Track=document.getElementById(t);break;case"object":this.Track=t}switch(typeof i){case"string":this.Tracker=document.getElementById(i);break;case"object":this.Tracker=i}return t&&i?(this.OnUpdate=e.OnUpdate,this.OnComplete=e.OnComplete,this.FingerOffset=e.FingerOffset||0,this.FormatNumbers=e.FormatNumbers||!1,this.Min=e.Min||0,this.Max=e.Max||100,this.MinSpace=e.MinSpace||0,this.RoundTo=e.RoundTo||1,this.Margins=e.Margins||0,this.AllowedValues=e.AllowedValues||!1,this.Disabled="undefined"!=typeof e.Disabled?e.Disabled:!1,this.Min>=this.Max&&(this.Max=this.Min+1),this.MinPos=this.Min,this.MaxPos=this.Max,this.Max-this.Min<this.MinSpace&&(this.MinSpace=this.Max-this.Min),this.Max-this.Min<this.RoundTo&&(this.RoundTo=this.Max-this.Min),this.MinSpace=Math.ceil(this.MinSpace/this.RoundTo)*this.RoundTo,this.Track.style.width=(this.Track.clientWidth||this.Track.offsetWidth)+"px",this.OnTrackMouseDown=this.bindAsEventListener(this.TrackMouseDown),this.OnDocumentMouseMove=this.bindAsEventListener(this.DocumentMouseMove),this.OnDocumentMouseUp=this.bindAsEventListener(this.DocumentMouseUp),this.bindEvent(this.Track,"mousedown",this.OnTrackMouseDown),this.TrackerLeft=0,this.UpdateTracker(this.Track.offsetWidth+this.FingerOffset),void("function"==typeof this.OnUpdate&&this.OnUpdate.call(this))):!1}cDoubleTrackBar.prototype={TrackMouseDown:function(t){this.TrackerLeft=this.Tracker.offsetLeft-this.Margins,this.TrackerRight=this.TrackerLeft+this.Tracker.offsetWidth,this.TrackerOffsets=this.getOffsets(this.Track);var i=t.clientX+document.documentElement.scrollLeft;if(i-=this.TrackerOffsets[0],this.Left=Math.abs(this.TrackerLeft-i+this.Margins)<=Math.abs(this.TrackerRight-i+this.Margins),"function"==typeof this.Disabled){if(this.Disabled.call(this))return!0}else if(this.Disabled)return!0;return this.UpdateTracker(i),this.bindEvent(document,"mousemove",this.OnDocumentMouseMove),this.bindEvent(document,"mouseup",this.OnDocumentMouseUp),this.stopEvent(t)},DocumentMouseMove:function(t){return this.UpdateTracker(t.clientX+document.documentElement.scrollLeft-this.TrackerOffsets[0]),this.stopEvent(t)},DocumentMouseUp:function(t){return this.unbindEvent(document,"mousemove",this.OnDocumentMouseMove),this.unbindEvent(document,"mouseup",this.OnDocumentMouseUp),"function"==typeof this.OnComplete&&this.OnComplete.call(this),this.stopEvent(t)},UpdateTracker:function(t){var i=this.Track.offsetWidth-2*this.Margins-1,e=Math.floor(i*this.MinSpace/(this.Max-this.Min)),s=this.MinPos,n=this.MaxPos;t-=this.Margins,this.Left?(t+=this.FingerOffset,this.TrackerLeft=Math.max(0,Math.min(this.TrackerRight-e-1,t)),this.MinPos=Math.round((this.Min+this.TrackerLeft*(this.Max-this.Min)/i)/this.RoundTo)*this.RoundTo,this.MinSpace>=this.MaxPos-this.MinPos&&(this.MinPos=this.MaxPos-this.MinSpace),this.AllowedValues&&(this.TrackerLeft=Math.round(i*(this.MinPos-this.Min)/(this.Max-this.Min)))):(t-=this.FingerOffset,this.TrackerRight=Math.max(this.TrackerLeft+e+1,Math.min(i+1,t)),this.MaxPos=Math.round((this.Min+(this.TrackerRight-1)*(this.Max-this.Min)/i)/this.RoundTo)*this.RoundTo,this.MinSpace>=this.MaxPos-this.MinPos&&(this.MaxPos=this.MinPos+this.MinSpace),this.AllowedValues&&(this.TrackerRight=Math.round(i*(this.MaxPos-this.Min)/(this.Max-this.Min))+1)),this.Tracker.style.width=this.TrackerRight-this.TrackerLeft+"px",this.Tracker.style.left=this.Margins+this.TrackerLeft+"px","function"==typeof this.OnUpdate&&(!this.AllowedValues||this.AllowedValues&&(n!=this.MaxPos||s!=this.MinPos))&&this.OnUpdate.call(this)},AddHairline:function(t){var i=this.Track.appendChild(document.createElement("div")),e=this.Track.offsetWidth-2*this.Margins-1;i.style.left=this.Margins+e/(this.Max-this.Min)*(t-this.Min)+"px",i.className="touch",i.innerHTML="<span>"+(this.FormatNumbers?this.leadSpaces(t):t)+"</span>"},AutoHairline:function(t){if(t>=1&&this.AddHairline(this.Min),t>=2&&this.AddHairline(this.Max),t>=3){t--;for(var i=this.Max-this.Min,e=[10,20,50,100,250,500,1e3,2e3,5e3,1e4,2e4,5e4,1e5,25e4,5e5,1e6],s=1,n=0;e[n]&&(s=e[n]/10,!(e[n]>i));n++);for(var n=1;t>n;n++){var h=this.Min+i/t*n;h=Math.round(h/s)*s,this.AddHairline(h)}}},getOffsets:function(t){var i=0,e=0;do i+=t.offsetTop||0,e+=t.offsetLeft||0,t=t.offsetParent;while(t);return[e,i]},leadSpaces:function(t){var i="";t=t.toString();for(var e=t.length,s=e;s>0;s--)i=(e-s)%3==2?t.charAt(s-1)+i:t.charAt(s-1)+i;return i},bindEvent:function(t,i,e){t.addEventListener?t.addEventListener(i,e,!1):t.attachEvent("on"+i,e)},unbindEvent:function(t,i,e){t.removeEventListener?t.removeEventListener(i,e,!1):t.detachEvent&&t.detachEvent("on"+i,e)},bindAsEventListener:function(t){var i=this;return function(e){return t.call(i,e||window.event)}},stopEvent:function(t){return t.preventDefault?(t.preventDefault(),t.stopPropagation()):(t.returnValue=!1,t.cancelBubble=!0),!1}};
/* End */
;
; /* Start:"a:4:{s:4:"full";s:94:"/bitrix/templates/fotosklad/js/scrollbar/jquery.mCustomScrollbar.concat.min.js?136809009425171";s:6:"source";s:78:"/bitrix/templates/fotosklad/js/scrollbar/jquery.mCustomScrollbar.concat.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/*mousewheel*/
(function(a){function d(b){var c=b||window.event,d=[].slice.call(arguments,1),e=0,f=!0,g=0,h=0;return b=a.event.fix(c),b.type="mousewheel",c.wheelDelta&&(e=c.wheelDelta/120),c.detail&&(e=-c.detail/3),h=e,c.axis!==undefined&&c.axis===c.HORIZONTAL_AXIS&&(h=0,g=-1*e),c.wheelDeltaY!==undefined&&(h=c.wheelDeltaY/120),c.wheelDeltaX!==undefined&&(g=-1*c.wheelDeltaX/120),d.unshift(b,e,g,h),(a.event.dispatch||a.event.handle).apply(this,d)}var b=["DOMMouseScroll","mousewheel"];if(a.event.fixHooks)for(var c=b.length;c;)a.event.fixHooks[b[--c]]=a.event.mouseHooks;a.event.special.mousewheel={setup:function(){if(this.addEventListener)for(var a=b.length;a;)this.addEventListener(b[--a],d,!1);else this.onmousewheel=d},teardown:function(){if(this.removeEventListener)for(var a=b.length;a;)this.removeEventListener(b[--a],d,!1);else this.onmousewheel=null}},a.fn.extend({mousewheel:function(a){return a?this.bind("mousewheel",a):this.trigger("mousewheel")},unmousewheel:function(a){return this.unbind("mousewheel",a)}})})(jQuery);
/*custom scrollbar*/
(function(c){var b={init:function(e){var f={set_width:false,set_height:false,horizontalScroll:false,scrollInertia:950,mouseWheel:true,mouseWheelPixels:"auto",autoDraggerLength:true,autoHideScrollbar:false,snapAmount:null,snapOffset:0,scrollButtons:{enable:false,scrollType:"continuous",scrollSpeed:"auto",scrollAmount:40},advanced:{updateOnBrowserResize:true,updateOnContentResize:false,autoExpandHorizontalScroll:false,autoScrollOnFocus:true,normalizeMouseWheelDelta:false},contentTouchScroll:true,callbacks:{onScrollStart:function(){},onScroll:function(){},onTotalScroll:function(){},onTotalScrollBack:function(){},onTotalScrollOffset:0,onTotalScrollBackOffset:0,whileScrolling:function(){}},theme:"light"},e=c.extend(true,f,e);return this.each(function(){var m=c(this);if(e.set_width){m.css("width",e.set_width)}if(e.set_height){m.css("height",e.set_height)}if(!c(document).data("mCustomScrollbar-index")){c(document).data("mCustomScrollbar-index","1")}else{var t=parseInt(c(document).data("mCustomScrollbar-index"));c(document).data("mCustomScrollbar-index",t+1)}m.wrapInner("<div class='mCustomScrollBox mCS-"+e.theme+"' id='mCSB_"+c(document).data("mCustomScrollbar-index")+"' style='position:relative; height:100%; overflow:hidden; max-width:100%;' />").addClass("mCustomScrollbar _mCS_"+c(document).data("mCustomScrollbar-index"));var g=m.children(".mCustomScrollBox");if(e.horizontalScroll){g.addClass("mCSB_horizontal").wrapInner("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />");var k=g.children(".mCSB_h_wrapper");k.wrapInner("<div class='mCSB_container' style='position:absolute; left:0;' />").children(".mCSB_container").css({width:k.children().outerWidth(),position:"relative"}).unwrap()}else{g.wrapInner("<div class='mCSB_container' style='position:relative; top:0;' />")}var o=g.children(".mCSB_container");if(c.support.touch){o.addClass("mCS_touch")}o.after("<div class='mCSB_scrollTools' style='position:absolute;'><div class='mCSB_draggerContainer'><div class='mCSB_dragger' style='position:absolute;' oncontextmenu='return false;'><div class='mCSB_dragger_bar' style='position:relative;'></div></div><div class='mCSB_draggerRail'></div></div></div>");var l=g.children(".mCSB_scrollTools"),h=l.children(".mCSB_draggerContainer"),q=h.children(".mCSB_dragger");if(e.horizontalScroll){q.data("minDraggerWidth",q.width())}else{q.data("minDraggerHeight",q.height())}if(e.scrollButtons.enable){if(e.horizontalScroll){l.prepend("<a class='mCSB_buttonLeft' oncontextmenu='return false;'></a>").append("<a class='mCSB_buttonRight' oncontextmenu='return false;'></a>")}else{l.prepend("<a class='mCSB_buttonUp' oncontextmenu='return false;'></a>").append("<a class='mCSB_buttonDown' oncontextmenu='return false;'></a>")}}g.bind("scroll",function(){if(!m.is(".mCS_disabled")){g.scrollTop(0).scrollLeft(0)}});m.data({mCS_Init:true,mCustomScrollbarIndex:c(document).data("mCustomScrollbar-index"),horizontalScroll:e.horizontalScroll,scrollInertia:e.scrollInertia,scrollEasing:"mcsEaseOut",mouseWheel:e.mouseWheel,mouseWheelPixels:e.mouseWheelPixels,autoDraggerLength:e.autoDraggerLength,autoHideScrollbar:e.autoHideScrollbar,snapAmount:e.snapAmount,snapOffset:e.snapOffset,scrollButtons_enable:e.scrollButtons.enable,scrollButtons_scrollType:e.scrollButtons.scrollType,scrollButtons_scrollSpeed:e.scrollButtons.scrollSpeed,scrollButtons_scrollAmount:e.scrollButtons.scrollAmount,autoExpandHorizontalScroll:e.advanced.autoExpandHorizontalScroll,autoScrollOnFocus:e.advanced.autoScrollOnFocus,normalizeMouseWheelDelta:e.advanced.normalizeMouseWheelDelta,contentTouchScroll:e.contentTouchScroll,onScrollStart_Callback:e.callbacks.onScrollStart,onScroll_Callback:e.callbacks.onScroll,onTotalScroll_Callback:e.callbacks.onTotalScroll,onTotalScrollBack_Callback:e.callbacks.onTotalScrollBack,onTotalScroll_Offset:e.callbacks.onTotalScrollOffset,onTotalScrollBack_Offset:e.callbacks.onTotalScrollBackOffset,whileScrolling_Callback:e.callbacks.whileScrolling,bindEvent_scrollbar_drag:false,bindEvent_content_touch:false,bindEvent_scrollbar_click:false,bindEvent_mousewheel:false,bindEvent_buttonsContinuous_y:false,bindEvent_buttonsContinuous_x:false,bindEvent_buttonsPixels_y:false,bindEvent_buttonsPixels_x:false,bindEvent_focusin:false,bindEvent_autoHideScrollbar:false,mCSB_buttonScrollRight:false,mCSB_buttonScrollLeft:false,mCSB_buttonScrollDown:false,mCSB_buttonScrollUp:false});if(e.horizontalScroll){if(m.css("max-width")!=="none"){if(!e.advanced.updateOnContentResize){e.advanced.updateOnContentResize=true}}}else{if(m.css("max-height")!=="none"){var s=false,r=parseInt(m.css("max-height"));if(m.css("max-height").indexOf("%")>=0){s=r,r=m.parent().height()*s/100}m.css("overflow","hidden");g.css("max-height",r)}}m.mCustomScrollbar("update");if(e.advanced.updateOnBrowserResize){var i,j=c(window).width(),u=c(window).height();c(window).bind("resize."+m.data("mCustomScrollbarIndex"),function(){if(i){clearTimeout(i)}i=setTimeout(function(){if(!m.is(".mCS_disabled")&&!m.is(".mCS_destroyed")){var w=c(window).width(),v=c(window).height();if(j!==w||u!==v){if(m.css("max-height")!=="none"&&s){g.css("max-height",m.parent().height()*s/100)}m.mCustomScrollbar("update");j=w;u=v}}},150)})}if(e.advanced.updateOnContentResize){var p;if(e.horizontalScroll){var n=o.outerWidth()}else{var n=o.outerHeight()}p=setInterval(function(){if(e.horizontalScroll){if(e.advanced.autoExpandHorizontalScroll){o.css({position:"absolute",width:"auto"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({width:o.outerWidth(),position:"relative"}).unwrap()}var v=o.outerWidth()}else{var v=o.outerHeight()}if(v!=n){m.mCustomScrollbar("update");n=v}},300)}})},update:function(){var n=c(this),k=n.children(".mCustomScrollBox"),q=k.children(".mCSB_container");q.removeClass("mCS_no_scrollbar");n.removeClass("mCS_disabled mCS_destroyed");k.scrollTop(0).scrollLeft(0);var y=k.children(".mCSB_scrollTools"),o=y.children(".mCSB_draggerContainer"),m=o.children(".mCSB_dragger");if(n.data("horizontalScroll")){var A=y.children(".mCSB_buttonLeft"),t=y.children(".mCSB_buttonRight"),f=k.width();if(n.data("autoExpandHorizontalScroll")){q.css({position:"absolute",width:"auto"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({width:q.outerWidth(),position:"relative"}).unwrap()}var z=q.outerWidth()}else{var w=y.children(".mCSB_buttonUp"),g=y.children(".mCSB_buttonDown"),r=k.height(),i=q.outerHeight()}if(i>r&&!n.data("horizontalScroll")){y.css("display","block");var s=o.height();if(n.data("autoDraggerLength")){var u=Math.round(r/i*s),l=m.data("minDraggerHeight");if(u<=l){m.css({height:l})}else{if(u>=s-10){var p=s-10;m.css({height:p})}else{m.css({height:u})}}m.children(".mCSB_dragger_bar").css({"line-height":m.height()+"px"})}var B=m.height(),x=(i-r)/(s-B);n.data("scrollAmount",x).mCustomScrollbar("scrolling",k,q,o,m,w,g,A,t);var D=Math.abs(q.position().top);n.mCustomScrollbar("scrollTo",D,{scrollInertia:0,trigger:"internal"})}else{if(z>f&&n.data("horizontalScroll")){y.css("display","block");var h=o.width();if(n.data("autoDraggerLength")){var j=Math.round(f/z*h),C=m.data("minDraggerWidth");if(j<=C){m.css({width:C})}else{if(j>=h-10){var e=h-10;m.css({width:e})}else{m.css({width:j})}}}var v=m.width(),x=(z-f)/(h-v);n.data("scrollAmount",x).mCustomScrollbar("scrolling",k,q,o,m,w,g,A,t);var D=Math.abs(q.position().left);n.mCustomScrollbar("scrollTo",D,{scrollInertia:0,trigger:"internal"})}else{k.unbind("mousewheel focusin");if(n.data("horizontalScroll")){m.add(q).css("left",0)}else{m.add(q).css("top",0)}y.css("display","none");q.addClass("mCS_no_scrollbar");n.data({bindEvent_mousewheel:false,bindEvent_focusin:false})}}},scrolling:function(h,p,m,j,w,e,A,v){var k=c(this);if(!k.data("bindEvent_scrollbar_drag")){var n,o;if(c.support.msPointer){j.bind("MSPointerDown",function(H){H.preventDefault();k.data({on_drag:true});j.addClass("mCSB_dragger_onDrag");var G=c(this),J=G.offset(),F=H.originalEvent.pageX-J.left,I=H.originalEvent.pageY-J.top;if(F<G.width()&&F>0&&I<G.height()&&I>0){n=I;o=F}});c(document).bind("MSPointerMove."+k.data("mCustomScrollbarIndex"),function(H){H.preventDefault();if(k.data("on_drag")){var G=j,J=G.offset(),F=H.originalEvent.pageX-J.left,I=H.originalEvent.pageY-J.top;D(n,o,I,F)}}).bind("MSPointerUp."+k.data("mCustomScrollbarIndex"),function(x){k.data({on_drag:false});j.removeClass("mCSB_dragger_onDrag")})}else{j.bind("mousedown touchstart",function(H){H.preventDefault();H.stopImmediatePropagation();var G=c(this),K=G.offset(),F,J;if(H.type==="touchstart"){var I=H.originalEvent.touches[0]||H.originalEvent.changedTouches[0];F=I.pageX-K.left;J=I.pageY-K.top}else{k.data({on_drag:true});j.addClass("mCSB_dragger_onDrag");F=H.pageX-K.left;J=H.pageY-K.top}if(F<G.width()&&F>0&&J<G.height()&&J>0){n=J;o=F}}).bind("touchmove",function(H){H.preventDefault();H.stopImmediatePropagation();var K=H.originalEvent.touches[0]||H.originalEvent.changedTouches[0],G=c(this),J=G.offset(),F=K.pageX-J.left,I=K.pageY-J.top;D(n,o,I,F)});c(document).bind("mousemove."+k.data("mCustomScrollbarIndex"),function(H){if(k.data("on_drag")){var G=j,J=G.offset(),F=H.pageX-J.left,I=H.pageY-J.top;D(n,o,I,F)}}).bind("mouseup."+k.data("mCustomScrollbarIndex"),function(x){k.data({on_drag:false});j.removeClass("mCSB_dragger_onDrag")})}k.data({bindEvent_scrollbar_drag:true})}function D(G,H,I,F){if(k.data("horizontalScroll")){k.mCustomScrollbar("scrollTo",(j.position().left-(H))+F,{moveDragger:true,trigger:"internal"})}else{k.mCustomScrollbar("scrollTo",(j.position().top-(G))+I,{moveDragger:true,trigger:"internal"})}}if(c.support.touch&&k.data("contentTouchScroll")){if(!k.data("bindEvent_content_touch")){var l,B,r,s,u,C,E;p.bind("touchstart",function(x){x.stopImmediatePropagation();l=x.originalEvent.touches[0]||x.originalEvent.changedTouches[0];B=c(this);r=B.offset();u=l.pageX-r.left;s=l.pageY-r.top;C=s;E=u});p.bind("touchmove",function(x){x.preventDefault();x.stopImmediatePropagation();l=x.originalEvent.touches[0]||x.originalEvent.changedTouches[0];B=c(this).parent();r=B.offset();u=l.pageX-r.left;s=l.pageY-r.top;if(k.data("horizontalScroll")){k.mCustomScrollbar("scrollTo",E-u,{trigger:"internal"})}else{k.mCustomScrollbar("scrollTo",C-s,{trigger:"internal"})}})}}if(!k.data("bindEvent_scrollbar_click")){m.bind("click",function(F){var x=(F.pageY-m.offset().top)*k.data("scrollAmount"),y=c(F.target);if(k.data("horizontalScroll")){x=(F.pageX-m.offset().left)*k.data("scrollAmount")}if(y.hasClass("mCSB_draggerContainer")||y.hasClass("mCSB_draggerRail")){k.mCustomScrollbar("scrollTo",x,{trigger:"internal",scrollEasing:"draggerRailEase"})}});k.data({bindEvent_scrollbar_click:true})}if(k.data("mouseWheel")){if(!k.data("bindEvent_mousewheel")){h.bind("mousewheel",function(H,J){var G,F=k.data("mouseWheelPixels"),x=Math.abs(p.position().top),I=j.position().top,y=m.height()-j.height();if(k.data("normalizeMouseWheelDelta")){if(J<0){J=-1}else{J=1}}if(F==="auto"){F=100+Math.round(k.data("scrollAmount")/2)}if(k.data("horizontalScroll")){I=j.position().left;y=m.width()-j.width();x=Math.abs(p.position().left)}if((J>0&&I!==0)||(J<0&&I!==y)){H.preventDefault();H.stopImmediatePropagation()}G=x-(J*F);k.mCustomScrollbar("scrollTo",G,{trigger:"internal"})});k.data({bindEvent_mousewheel:true})}}if(k.data("scrollButtons_enable")){if(k.data("scrollButtons_scrollType")==="pixels"){if(k.data("horizontalScroll")){v.add(A).unbind("mousedown touchstart MSPointerDown mouseup MSPointerUp mouseout MSPointerOut touchend",i,g);k.data({bindEvent_buttonsContinuous_x:false});if(!k.data("bindEvent_buttonsPixels_x")){v.bind("click",function(x){x.preventDefault();q(Math.abs(p.position().left)+k.data("scrollButtons_scrollAmount"))});A.bind("click",function(x){x.preventDefault();q(Math.abs(p.position().left)-k.data("scrollButtons_scrollAmount"))});k.data({bindEvent_buttonsPixels_x:true})}}else{e.add(w).unbind("mousedown touchstart MSPointerDown mouseup MSPointerUp mouseout MSPointerOut touchend",i,g);k.data({bindEvent_buttonsContinuous_y:false});if(!k.data("bindEvent_buttonsPixels_y")){e.bind("click",function(x){x.preventDefault();q(Math.abs(p.position().top)+k.data("scrollButtons_scrollAmount"))});w.bind("click",function(x){x.preventDefault();q(Math.abs(p.position().top)-k.data("scrollButtons_scrollAmount"))});k.data({bindEvent_buttonsPixels_y:true})}}function q(x){if(!j.data("preventAction")){j.data("preventAction",true);k.mCustomScrollbar("scrollTo",x,{trigger:"internal"})}}}else{if(k.data("horizontalScroll")){v.add(A).unbind("click");k.data({bindEvent_buttonsPixels_x:false});if(!k.data("bindEvent_buttonsContinuous_x")){v.bind("mousedown touchstart MSPointerDown",function(y){y.preventDefault();var x=z();k.data({mCSB_buttonScrollRight:setInterval(function(){k.mCustomScrollbar("scrollTo",Math.abs(p.position().left)+x,{trigger:"internal",scrollEasing:"easeOutCirc"})},17)})});var i=function(x){x.preventDefault();clearInterval(k.data("mCSB_buttonScrollRight"))};v.bind("mouseup touchend MSPointerUp mouseout MSPointerOut",i);A.bind("mousedown touchstart MSPointerDown",function(y){y.preventDefault();var x=z();k.data({mCSB_buttonScrollLeft:setInterval(function(){k.mCustomScrollbar("scrollTo",Math.abs(p.position().left)-x,{trigger:"internal",scrollEasing:"easeOutCirc"})},17)})});var g=function(x){x.preventDefault();clearInterval(k.data("mCSB_buttonScrollLeft"))};A.bind("mouseup touchend MSPointerUp mouseout MSPointerOut",g);k.data({bindEvent_buttonsContinuous_x:true})}}else{e.add(w).unbind("click");k.data({bindEvent_buttonsPixels_y:false});if(!k.data("bindEvent_buttonsContinuous_y")){e.bind("mousedown touchstart MSPointerDown",function(y){y.preventDefault();var x=z();k.data({mCSB_buttonScrollDown:setInterval(function(){k.mCustomScrollbar("scrollTo",Math.abs(p.position().top)+x,{trigger:"internal",scrollEasing:"easeOutCirc"})},17)})});var t=function(x){x.preventDefault();clearInterval(k.data("mCSB_buttonScrollDown"))};e.bind("mouseup touchend MSPointerUp mouseout MSPointerOut",t);w.bind("mousedown touchstart MSPointerDown",function(y){y.preventDefault();var x=z();k.data({mCSB_buttonScrollUp:setInterval(function(){k.mCustomScrollbar("scrollTo",Math.abs(p.position().top)-x,{trigger:"internal",scrollEasing:"easeOutCirc"})},17)})});var f=function(x){x.preventDefault();clearInterval(k.data("mCSB_buttonScrollUp"))};w.bind("mouseup touchend MSPointerUp mouseout MSPointerOut",f);k.data({bindEvent_buttonsContinuous_y:true})}}function z(){var x=k.data("scrollButtons_scrollSpeed");if(k.data("scrollButtons_scrollSpeed")==="auto"){x=Math.round((k.data("scrollInertia")+100)/40)}return x}}}if(k.data("autoScrollOnFocus")){if(!k.data("bindEvent_focusin")){h.bind("focusin",function(){h.scrollTop(0).scrollLeft(0);var x=c(document.activeElement);if(x.is("input,textarea,select,button,a[tabindex],area,object")){var G=p.position().top,y=x.position().top,F=h.height()-x.outerHeight();if(k.data("horizontalScroll")){G=p.position().left;y=x.position().left;F=h.width()-x.outerWidth()}if(G+y<0||G+y>F){k.mCustomScrollbar("scrollTo",y,{trigger:"internal"})}}});k.data({bindEvent_focusin:true})}}if(k.data("autoHideScrollbar")){if(!k.data("bindEvent_autoHideScrollbar")){h.bind("mouseenter",function(x){h.addClass("mCS-mouse-over");d.showScrollbar.call(h.children(".mCSB_scrollTools"))}).bind("mouseleave touchend",function(x){h.removeClass("mCS-mouse-over");if(x.type==="mouseleave"){d.hideScrollbar.call(h.children(".mCSB_scrollTools"))}});k.data({bindEvent_autoHideScrollbar:true})}}},scrollTo:function(e,f){var i=c(this),o={moveDragger:false,trigger:"external",callbacks:true,scrollInertia:i.data("scrollInertia"),scrollEasing:i.data("scrollEasing")},f=c.extend(o,f),p,g=i.children(".mCustomScrollBox"),k=g.children(".mCSB_container"),r=g.children(".mCSB_scrollTools"),j=r.children(".mCSB_draggerContainer"),h=j.children(".mCSB_dragger"),t=draggerSpeed=f.scrollInertia,q,s,m,l;if(!k.hasClass("mCS_no_scrollbar")){i.data({mCS_trigger:f.trigger});if(i.data("mCS_Init")){f.callbacks=false}if(e||e===0){if(typeof(e)==="number"){if(f.moveDragger){p=e;if(i.data("horizontalScroll")){e=h.position().left*i.data("scrollAmount")}else{e=h.position().top*i.data("scrollAmount")}draggerSpeed=0}else{p=e/i.data("scrollAmount")}}else{if(typeof(e)==="string"){var v;if(e==="top"){v=0}else{if(e==="bottom"&&!i.data("horizontalScroll")){v=k.outerHeight()-g.height()}else{if(e==="left"){v=0}else{if(e==="right"&&i.data("horizontalScroll")){v=k.outerWidth()-g.width()}else{if(e==="first"){v=i.find(".mCSB_container").find(":first")}else{if(e==="last"){v=i.find(".mCSB_container").find(":last")}else{v=i.find(e)}}}}}}if(v.length===1){if(i.data("horizontalScroll")){e=v.position().left}else{e=v.position().top}p=e/i.data("scrollAmount")}else{p=e=v}}}if(i.data("horizontalScroll")){if(i.data("onTotalScrollBack_Offset")){s=-i.data("onTotalScrollBack_Offset")}if(i.data("onTotalScroll_Offset")){l=g.width()-k.outerWidth()+i.data("onTotalScroll_Offset")}if(p<0){p=e=0;clearInterval(i.data("mCSB_buttonScrollLeft"));if(!s){q=true}}else{if(p>=j.width()-h.width()){p=j.width()-h.width();e=g.width()-k.outerWidth();clearInterval(i.data("mCSB_buttonScrollRight"));if(!l){m=true}}else{e=-e}}var n=i.data("snapAmount");if(n){e=Math.round(e/n)*n-i.data("snapOffset")}d.mTweenAxis.call(this,h[0],"left",Math.round(p),draggerSpeed,f.scrollEasing);d.mTweenAxis.call(this,k[0],"left",Math.round(e),t,f.scrollEasing,{onStart:function(){if(f.callbacks&&!i.data("mCS_tweenRunning")){u("onScrollStart")}if(i.data("autoHideScrollbar")){d.showScrollbar.call(r)}},onUpdate:function(){if(f.callbacks){u("whileScrolling")}},onComplete:function(){if(f.callbacks){u("onScroll");if(q||(s&&k.position().left>=s)){u("onTotalScrollBack")}if(m||(l&&k.position().left<=l)){u("onTotalScroll")}}h.data("preventAction",false);i.data("mCS_tweenRunning",false);if(i.data("autoHideScrollbar")){if(!g.hasClass("mCS-mouse-over")){d.hideScrollbar.call(r)}}}})}else{if(i.data("onTotalScrollBack_Offset")){s=-i.data("onTotalScrollBack_Offset")}if(i.data("onTotalScroll_Offset")){l=g.height()-k.outerHeight()+i.data("onTotalScroll_Offset")}if(p<0){p=e=0;clearInterval(i.data("mCSB_buttonScrollUp"));if(!s){q=true}}else{if(p>=j.height()-h.height()){p=j.height()-h.height();e=g.height()-k.outerHeight();clearInterval(i.data("mCSB_buttonScrollDown"));if(!l){m=true}}else{e=-e}}var n=i.data("snapAmount");if(n){e=Math.round(e/n)*n-i.data("snapOffset")}d.mTweenAxis.call(this,h[0],"top",Math.round(p),draggerSpeed,f.scrollEasing);d.mTweenAxis.call(this,k[0],"top",Math.round(e),t,f.scrollEasing,{onStart:function(){if(f.callbacks&&!i.data("mCS_tweenRunning")){u("onScrollStart")}if(i.data("autoHideScrollbar")){d.showScrollbar.call(r)}},onUpdate:function(){if(f.callbacks){u("whileScrolling")}},onComplete:function(){if(f.callbacks){u("onScroll");if(q||(s&&k.position().top>=s)){u("onTotalScrollBack")}if(m||(l&&k.position().top<=l)){u("onTotalScroll")}}h.data("preventAction",false);i.data("mCS_tweenRunning",false);if(i.data("autoHideScrollbar")){if(!g.hasClass("mCS-mouse-over")){d.hideScrollbar.call(r)}}}})}if(i.data("mCS_Init")){i.data({mCS_Init:false})}}}function u(w){this.mcs={top:k.position().top,left:k.position().left,draggerTop:h.position().top,draggerLeft:h.position().left,topPct:Math.round((100*Math.abs(k.position().top))/Math.abs(k.outerHeight()-g.height())),leftPct:Math.round((100*Math.abs(k.position().left))/Math.abs(k.outerWidth()-g.width()))};switch(w){case"onScrollStart":i.data("mCS_tweenRunning",true).data("onScrollStart_Callback").call(i,this.mcs);break;case"whileScrolling":i.data("whileScrolling_Callback").call(i,this.mcs);break;case"onScroll":i.data("onScroll_Callback").call(i,this.mcs);break;case"onTotalScrollBack":i.data("onTotalScrollBack_Callback").call(i,this.mcs);break;case"onTotalScroll":i.data("onTotalScroll_Callback").call(i,this.mcs);break}}},stop:function(){var g=c(this),e=g.children().children(".mCSB_container"),f=g.children().children().children().children(".mCSB_dragger");d.mTweenAxisStop.call(this,e[0]);d.mTweenAxisStop.call(this,f[0])},disable:function(e){var j=c(this),f=j.children(".mCustomScrollBox"),h=f.children(".mCSB_container"),g=f.children(".mCSB_scrollTools"),i=g.children().children(".mCSB_dragger");f.unbind("mousewheel focusin mouseenter mouseleave touchend");h.unbind("touchstart touchmove");if(e){if(j.data("horizontalScroll")){i.add(h).css("left",0)}else{i.add(h).css("top",0)}}g.css("display","none");h.addClass("mCS_no_scrollbar");j.data({bindEvent_mousewheel:false,bindEvent_focusin:false,bindEvent_content_touch:false,bindEvent_autoHideScrollbar:false}).addClass("mCS_disabled")},destroy:function(){var e=c(this);e.removeClass("mCustomScrollbar _mCS_"+e.data("mCustomScrollbarIndex")).addClass("mCS_destroyed").children().children(".mCSB_container").unwrap().children().unwrap().siblings(".mCSB_scrollTools").remove();c(document).unbind("mousemove."+e.data("mCustomScrollbarIndex")+" mouseup."+e.data("mCustomScrollbarIndex")+" MSPointerMove."+e.data("mCustomScrollbarIndex")+" MSPointerUp."+e.data("mCustomScrollbarIndex"));c(window).unbind("resize."+e.data("mCustomScrollbarIndex"))}},d={showScrollbar:function(){this.stop().animate({opacity:1},"fast")},hideScrollbar:function(){this.stop().animate({opacity:0},"fast")},mTweenAxis:function(g,i,h,f,o,y){var y=y||{},v=y.onStart||function(){},p=y.onUpdate||function(){},w=y.onComplete||function(){};var n=t(),l,j=0,r=g.offsetTop,s=g.style;if(i==="left"){r=g.offsetLeft}var m=h-r;q();e();function t(){if(window.performance&&window.performance.now){return window.performance.now()}else{if(window.performance&&window.performance.webkitNow){return window.performance.webkitNow()}else{if(Date.now){return Date.now()}else{return new Date().getTime()}}}}function x(){if(!j){v.call()}j=t()-n;u();if(j>=g._time){g._time=(j>g._time)?j+l-(j-g._time):j+l-1;if(g._time<j+1){g._time=j+1}}if(g._time<f){g._id=_request(x)}else{w.call()}}function u(){if(f>0){g.currVal=k(g._time,r,m,f,o);s[i]=Math.round(g.currVal)+"px"}else{s[i]=h+"px"}p.call()}function e(){l=1000/60;g._time=j+l;_request=(!window.requestAnimationFrame)?function(z){u();return setTimeout(z,0.01)}:window.requestAnimationFrame;g._id=_request(x)}function q(){if(g._id==null){return}if(!window.requestAnimationFrame){clearTimeout(g._id)}else{window.cancelAnimationFrame(g._id)}g._id=null}function k(B,A,F,E,C){switch(C){case"linear":return F*B/E+A;break;case"easeOutQuad":B/=E;return -F*B*(B-2)+A;break;case"easeInOutQuad":B/=E/2;if(B<1){return F/2*B*B+A}B--;return -F/2*(B*(B-2)-1)+A;break;case"easeOutCubic":B/=E;B--;return F*(B*B*B+1)+A;break;case"easeOutQuart":B/=E;B--;return -F*(B*B*B*B-1)+A;break;case"easeOutQuint":B/=E;B--;return F*(B*B*B*B*B+1)+A;break;case"easeOutCirc":B/=E;B--;return F*Math.sqrt(1-B*B)+A;break;case"easeOutSine":return F*Math.sin(B/E*(Math.PI/2))+A;break;case"easeOutExpo":return F*(-Math.pow(2,-10*B/E)+1)+A;break;case"mcsEaseOut":var D=(B/=E)*B,z=D*B;return A+F*(0.499999999999997*z*D+-2.5*D*D+5.5*z+-6.5*D+4*B);break;case"draggerRailEase":B/=E/2;if(B<1){return F/2*B*B*B+A}B-=2;return F/2*(B*B*B+2)+A;break}}},mTweenAxisStop:function(e){if(e._id==null){return}if(!window.requestAnimationFrame){clearTimeout(e._id)}else{window.cancelAnimationFrame(e._id)}e._id=null},rafPolyfill:function(){var f=["ms","moz","webkit","o"],e=f.length;while(--e>-1&&!window.requestAnimationFrame){window.requestAnimationFrame=window[f[e]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[f[e]+"CancelAnimationFrame"]||window[f[e]+"CancelRequestAnimationFrame"]}}};d.rafPolyfill.call();c.support.touch=!!("ontouchstart" in window);c.support.msPointer=window.navigator.msPointerEnabled;var a=("https:"==document.location.protocol)?"https:":"http:";c.event.special.mousewheel||document.write('<script src="'+a+'//cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.0.6/jquery.mousewheel.min.js"><\/script>');c.fn.mCustomScrollbar=function(e){if(b[e]){return b[e].apply(this,Array.prototype.slice.call(arguments,1))}else{if(typeof e==="object"||!e){return b.init.apply(this,arguments)}else{c.error("Method "+e+" does not exist")}}}})(jQuery);
/* End */
;
; /* Start:"a:4:{s:4:"full";s:79:"/bitrix/templates/fotosklad/js/jquery/jquery.inputmask-multi.js?139944643613884";s:6:"source";s:63:"/bitrix/templates/fotosklad/js/jquery/jquery.inputmask-multi.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/*
 * @license Multi Input Mask plugin for jquery
 * https://github.com/andr-04/inputmask-multi
 * Copyright (c) 2012 Andrey Egorov
 * Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
 * Version: 1.0.2
 *
 * Requriements:
 * https://github.com/RobinHerbots/jquery.inputmask
 * https://github.com/private-face/jquery.bind-first
 */
(function ($) {
    $.masksLoad = function(url) {
        var maskList;
        $.ajax({
            url: url,
            async: false,
            dataType: 'json',
            success: function (response) {
                maskList = response;
            }
        });
        return maskList;
    }

    $.masksSort = function(maskList, defs, match, key) {
        maskList.sort(function (a, b) {
            var ia = 0, ib = 0;
            for (; (ia<a[key].length && ib<b[key].length);) {
                var cha = a[key].charAt(ia);
                var chb = b[key].charAt(ib);
                if (!match.test(cha)) {
                    ia++;
                    continue;
                }
                if (!match.test(chb)) {
                    ib++;
                    continue;
                }
                if ($.inArray(cha, defs) != -1 && $.inArray(chb, defs) == -1) {
                    return 1;
                }
                if ($.inArray(cha, defs) == -1 && $.inArray(chb, defs) != -1) {
                    return -1;
                }
                if ($.inArray(cha, defs) == -1 && $.inArray(chb, defs) == -1) {
                    if (cha != chb) {
                        return cha < chb ? -1 : 1;
                    }
                }
                ia++;
                ib++;
            }
            for (; (ia<a[key].length || ib<b[key].length);) {
                if (ia<a[key].length && !match.test(a[key].charAt(ia))) {
                    ia++;
                    continue;
                }
                if (ib<b[key].length && !match.test(b[key].charAt(ib))) {
                    ib++;
                    continue;
                }
                if (ia<a[key].length) {
                    return 1;
                }
                if (ib<b[key].length) {
                    return -1;
                }
            }
            return 0;
        });
        return maskList;
    }

    $.fn.inputmasks = function(maskOpts, mode) {
        //Helper Functions
        var caret = function(begin, end) {
            if (typeof begin == 'number') {
                end = (typeof end == 'number') ? end : begin;
                if (this.setSelectionRange) {
                    this.setSelectionRange(begin, end);
                } else if (this.createTextRange) {
                    var range = this.createTextRange();
                    range.collapse(true);
                    range.moveEnd('character', end);
                    range.moveStart('character', begin);
                    range.select();
                }
            } else {
                if (this.setSelectionRange) {
                    begin = this.selectionStart;
                    end = this.selectionEnd;
                } else if (document.selection && document.selection.createRange) {
                    var range = document.selection.createRange();
                    begin = 0 - range.duplicate().moveStart('character', -100000);
                    end = begin + range.text.length;
                }
                return {
                    begin: begin,
                    end: end
                };
            }
        };

        var keys = Object.keys || function(obj) {
            if (obj !== Object(obj)) {
                throw new TypeError('Invalid object');
            }
            var keys = [];
            for (var key in obj) {
                keys[keys.length] = key;
            }
            return keys;
        };

        maskOpts = $.extend(true, {
            onMaskChange: $.noop
        }, maskOpts);
        var defs = {};
        for (var def in maskOpts.inputmask.definitions) {
            var validator = maskOpts.inputmask.definitions[def].validator;
            switch (typeof validator) {
                case "string":
                    defs[def] = new RegExp(validator);
                    break;
                case "object":
                    if ("test" in maskOpts.definitions[def].validator) {
                        defs[def] = validator;
                    }
                    break;
                case "function":
                    defs[def] = {
                        test: validator
                    };
                    break;
            }
        }
        maskOpts.inputmask.definitions[maskOpts.replace] = {
            validator: maskOpts.match.source,
            cardinality: 1
        };
        var iphone = navigator.userAgent.match(/iphone/i) != null;
        var oldmatch = false;
        var placeholder = $.extend(true, {}, $.inputmask.defaults, maskOpts.inputmask).placeholder;
        var insertMode = $.extend(true, {}, $.inputmask.defaults, maskOpts.inputmask).insertMode;

        var maskMatch = function(text) {
            var mtxt = "";
            for (var i=0; i<text.length; i++) {
                var ch = text.charAt(i);
                if (ch == placeholder) {
                    break;
                }
                if (maskOpts.match.test(ch)) {
                    mtxt += ch;
                }
            }
            for (var mid in maskOpts.list) {
                var mask = maskOpts.list[mid][maskOpts.listKey];
                var pass = true;
                for (var it=0, im=0; (it<mtxt.length && im<mask.length);) {
                    var chm = mask.charAt(im);
                    var cht = mtxt.charAt(it);
                    if (!maskOpts.match.test(chm) && !(chm in defs)) {
                        im++;
                        continue;
                    }
                    if (((chm in defs) && defs[chm].test(cht)) || (cht == chm)) {
                        it++;
                        im++;
                    } else {
                        pass = false;
                        break;
                    }
                }
                if (pass && it==mtxt.length) {
                    var determined = mask.substr(im).search(maskOpts.match) == -1;
                    mask = mask.replace(new RegExp([maskOpts.match.source].concat(keys(defs)).join('|'), 'g'), maskOpts.replace);
                    var completed = mask.substr(im).search(maskOpts.replace) == -1;
                    return {
                        mask: mask,
                        obj: maskOpts.list[mid],
                        determined: determined,
                        completed: completed
                    };
                }
            }
            return false;
        }

        var caretApply = function(oldMask, newMask, oldPos) {
            if (!oldMask) {
                return 0;
            }
            var pos = 0, startPos = 0;
            for (; pos < oldPos.begin; pos++) {
                if (oldMask.charAt(pos) == maskOpts.replace) {
                    startPos++;
                }
            }
            var endPos = 0;
            for (; pos < oldPos.end; pos++) {
                if (oldMask.charAt(pos) == maskOpts.replace) {
                    endPos++;
                }
            }
            for (pos = 0; (pos < newMask.length && (startPos > 0 || newMask.charAt(pos) != maskOpts.replace)); pos++) {
                if (newMask.charAt(pos) == maskOpts.replace) {
                    startPos--;
                }
            }
            startPos = pos;
            for (; (pos < newMask.length && endPos > 0); pos++) {
                if (newMask.charAt(pos) == maskOpts.replace) {
                    endPos--;
                }
            }
            endPos = pos;
            return {
                begin: startPos,
                end: endPos
            };
        }

        var maskUnbind = function() {
            $(this)
            .unbind("keypress.inputmask", masksKeyPress)
            .unbind("input.inputmask", masksPaste)
            .unbind("paste.inputmask", masksPaste)
            .unbind("dragdrop.inputmask", masksPaste)
            .unbind("drop.inputmask", masksPaste)
            .unbind("keydown.inputmask", masksKeyDown)
            .unbind("setvalue.inputmask", masksSetValue)
            .unbind("blur.inputmask", masksChange);
        }

        var maskRebind = function() {
            maskUnbind.call(this);
            $(this)
            .bindFirst("keypress.inputmask", masksKeyPress)
            .bindFirst("input.inputmask", masksPaste)
            .bindFirst("paste.inputmask", masksPaste)
            .bindFirst("dragdrop.inputmask", masksPaste)
            .bindFirst("drop.inputmask", masksPaste)
            .bindFirst("keydown.inputmask", masksKeyDown)
            .bindFirst("setvalue.inputmask", masksSetValue)
            .bind("blur.inputmask", masksChange);
        }

        var maskApply = function(match, newtext) {
            if (match && (newtext || match.mask != oldmatch.mask)) {
                var caretPos;
                if (!newtext) {
                    caretPos = caretApply(oldmatch.mask, match.mask, caret.call(this));
                }
                if (newtext) {
                    if (this._valueSet) {
                        this._valueSet(newtext);
                    } else {
                        this.value = newtext;
                    }
                }
                $(this).inputmask(match.mask, $.extend(true, maskOpts.inputmask, {
                    insertMode: insertMode
                }));
                if (!newtext) {
                    caret.call(this, caretPos.begin, caretPos.end);
                }
            }
            oldmatch = match;
            maskOpts.onMaskChange.call(this, match.obj, match.determined);
            return true;
        }

        var keyboardApply = function(e, text, insert) {
            var match = maskMatch(text);
            if (!match || match.obj != oldmatch.obj || match.determined != oldmatch.determined) {
                if (match) {
                    maskUnbind.call(this);
                    if (insert) {
                        maskApply.call(this, match);
                        $(this).trigger(e);
                    } else {
                        $(this).trigger(e);
                        maskApply.call(this, match);
                    }
                    maskRebind.call(this);
                }
                e.stopImmediatePropagation();
                return false;
            }
            return true;
        }

        var masksKeyDown = function(e) {
            e = e || window.event;
            var k = e.which || e.charCode || e.keyCode;
            if (k == 8 || k == 46 || (iphone && k == 127)) { // delete or backspace
                var text = this._valueGet();
                var caretPos = caret.call(this);
                if (caretPos.begin == caretPos.end || (!insertMode && caretPos.begin == caretPos.end-1)) {
                    var pos = caretPos.begin;
                    do {
                        if (k != 46) { // backspace
                            pos--;
                        }
                        var chr = text.charAt(pos);
                        text = text.substring(0, pos) + text.substring(pos+1);
                    } while (pos>0 && pos<text.length && chr != placeholder && !maskOpts.match.test(chr));
                } else {
                    var test = text.substring(0, caretPos.begin) + text.substring(caretPos.end);
                    if (test.search(maskOpts.match) == -1) {
                        text = test;
                    }
                }
                return keyboardApply.call(this, e, text, false);
            }
            if (k == 45) { // insert
                insertMode = !insertMode;
            }
            return true;
        }

        var masksKeyPress = function(e) {
            var text = this._valueGet();
            e = e || window.event;
            var k = e.which || e.charCode || e.keyCode, c = String.fromCharCode(k);
            caretPos = caret.call(this);
            text = text.substring(0, caretPos.begin) + c + text.substring(caretPos.end);
            return keyboardApply.call(this, e, text, true);
        }

        var masksChange = function(e) {
            var match = maskMatch(this._valueGet());
            maskApply.call(this, match);
            maskRebind.call(this);
            return true;
        }

        var masksSetValue = function(e) {
            maskInit.call(this);
            e.stopImmediatePropagation();
            return true;
        }

        var maskInit = function() {
            var text;
            if (this._valueGet) {
                text = this._valueGet();
            } else {
                text = this.value;
            }
            var match = maskMatch(text);
            while (!match && text.length>0) {
                text = text.substr(0, text.length-1);
                match = maskMatch(text);
            }
            maskApply.call(this, match, text);
            maskRebind.call(this);
        }

        var masksPaste = function(e) {
            var input = this;
            setTimeout(function() {
                maskInit.call(input);
            }, 0);
            e.stopImmediatePropagation();
            return true;
        }

        switch (mode) {
            case "isCompleted":
                var res = maskMatch((this[0]._valueGet && this[0]._valueGet()) || this[0].value);
                return (res && res.completed);
            default:
                this.each(function () {
                    maskInit.call(this);
                });
                return this;
        }
    }
})(jQuery);

/* End */
;
; /* Start:"a:4:{s:4:"full";s:80:"/bitrix/templates/fotosklad/js/jquery/jquery.bind-first-0.1.min.js?1399541334985";s:6:"source";s:66:"/bitrix/templates/fotosklad/js/jquery/jquery.bind-first-0.1.min.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/*
 * jQuery.bind-first library v0.1
 * Copyright (c) 2012 Vladimir Zhuravlev
 * 
 * Released under MIT License
 * 
 * Date: Sun Jan 15 20:05:49 GST 2012
 **/(function(a){function e(b,c,e){var f=c.split(/\s+/);b.each(function(){for(var b=0;b<f.length;++b){var c=a.trim(f[b]).match(/[^\.]+/i)[0];d(a(this),c,e)}})}function d(a,d,e){var f=c(a),g=f[d];if(!b){var h=g.pop();g.splice(e?0:g.delegateCount||0,0,h)}else e?f.live.unshift(f.live.pop()):g.unshift(g.pop())}function c(c){return b?c.data("events"):a._data(c[0]).events}var b=parseFloat(a.fn.jquery)<1.7;a.fn.bindFirst=function(){var b=a(this),c=a.makeArray(arguments),d=c.shift();d&&(a.fn.bind.apply(b,arguments),e(b,d));return b},a.fn.delegateFirst=function(){var b=a(this),c=a.makeArray(arguments),d=c[1];d&&(c.splice(0,2),a.fn.delegate.apply(b,arguments),e(a(this),d,!0));return b},a.fn.liveFirst=function(){var b=a(this),c=a.makeArray(arguments);c.unshift(b.selector),a.fn.delegateFirst.apply(a(document),c);return b}})(jQuery)
/* End */
;
; /* Start:"a:4:{s:4:"full";s:73:"/bitrix/templates/fotosklad/js/jquery/jquery.inputmask.js?139954133458088";s:6:"source";s:57:"/bitrix/templates/fotosklad/js/jquery/jquery.inputmask.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
/**
* @license Input Mask plugin for jquery
* http://github.com/RobinHerbots/jquery.inputmask
* Copyright (c) 2010 - 2012 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 1.2.2
*/

(function ($) {
    if ($.fn.inputmask == undefined) {
        $.inputmask = {
            //options default
            defaults: {
                placeholder: "_",
                optionalmarker: {
                    start: "[",
                    end: "]"
                },
                escapeChar: "\\",
                mask: null,
                oncomplete: $.noop, //executes when the mask is complete
                onincomplete: $.noop, //executes when the mask is incomplete and focus is lost
                oncleared: $.noop, //executes when the mask is cleared
                repeat: 0, //repetitions of the mask
                greedy: true, //true: allocated buffer for the mask and repetitions - false: allocate only if needed
                autoUnmask: false, //automatically unmask when retrieving the value with $.fn.val or value if the browser supports __lookupGetter__ or getOwnPropertyDescriptor
                clearMaskOnLostFocus: true,
                insertMode: true, //insert the input or overwrite the input
                clearIncomplete: false, //clear the incomplete input on blur
                aliases: {}, //aliases definitions => see jquery.inputmask.extensions.js
                onKeyUp: $.noop, //override to implement autocomplete on certain keys for example
                onKeyDown: $.noop, //override to implement autocomplete on certain keys for example
                showMaskOnHover: true, //show the mask-placeholder when hovering the empty input
                //numeric basic properties
                numericInput: false, //numericInput input direction style (input shifts to the left while holding the caret position)
                radixPoint: ".", // | ","
                //numeric basic properties
                definitions: {
                    '9': {
                        validator: "[0-9]",
                        cardinality: 1
                    },
                    'a': {
                        validator: "[A-Za-z\u0410-\u044F\u0401\u0451]",
                        cardinality: 1
                    },
                    '*': {
                        validator: "[A-Za-z\u0410-\u044F\u0401\u04510-9]",
                        cardinality: 1
                    }
                },
                keyCode: {
                    ALT: 18, 
                    BACKSPACE: 8, 
                    CAPS_LOCK: 20, 
                    COMMA: 188, 
                    COMMAND: 91, 
                    COMMAND_LEFT: 91, 
                    COMMAND_RIGHT: 93, 
                    CONTROL: 17, 
                    DELETE: 46, 
                    DOWN: 40, 
                    END: 35, 
                    ENTER: 13, 
                    ESCAPE: 27, 
                    HOME: 36, 
                    INSERT: 45, 
                    LEFT: 37, 
                    MENU: 93, 
                    NUMPAD_ADD: 107, 
                    NUMPAD_DECIMAL: 110, 
                    NUMPAD_DIVIDE: 111, 
                    NUMPAD_ENTER: 108,
                    NUMPAD_MULTIPLY: 106, 
                    NUMPAD_SUBTRACT: 109, 
                    PAGE_DOWN: 34, 
                    PAGE_UP: 33, 
                    PERIOD: 190, 
                    RIGHT: 39, 
                    SHIFT: 16, 
                    SPACE: 32, 
                    TAB: 9, 
                    UP: 38, 
                    WINDOWS: 91
                },
                ignorables: [8, 9, 13, 16, 17, 18, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 46, 91, 93, 108]
            },
            val: $.fn.val //store the original jquery val function
        };

        $.fn.inputmask = function (fn, options) {
            var opts = $.extend(true, {}, $.inputmask.defaults, options);
            var pasteEvent = isInputEventSupported('paste') ? 'paste' : 'input';

            var iphone = navigator.userAgent.match(/iphone/i) != null;
            var android = navigator.userAgent.match(/android.*mobile safari.*/i) != null;
            if (android) {
                var browser = navigator.userAgent.match(/mobile safari.*/i);
                var version = parseInt(new RegExp(/[0-9]+/).exec(browser));
                android = version <= 533;
            }
            var caretposCorrection = null;

            if (typeof fn == "string") {
                switch (fn) {
                    case "mask":
                        //init buffer
                        var _buffer = getMaskTemplate();
                        var tests = getTestingChain();

                        return this.each(function () {
                            mask(this);
                        });
                        break;
                    case "unmaskedvalue":
                        var tests = this.data('inputmask')['tests'];
                        var _buffer = this.data('inputmask')['_buffer'];
                        opts.greedy = this.data('inputmask')['greedy'];
                        opts.repeat = this.data('inputmask')['repeat'];
                        opts.definitions = this.data('inputmask')['definitions'];
                        return unmaskedvalue(this);
                        break;
                    case "remove":
                        var tests, _buffer;
                        return this.each(function () {
                            var $input = $(this), input = this;
                            setTimeout(function () {
                                if ($input.data('inputmask')) {
                                    tests = $input.data('inputmask')['tests'];
                                    _buffer = $input.data('inputmask')['_buffer'];
                                    opts.greedy = $input.data('inputmask')['greedy'];
                                    opts.repeat = $input.data('inputmask')['repeat'];
                                    opts.definitions = $input.data('inputmask')['definitions'];
                                    //writeout the unmaskedvalue
                                    input._valueSet(unmaskedvalue($input, true));
                                    //clear data
                                    $input.removeData('inputmask');
                                    //unbind all events
                                    $input.unbind(".inputmask");
                                    $input.removeClass('focus.inputmask');
                                    //restore the value property
                                    var valueProperty;
                                    if (Object.getOwnPropertyDescriptor)
                                        valueProperty = Object.getOwnPropertyDescriptor(input, "value");
                                    if (valueProperty && valueProperty.get) {
                                        if (input._valueGet) {
                                            Object.defineProperty(input, "value", {
                                                get: input._valueGet,
                                                set: input._valueSet
                                            });
                                        }
                                    } else if (document.__lookupGetter__ && input.__lookupGetter__("value")) {
                                        if (input._valueGet) {
                                            input.__defineGetter__("value", input._valueGet);
                                            input.__defineSetter__("value", input._valueSet);
                                        }
                                    }
                                    delete input._valueGet;
                                    delete input._valueSet;
                                }
                            }, 0);
                        });
                        break;
                    case "getemptymask": //return the default (empty) mask value, usefull for setting the default value in validation
                        if (this.data('inputmask'))
                            return this.data('inputmask')['_buffer'].join('');
                        else return "";
                    case "hasMaskedValue": //check wheter the returned value is masked or not; currently only works reliable when using jquery.val fn to retrieve the value 
                        return this.data('inputmask') ? !this.data('inputmask')['autoUnmask'] : false;
                    default:
                        //check if the fn is an alias
                        if (!resolveAlias(fn)) {
                            //maybe fn is a mask so we try
                            //set mask
                            opts.mask = fn;
                        }
                        //init buffer
                        var _buffer = getMaskTemplate();
                        var tests = getTestingChain();

                        return this.each(function () {
                            mask(this);
                        });

                        break;
                }
            }
            if (typeof fn == "object") {
                opts = $.extend(true, {}, $.inputmask.defaults, fn);
                resolveAlias(opts.alias); //resolve aliases
                //init buffer
                var _buffer = getMaskTemplate();
                var tests = getTestingChain();

                return this.each(function () {
                    mask(this);
                });
            }

            //helper functions
            function isInputEventSupported(eventName) {
                var el = document.createElement('input'),
                eventName = 'on' + eventName,
                isSupported = (eventName in el);
                if (!isSupported) {
                    el.setAttribute(eventName, 'return;');
                    isSupported = typeof el[eventName] == 'function';
                }
                el = null;
                return isSupported;
            }

            function resolveAlias(aliasStr) {
                var aliasDefinition = opts.aliases[aliasStr];
                if (aliasDefinition) {
                    if (aliasDefinition.alias) resolveAlias(aliasDefinition.alias); //alias is another alias
                    $.extend(true, opts, aliasDefinition);  //merge alias definition in the options
                    $.extend(true, opts, options);  //reapply extra given options
                    return true;
                }
                return false;
            }

            function getMaskTemplate() {
                var escaped = false, outCount = 0;
                if (opts.mask.length == 1 && opts.greedy == false) {
                    opts.placeholder = "";
                } //hide placeholder with single non-greedy mask
                var singleMask = $.map(opts.mask.split(""), function (element, index) {
                    var outElem = [];
                    if (element == opts.escapeChar) {
                        escaped = true;
                    }
                    else if ((element != opts.optionalmarker.start && element != opts.optionalmarker.end) || escaped) {
                        var maskdef = opts.definitions[element];
                        if (maskdef && !escaped) {
                            for (var i = 0; i < maskdef.cardinality; i++) {
                                outElem.push(getPlaceHolder(outCount + i));
                            }
                        } else {
                            outElem.push(element);
                            escaped = false;
                        }
                        outCount += outElem.length;
                        return outElem;
                    }
                });

                //allocate repetitions
                var repeatedMask = singleMask.slice();
                for (var i = 1; i < opts.repeat && opts.greedy; i++) {
                    repeatedMask = repeatedMask.concat(singleMask.slice());
                }

                return repeatedMask;
            }

            //test definition => {fn: RegExp/function, cardinality: int, optionality: bool, newBlockMarker: bool, offset: int, casing: null/upper/lower, def: definitionSymbol}
            function getTestingChain() {
                var isOptional = false, escaped = false;
                var newBlockMarker = false; //indicates wheter the begin/ending of a block should be indicated

                return $.map(opts.mask.split(""), function (element, index) {
                    var outElem = [];

                    if (element == opts.escapeChar) {
                        escaped = true;
                    } else if (element == opts.optionalmarker.start && !escaped) {
                        isOptional = true;
                        newBlockMarker = true;
                    }
                    else if (element == opts.optionalmarker.end && !escaped) {
                        isOptional = false;
                        newBlockMarker = true;
                    }
                    else {
                        var maskdef = opts.definitions[element];
                        if (maskdef && !escaped) {
                            var prevalidators = maskdef["prevalidator"], prevalidatorsL = prevalidators ? prevalidators.length : 0;
                            for (var i = 1; i < maskdef.cardinality; i++) {
                                var prevalidator = prevalidatorsL >= i ? prevalidators[i - 1] : [], validator = prevalidator["validator"], cardinality = prevalidator["cardinality"];
                                outElem.push({
                                    fn: validator ? typeof validator == 'string' ? new RegExp(validator) : new function () {
                                        this.test = validator;
                                    } : new RegExp("."), 
                                    cardinality: cardinality ? cardinality : 1, 
                                    optionality: isOptional, 
                                    newBlockMarker: isOptional == true ? newBlockMarker : false, 
                                    offset: 0, 
                                    casing: maskdef["casing"], 
                                    def: element
                                });
                                if (isOptional == true) //reset newBlockMarker
                                    newBlockMarker = false;
                            }
                            outElem.push({
                                fn: maskdef.validator ? typeof maskdef.validator == 'string' ? new RegExp(maskdef.validator) : new function () {
                                    this.test = maskdef.validator;
                                } : new RegExp("."), 
                                cardinality: maskdef.cardinality, 
                                optionality: isOptional, 
                                newBlockMarker: newBlockMarker, 
                                offset: 0, 
                                casing: maskdef["casing"], 
                                def: element
                            });
                        } else {
                            outElem.push({
                                fn: null, 
                                cardinality: 0, 
                                optionality: isOptional, 
                                newBlockMarker: newBlockMarker, 
                                offset: 0, 
                                casing: null, 
                                def: element
                            });
                            escaped = false;
                        }
                        //reset newBlockMarker
                        newBlockMarker = false;
                        return outElem;
                    }
                });
            }

            function isValid(pos, c, buffer, strict) { //strict true ~ no correction or autofill
                if (pos < 0 || pos >= getMaskLength()) return false;
                var testPos = determineTestPosition(pos), loopend = c ? 1 : 0, chrs = '';
                for (var i = tests[testPos].cardinality; i > loopend; i--) {
                    chrs += getBufferElement(buffer, testPos - (i - 1));
                }

                if (c) {
                    chrs += c;
                }
                //return is false or a json object => { pos: ??, c: ??}
                return tests[testPos].fn != null ? tests[testPos].fn.test(chrs, buffer, pos, strict, opts) : false;
            }

            function isMask(pos) {
                var testPos = determineTestPosition(pos);
                var test = tests[testPos];

                return test != undefined ? test.fn : false;
            }

            function determineTestPosition(pos) {
                return pos % tests.length;
            }

            function getPlaceHolder(pos) {
                return opts.placeholder.charAt(pos % opts.placeholder.length);
            }

            function getMaskLength() {
                var calculatedLength = _buffer.length;
                if (!opts.greedy && opts.repeat > 1) {
                    calculatedLength += (_buffer.length * (opts.repeat - 1));
                }
                return calculatedLength;
            }

            //pos: from position
            function seekNext(buffer, pos) {
                var maskL = getMaskLength();
                if (pos >= maskL) return maskL;
                var position = pos;
                while (++position < maskL && !isMask(position)) { };
                return position;
            }
            //pos: from position
            function seekPrevious(buffer, pos) {
                var position = pos;
                if (position <= 0) return 0;

                while (--position > 0 && !isMask(position)) { };
                return position;
            }

            function setBufferElement(buffer, position, element) {
                //position = prepareBuffer(buffer, position);

                var test = tests[determineTestPosition(position)];
                var elem = element;
                if (elem != undefined) {
                    switch (test.casing) {
                        case "upper":
                            elem = element.toUpperCase();
                            break;
                        case "lower":
                            elem = element.toLowerCase();
                            break;
                    }
                }

                buffer[position] = elem;
            }
            function getBufferElement(buffer, position, autoPrepare) {
                if (autoPrepare) position = prepareBuffer(buffer, position);
                return buffer[position];
            }

            //needed to handle the non-greedy mask repetitions
            function prepareBuffer(buffer, position, isRTL) {
                var j;
                if (isRTL) {
                    while (position < 0 && buffer.length < getMaskLength()) {
                        j = _buffer.length - 1;
                        position = _buffer.length;
                        while (_buffer[j] !== undefined) {
                            buffer.unshift(_buffer[j--]);
                        }
                    }
                } else {
                    while (buffer[position] == undefined && buffer.length < getMaskLength()) {
                        j = 0;
                        while (_buffer[j] !== undefined) { //add a new buffer
                            buffer.push(_buffer[j++]);
                        }
                    }
                }

                return position;
            }

            function writeBuffer(input, buffer, caretPos) {
                input._valueSet(buffer.join(''));
                if (caretPos != undefined) {
                    if (android) {
                        setTimeout(function () {
                            caret(input, caretPos);
                        }, 100);
                    }
                    else caret(input, caretPos);
                }
            };
            function clearBuffer(buffer, start, end) {
                for (var i = start, maskL = getMaskLength(); i < end && i < maskL; i++) {
                    setBufferElement(buffer, i, getBufferElement(_buffer.slice(), i));
                }
            };

            function setReTargetPlaceHolder(buffer, pos) {
                var testPos = determineTestPosition(pos);
                setBufferElement(buffer, pos, getBufferElement(_buffer, testPos));
            }

            function checkVal(input, buffer, clearInvalid, skipRadixHandling) {
                var isRTL = $(input).data('inputmask')['isRTL'],
                inputValue = truncateInput(input._valueGet(), isRTL).split('');

                if (isRTL) { //align inputValue for RTL/numeric input
                    var maskL = getMaskLength();
                    var inputValueRev = inputValue.reverse();
                    inputValueRev.length = maskL;

                    for (var i = 0; i < maskL; i++) {
                        var targetPosition = determineTestPosition(maskL - (i + 1));
                        if (tests[targetPosition].fn == null && inputValueRev[i] != getBufferElement(_buffer, targetPosition)) {
                            inputValueRev.splice(i, 0, getBufferElement(_buffer, targetPosition));
                            inputValueRev.length = maskL;
                        } else {
                            inputValueRev[i] = inputValueRev[i] || getBufferElement(_buffer, targetPosition);
                        }
                    }
                    inputValue = inputValueRev.reverse();
                }
                clearBuffer(buffer, 0, buffer.length);
                buffer.length = _buffer.length;
                var lastMatch = -1, checkPosition = -1, np, maskL = getMaskLength(), ivl = inputValue.length, rtlMatch = ivl == 0 ? maskL : -1;
                for (var i = 0; i < ivl; i++) {
                    for (var pos = checkPosition + 1; pos < maskL; pos++) {
                        if (isMask(pos)) {
                            var c = inputValue[i];
                            if ((np = isValid(pos, c, buffer, !clearInvalid)) !== false) {
                                if (np !== true) {
                                    pos = np.pos || pos; //set new position from isValid
                                    c = np.c || c; //set new char from isValid
                                }
                                setBufferElement(buffer, pos, c);
                                lastMatch = checkPosition = pos;
                            } else {
                                setReTargetPlaceHolder(buffer, pos);
                                if (c == getPlaceHolder(pos)) {
                                    checkPosition = pos;
                                    rtlMatch = pos;
                                }
                            }
                            break;
                        } else {   //nonmask
                            setReTargetPlaceHolder(buffer, pos);
                            if (lastMatch == checkPosition) //once outsync the nonmask cannot be the lastmatch
                                lastMatch = pos;
                            checkPosition = pos;
                            if (inputValue[i] == getBufferElement(buffer, pos))
                                break;
                        }
                    }
                }
                //Truncate buffer when using non-greedy masks
                if (opts.greedy == false) {
                    var newBuffer = truncateInput(buffer.join(''), isRTL).split('');
                    while (buffer.length != newBuffer.length) {  //map changes into the original buffer
                        isRTL ? buffer.shift() : buffer.pop();
                    }
                }

                if (clearInvalid) {
                    writeBuffer(input, buffer);
                }
                return isRTL ? (opts.numericInput ? ($.inArray(opts.radixPoint, buffer) != -1 && skipRadixHandling !== true ? $.inArray(opts.radixPoint, buffer) : seekNext(buffer, maskL)) : seekNext(buffer, rtlMatch)) : seekNext(buffer, lastMatch);
            }

            function escapeRegex(str) {
                var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\'];
                return str.replace(new RegExp('(\\' + specials.join('|\\') + ')', 'gim'), '\\$1');
            }
            function truncateInput(inputValue, rtl) {
                return rtl ? inputValue.replace(new RegExp("^(" + escapeRegex(_buffer.join('')) + ")*"), "") : inputValue.replace(new RegExp("(" + escapeRegex(_buffer.join('')) + ")*$"), "");
            }

            function clearOptionalTail(input, buffer) {
                checkVal(input, buffer, false);
                var tmpBuffer = buffer.slice();
                if ($(input).data('inputmask')['isRTL']) {
                    for (var pos = 0; pos <= tmpBuffer.length - 1; pos++) {
                        var testPos = determineTestPosition(pos);
                        if (tests[testPos].optionality) {
                            if (getPlaceHolder(pos) == buffer[pos] || !isMask(pos))
                                tmpBuffer.splice(0, 1);
                            else break;
                        } else break;
                    }
                } else {
                    for (var pos = tmpBuffer.length - 1; pos >= 0; pos--) {
                        var testPos = determineTestPosition(pos);
                        if (tests[testPos].optionality) {
                            if (getPlaceHolder(pos) == buffer[pos] || !isMask(pos))
                                tmpBuffer.pop();
                            else break;
                        } else break;
                    }
                }
                writeBuffer(input, tmpBuffer);
            }

            //functionality fn
            function unmaskedvalue($input, skipDatepickerCheck) {
                var input = $input[0];
                if (tests && (skipDatepickerCheck === true || !$input.hasClass('hasDatepicker'))) {
                    var buffer = _buffer.slice();
                    checkVal(input, buffer);
                    return $.map(buffer, function (element, index) {
                        return isMask(index) && element != getBufferElement(_buffer.slice(), index) ? element : null;
                    }).join('');
                }
                else {
                    return input._valueGet();
                }
            }

            function caret(input, begin, end) {
                var npt = input.jquery && input.length > 0 ? input[0] : input;
                if (typeof begin == 'number') {
                    end = (typeof end == 'number') ? end : begin;
                    if (opts.insertMode == false && begin == end) end++; //set visualization for insert/overwrite mode
                    if (npt.setSelectionRange) {
                        npt.setSelectionRange(begin, end);
                    } else if (npt.createTextRange) {
                        var range = npt.createTextRange();
                        range.collapse(true);
                        range.moveEnd('character', end);
                        range.moveStart('character', begin);
                        range.select();
                    }
                    npt.focus();
                    if (android && end != npt.selectionEnd) caretposCorrection = {
                        begin: begin, 
                        end: end
                    };
                } else {
                    var caretpos = android ? caretposCorrection : null, caretposCorrection = null;
                    if (caretpos == null) {
                        if (npt.setSelectionRange) {
                            begin = npt.selectionStart;
                            end = npt.selectionEnd;
                        } else if (document.selection && document.selection.createRange) {
                            var range = document.selection.createRange();
                            begin = 0 - range.duplicate().moveStart('character', -100000);
                            end = begin + range.text.length;
                        }
                        caretpos = {
                            begin: begin, 
                            end: end
                        };
                    }
                    return caretpos;
                }
            };

            function mask(el) {
                var $input = $(el);
                if (!$input.is(":input")) return;

                //correct greedy setting if needed
                opts.greedy = opts.greedy ? opts.greedy : opts.repeat == 0;

                //handle maxlength attribute
                var maxLength = $input.prop('maxLength');
                if (getMaskLength() > maxLength && maxLength > -1) { //FF sets no defined max length to -1 
                    if (maxLength < _buffer.length) _buffer.length = maxLength;
                    if (opts.greedy == false) {
                        opts.repeat = Math.round(maxLength / _buffer.length);
                    }
                }
                $input.prop('maxLength', getMaskLength() * 2);

                //store tests & original buffer in the input element - used to get the unmasked value
                $input.data('inputmask', {
                    'tests': tests,
                    '_buffer': _buffer,
                    'greedy': opts.greedy,
                    'repeat': opts.repeat,
                    'autoUnmask': opts.autoUnmask,
                    'definitions': opts.definitions,
                    'isRTL': false
                });

                patchValueProperty(el);

                //init vars
                var buffer = _buffer.slice(),
                undoBuffer = el._valueGet(),
                skipKeyPressEvent = false, //Safari 5.1.x - modal dialog fires keypress twice workaround
                ignorable = false,
                lastPosition = -1,
                firstMaskPos = seekNext(buffer, -1),
                lastMaskPos = seekPrevious(buffer, getMaskLength()),
                isRTL = false;
                if (el.dir == "rtl" || opts.numericInput) {
                    el.dir = "ltr"
                    $input.css("text-align", "right");
                    $input.removeAttr("dir");
                    var inputData = $input.data('inputmask');
                    inputData['isRTL'] = true;
                    $input.data('inputmask', inputData);
                    isRTL = true;
                }

                //unbind all events - to make sure that no other mask will interfere when re-masking
                $input.unbind(".inputmask");
                $input.removeClass('focus.inputmask');
                //bind events
                $input.bind("mouseenter.inputmask", function () {
                    var $input = $(this), input = this;
                    if (!$input.hasClass('focus.inputmask') && opts.showMaskOnHover) {
                        var nptL = input._valueGet().length;
                        if (nptL < buffer.length) {
                            if (nptL == 0)
                                buffer = _buffer.slice();
                            writeBuffer(input, buffer);
                        }
                    }
                }).bind("blur.inputmask", function () {
                    var $input = $(this), input = this, nptValue = input._valueGet();
                    $input.removeClass('focus.inputmask');
                    if (nptValue != undoBuffer) {
                        $input.change();
                    }
                    if (opts.clearMaskOnLostFocus) {
                        if (nptValue == _buffer.join(''))
                            input._valueSet('');
                        else { //clearout optional tail of the mask
                            clearOptionalTail(input, buffer);
                        }
                    }
                    if (!isComplete(input)) {
                        $input.trigger("incomplete");
                        if (opts.clearIncomplete) {
                            if (opts.clearMaskOnLostFocus)
                                input._valueSet('');
                            else {
                                buffer = _buffer.slice();
                                writeBuffer(input, buffer);
                            }
                        }
                    }
                }).bind("focus.inputmask", function () {
                    var $input = $(this), input = this;
                    if (!$input.hasClass('focus.inputmask') && !opts.showMaskOnHover) {
                        var nptL = input._valueGet().length;
                        if (nptL < buffer.length) {
                            if (nptL == 0)
                                buffer = _buffer.slice();
                            caret(input, checkVal(input, buffer, true));
                        }
                    }
                    $input.addClass('focus.inputmask');
                    undoBuffer = input._valueGet();
                }).bind("mouseleave.inputmask", function () {
                    var $input = $(this), input = this;
                    if (opts.clearMaskOnLostFocus) {
                        if (!$input.hasClass('focus.inputmask')) {
                            if (input._valueGet() == _buffer.join('') || input._valueGet() == '')
                                input._valueSet('');
                            else { //clearout optional tail of the mask
                                clearOptionalTail(input, buffer);
                            }
                        }
                    }
                }).bind("click.inputmask", function () {
                    var input = this;
                    setTimeout(function () {
                        var selectedCaret = caret(input);
                        if (selectedCaret.begin == selectedCaret.end) {
                            var clickPosition = selectedCaret.begin;
                            lastPosition = checkVal(input, buffer, false);
                            if (isRTL)
                                caret(input, clickPosition > lastPosition && (isValid(clickPosition, buffer[clickPosition], buffer, true) !== false || !isMask(clickPosition)) ? clickPosition : lastPosition);
                            else
                                caret(input, clickPosition < lastPosition && (isValid(clickPosition, buffer[clickPosition], buffer, true) !== false || !isMask(clickPosition)) ? clickPosition : lastPosition);
                        }
                    }, 0);
                }).bind('dblclick.inputmask', function () {
                    var input = this;
                    setTimeout(function () {
                        caret(input, 0, lastPosition);
                    }, 0);
                }).bind("keydown.inputmask", keydownEvent
                    ).bind("keypress.inputmask", keypressEvent
                    ).bind("keyup.inputmask", keyupEvent
                    ).bind(pasteEvent + ".inputmask, dragdrop.inputmask, drop.inputmask", function () {
                    var input = this;
                    setTimeout(function () {
                        caret(input, checkVal(input, buffer, true));
                    }, 0);
                }).bind('setvalue.inputmask', function () {
                    var input = this;
                    undoBuffer = input._valueGet();
                    checkVal(input, buffer, true);
                    if (input._valueGet() == _buffer.join(''))
                        input._valueSet('');
                }).bind('complete.inputmask', opts.oncomplete)
                .bind('incomplete.inputmask', opts.onincomplete)
                .bind('cleared.inputmask', opts.oncleared);

                //apply mask
                lastPosition = checkVal(el, buffer, true);

                // Wrap document.activeElement in a try/catch block since IE9 throw "Unspecified error" if document.activeElement is undefined when we are in an IFrame.
                var activeElement;
                try {
                    activeElement = document.activeElement;
                } catch (e) { }
                if (activeElement === el) { //position the caret when in focus
                    $input.addClass('focus.inputmask');
                    caret(el, lastPosition);
                } else if (opts.clearMaskOnLostFocus) {
                    if (el._valueGet() == _buffer.join('')) {
                        el._valueSet('');
                    } else {
                        clearOptionalTail(el, buffer);
                    }
                }

                installEventRuler(el);

                //private functions
                function isComplete(npt) {
                    var complete = true, nptValue = npt._valueGet(), ml = nptValue.length;
                    for (var i = 0; i < ml; i++) {
                        if (isMask(i) && nptValue.charAt(i) == getPlaceHolder(i)) {
                            complete = false;
                            break;
                        }
                    }
                    return complete;
                }


                function installEventRuler(npt) {
                    var events = $._data(npt).events;

                    $.each(events, function (eventType, eventHandlers) {
                        $(npt).bind(eventType + ".inputmask", function (event) {
                            if (this.readOnly || this.disabled) {
                                event.stopPropagation();
                                event.stopImmediatePropagation();
                                event.preventDefault();
                                return false;
                            }
                        });
                        //!! the bound handlers are executed in the order they where bound
                        //reorder the events
                        var ourHandler = eventHandlers[eventHandlers.length - 1];
                        for (var i = eventHandlers.length - 1; i > 0; i--) {
                            eventHandlers[i] = eventHandlers[i - 1];
                        }
                        eventHandlers[0] = ourHandler;
                    });
                }

                function patchValueProperty(npt) {
                    var valueProperty;
                    if (Object.getOwnPropertyDescriptor)
                        valueProperty = Object.getOwnPropertyDescriptor(npt, "value");
                    if (valueProperty && valueProperty.get) {
                        if (!npt._valueGet) {

                            npt._valueGet = valueProperty.get;
                            npt._valueSet = valueProperty.set;

                            Object.defineProperty(npt, "value", {
                                get: function () {
                                    var $self = $(this), inputData = $(this).data('inputmask');
                                    return inputData && inputData['autoUnmask'] ? $self.inputmask('unmaskedvalue') : this._valueGet() != inputData['_buffer'].join('') ? this._valueGet() : '';
                                },
                                set: function (value) {
                                    this._valueSet(value);
                                    $(this).triggerHandler('setvalue.inputmask');
                                }
                            });
                        }
                    } else if (document.__lookupGetter__ && npt.__lookupGetter__("value")) {
                        if (!npt._valueGet) {
                            npt._valueGet = npt.__lookupGetter__("value");
                            npt._valueSet = npt.__lookupSetter__("value");

                            npt.__defineGetter__("value", function () {
                                var $self = $(this), inputData = $(this).data('inputmask');
                                return inputData && inputData['autoUnmask'] ? $self.inputmask('unmaskedvalue') : this._valueGet() != inputData['_buffer'].join('') ? this._valueGet() : '';
                            });
                            npt.__defineSetter__("value", function (value) {
                                this._valueSet(value);
                                $(this).triggerHandler('setvalue.inputmask');
                            });
                        }
                    } else {
                        if (!npt._valueGet) {
                            npt._valueGet = function () {
                                return this.value;
                            }
                            npt._valueSet = function (value) {
                                this.value = value;
                            }
                        }
                        if ($.fn.val.inputmaskpatch != true) {
                            $.fn.val = function () {
                                if (arguments.length == 0) {
                                    var $self = $(this);
                                    if ($self.data('inputmask')) {
                                        if ($self.data('inputmask')['autoUnmask'])
                                            return $self.inputmask('unmaskedvalue');
                                        else {
                                            var result = $.inputmask.val.apply($self);
                                            return result != $self.data('inputmask')['_buffer'].join('') ? result : '';
                                        }
                                    } else return $.inputmask.val.apply($self);
                                } else {
                                    var args = arguments;
                                    return this.each(function () {
                                        var $self = $(this);
                                        var result = $.inputmask.val.apply($self, args);
                                        if ($self.data('inputmask')) $self.triggerHandler('setvalue.inputmask');
                                        return result;
                                    });
                                }
                            };
                            $.extend($.fn.val, {
                                inputmaskpatch: true
                            });
                        }
                    }
                }
                //shift chars to left from start to end and put c at end position if defined
                function shiftL(start, end, c) {
                    while (!isMask(start) && start - 1 >= 0) start--;
                    for (var i = start; i < end && i < getMaskLength(); i++) {
                        if (isMask(i)) {
                            setReTargetPlaceHolder(buffer, i);
                            var j = seekNext(buffer, i);
                            var p = getBufferElement(buffer, j);
                            if (p != getPlaceHolder(j)) {
                                if (j < getMaskLength() && isValid(i, p, buffer, true) !== false && tests[determineTestPosition(i)].def == tests[determineTestPosition(j)].def) {
                                    setBufferElement(buffer, i, getBufferElement(buffer, j));
                                    setReTargetPlaceHolder(buffer, j); //cleanup next position
                                } else {
                                    if (isMask(i))
                                        break;
                                }
                            } else if (c == undefined) break;
                        } else {
                            setReTargetPlaceHolder(buffer, i);
                        }
                    }
                    if (c != undefined)
                        setBufferElement(buffer, isRTL ? end : seekPrevious(buffer, end), c);

                    buffer = truncateInput(buffer.join(''), isRTL).split('');
                    if (buffer.length == 0) buffer = _buffer.slice();

                    return start; //return the used start position
                }
                function shiftR(start, end, c, full) { //full => behave like a push right ~ do not stop on placeholders
                    for (var i = start; i <= end && i < getMaskLength(); i++) {
                        if (isMask(i)) {
                            var t = getBufferElement(buffer, i);
                            setBufferElement(buffer, i, c);
                            if (t != getPlaceHolder(i)) {
                                var j = seekNext(buffer, i);
                                if (j < getMaskLength()) {
                                    if (isValid(j, t, buffer, true) !== false && tests[determineTestPosition(i)].def == tests[determineTestPosition(j)].def)
                                        c = t;
                                    else {
                                        if (isMask(j))
                                            break;
                                        else c = t;
                                    }
                                } else break;
                            } else if (full !== true) break;
                        } else
                            setReTargetPlaceHolder(buffer, i);
                    }
                    var lengthBefore = buffer.length;
                    buffer = truncateInput(buffer.join(''), isRTL).split('');
                    if (buffer.length == 0) buffer = _buffer.slice();

                    return end - (lengthBefore - buffer.length);  //return new start position
                };

                function keydownEvent(e) {
                    //Safari 5.1.x - modal dialog fires keypress twice workaround
                    skipKeyPressEvent = false;

                    var input = this, k = e.keyCode, pos = caret(input);

                    //set input direction according the position to the radixPoint
                    if (opts.numericInput) {
                        var nptStr = input._valueGet();
                        var radixPosition = nptStr.indexOf(opts.radixPoint);
                        if (radixPosition != -1) {
                            isRTL = pos.begin <= radixPosition || pos.end <= radixPosition;
                        }
                    }

                    //backspace, delete, and escape get special treatment
                    if (k == opts.keyCode.BACKSPACE || k == opts.keyCode.DELETE || (iphone && k == 127)) {//backspace/delete
                        var maskL = getMaskLength();
                        if (pos.begin == 0 && pos.end == maskL) {
                            buffer = _buffer.slice();
                            writeBuffer(input, buffer);
                            caret(input, checkVal(input, buffer, false));
                        } else if ((pos.end - pos.begin) > 1 || ((pos.end - pos.begin) == 1 && opts.insertMode)) {
                            clearBuffer(buffer, pos.begin, pos.end);
                            writeBuffer(input, buffer, isRTL ? checkVal(input, buffer, false) : pos.begin);
                        } else {
                            var beginPos = pos.begin - (k == opts.keyCode.DELETE ? 0 : 1);
                            if (beginPos < firstMaskPos && k == opts.keyCode.DELETE) {
                                beginPos = firstMaskPos;
                            }
                            if (beginPos >= firstMaskPos) {
                                if (opts.numericInput && opts.greedy && k == opts.keyCode.DELETE && buffer[beginPos] == opts.radixPoint) {
                                    beginPos = seekNext(buffer, beginPos);
                                    isRTL = false;
                                }
                                if (isRTL) {
                                    beginPos = shiftR(firstMaskPos, beginPos, getPlaceHolder(beginPos), true);
                                    beginPos = (opts.numericInput && opts.greedy && k == opts.keyCode.BACKSPACE && buffer[beginPos + 1] == opts.radixPoint) ? beginPos + 1 : seekNext(buffer, beginPos);
                                } else beginPos = shiftL(beginPos, maskL);
                                writeBuffer(input, buffer, beginPos);
                            }
                        }
                        if (input._valueGet() == _buffer.join(''))
                            $(input).trigger('cleared');

                        return false;
                    } else if (k == opts.keyCode.END || k == opts.keyCode.PAGE_DOWN) { //when END or PAGE_DOWN pressed set position at lastmatch
                        setTimeout(function () {
                            var caretPos = checkVal(input, buffer, false, true);
                            if (!opts.insertMode && caretPos == getMaskLength() && !e.shiftKey) caretPos--;
                            caret(input, e.shiftKey ? pos.begin : caretPos, caretPos);
                        }, 0);
                        return false;
                    } else if (k == opts.keyCode.HOME || k == opts.keyCode.PAGE_UP) {//Home or page_up
                        caret(input, 0, e.shiftKey ? pos.begin : 0);
                        return false;
                    }
                    else if (k == opts.keyCode.ESCAPE) {//escape
                        input._valueSet(undoBuffer);
                        caret(input, 0, checkVal(input, buffer));
                        return false;
                    } else if (k == opts.keyCode.INSERT) {//insert
                        opts.insertMode = !opts.insertMode;
                        caret(input, !opts.insertMode && pos.begin == getMaskLength() ? pos.begin - 1 : pos.begin);
                        return false;
                    } else if (e.ctrlKey && k == 88) {
                        setTimeout(function () {
                            caret(input, checkVal(input, buffer, true));
                        }, 0);
                    } else if (!opts.insertMode) { //overwritemode
                        if (k == opts.keyCode.RIGHT) {//right
                            var caretPos = pos.begin == pos.end ? pos.end + 1 : pos.end;
                            caretPos = caretPos < getMaskLength() ? caretPos : pos.end;
                            caret(input, e.shiftKey ? pos.begin : caretPos, e.shiftKey ? caretPos + 1 : caretPos);
                            return false;
                        } else if (k == opts.keyCode.LEFT) {//left
                            var caretPos = pos.begin - 1;
                            caretPos = caretPos > 0 ? caretPos : 0;
                            caret(input, caretPos, e.shiftKey ? pos.end : caretPos);
                            return false;
                        }
                    }

                    opts.onKeyDown.call(this, e, opts); //extra stuff to execute on keydown
                    ignorable = $.inArray(k, opts.ignorables) != -1;
                }

                function keypressEvent(e) {
                    //Safari 5.1.x - modal dialog fires keypress twice workaround
                    if (skipKeyPressEvent) return false;
                    skipKeyPressEvent = true;

                    var input = this, $input = $(input);

                    e = e || window.event;
                    var k = e.which || e.charCode || e.keyCode;

                    if (opts.numericInput && k == opts.radixPoint.charCodeAt(opts.radixPoint.length - 1)) {
                        var nptStr = input._valueGet();
                        var radixPosition = nptStr.indexOf(opts.radixPoint);
                        caret(input, seekNext(buffer, radixPosition != -1 ? radixPosition : getMaskLength()));
                    }

                    if (e.ctrlKey || e.altKey || e.metaKey || ignorable) {//Ignore
                        return true;
                    } else {
                        if (k) {
                            $input.trigger('input');

                            var pos = caret(input), c = String.fromCharCode(k), maskL = getMaskLength();
                            clearBuffer(buffer, pos.begin, pos.end);

                            if (isRTL) {
                                var p = opts.numericInput ? pos.end : seekPrevious(buffer, pos.end), np;
                                if ((np = isValid(p == maskL || getBufferElement(buffer, p) == opts.radixPoint ? seekPrevious(buffer, p) : p, c, buffer, false)) !== false) {
                                    if (np !== true) {
                                        p = np.pos || pos; //set new position from isValid
                                        c = np.c || c; //set new char from isValid
                                    }

                                    var firstUnmaskedPosition = firstMaskPos;
                                    if (opts.insertMode == true) {
                                        if (opts.greedy == true) {
                                            var bfrClone = buffer.slice();
                                            while (getBufferElement(bfrClone, firstUnmaskedPosition, true) != getPlaceHolder(firstUnmaskedPosition) && firstUnmaskedPosition <= p) {
                                                firstUnmaskedPosition = firstUnmaskedPosition == maskL ? (maskL + 1) : seekNext(buffer, firstUnmaskedPosition);
                                            }
                                        }

                                        if (firstUnmaskedPosition <= p && (opts.greedy || buffer.length < maskL)) {
                                            if (buffer[firstMaskPos] != getPlaceHolder(firstMaskPos) && buffer.length < maskL) {
                                                var offset = prepareBuffer(buffer, -1, isRTL);
                                                if (pos.end != 0) p = p + offset;
                                                maskL = buffer.length;
                                            }
                                            shiftL(firstUnmaskedPosition, opts.numericInput ? seekPrevious(buffer, p) : p, c);
                                        } else return false;
                                    } else setBufferElement(buffer, opts.numericInput ? seekPrevious(buffer, p) : p, c);
                                    writeBuffer(input, buffer, opts.numericInput && p == 0 ? seekNext(buffer, p) : p);
                                    setTimeout(function () { //timeout needed for IE
                                        if (isComplete(input))
                                            $input.trigger("complete");
                                    }, 0);
                                } else if (android) writeBuffer(input, buffer, pos.begin);
                            }
                            else {
                                var p = seekNext(buffer, pos.begin - 1), np;
                                prepareBuffer(buffer, p, isRTL);
                                if ((np = isValid(p, c, buffer, false)) !== false) {
                                    if (np !== true) {
                                        p = np.pos || p; //set new position from isValid
                                        c = np.c || c; //set new char from isValid
                                    }
                                    if (opts.insertMode == true) {
                                        var lastUnmaskedPosition = getMaskLength();
                                        var bfrClone = buffer.slice();
                                        while (getBufferElement(bfrClone, lastUnmaskedPosition, true) != getPlaceHolder(lastUnmaskedPosition) && lastUnmaskedPosition >= p) {
                                            lastUnmaskedPosition = lastUnmaskedPosition == 0 ? -1 : seekPrevious(buffer, lastUnmaskedPosition);
                                        }
                                        if (lastUnmaskedPosition >= p)
                                            shiftR(p, buffer.length, c);
                                        else return false;
                                    }
                                    else setBufferElement(buffer, p, c);
                                    var next = seekNext(buffer, p);
                                    writeBuffer(input, buffer, next);

                                    setTimeout(function () { //timeout needed for IE
                                        if (isComplete(input))
                                            $input.trigger("complete");
                                    }, 0);
                                } else if (android) writeBuffer(input, buffer, pos.begin);
                            }
                            return false;
                        }
                    }
                }

                function keyupEvent(e) {
                    var $input = $(this), input = this;
                    var k = e.keyCode;
                    opts.onKeyUp.call(this, e, opts); //extra stuff to execute on keyup
                    if (k == opts.keyCode.TAB && $input.hasClass('focus.inputmask') && input._valueGet().length == 0) {
                        buffer = _buffer.slice();
                        writeBuffer(input, buffer);
                        if (!isRTL) caret(input, 0);
                        undoBuffer = input._valueGet();
                    }
                }
            }
        };
    }
})(jQuery);
/* End */
;
; /* Start:"a:4:{s:4:"full";s:92:"/bitrix/templates/fotosklad/components/bitrix/subscribe.form/footer/script.js?15635474011356";s:6:"source";s:77:"/bitrix/templates/fotosklad/components/bitrix/subscribe.form/footer/script.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
var timerIdSubscribeBtn;
$(function(){

    $('.js-subscribe_form_footer').each(function(ind, form){

        $(form).submit(jsSubscribeFormSend);
    });

    function jsSubscribeFormSend()
    {
        var action = $(this).attr('data-ajax'),
            $msg = $(this).find('.js-subscribe_form__msg'),
            $btn = $(this).find('.js-subscribe_form__btn'),
            $email = $(this).find('.js-subscribe_form__email'),
            email = $email.val();
        $msg.addClass('_hide');
        if (action)
        {
            $email.removeClass('error-fields-order');
            if (timerIdSubscribeBtn)
            {
                clearTimeout(timerIdSubscribeBtn);
            }
            if (email)
            {
                $.post(action, {subscribeEmail: email}, function(data){
                    var res = JSON.parse(data);
                    if (res.success)
                    {
                        $msg.text('Вы подписаны');
                    }
                    else
                    {
                        $msg.text('Вы уже подписаны');
                    }

                    $msg.removeClass('_hide');
                });
            }
            else
            {
                $email.addClass('error-fields-order');
            }
        }
        return false;
    }
});
/* End */
;; /* /bitrix/templates/fotosklad/js/sided/openapi.js?153484101386668*/
; /* /bitrix/templates/fotosklad/js/main.js?15657048597102*/
; /* /bitrix/templates/fotosklad/js/jquery/jquery.activity.min.js?14405095531543*/
; /* /bitrix/templates/fotosklad/js/fancybox/jquery.fancybox.js?156577071848311*/
; /* /bitrix/templates/fotosklad/js/script.min.js?157234829359953*/
; /* /bitrix/templates/fotosklad/js/jcarousellite.min.js?14346326212057*/
; /* /bitrix/templates/fotosklad/js/slick.min.js?156570485942863*/
; /* /bitrix/templates/fotosklad/js/trackbar.min.js?14346327684894*/
; /* /bitrix/templates/fotosklad/js/scrollbar/jquery.mCustomScrollbar.concat.min.js?136809009425171*/
; /* /bitrix/templates/fotosklad/js/jquery/jquery.inputmask-multi.js?139944643613884*/
; /* /bitrix/templates/fotosklad/js/jquery/jquery.bind-first-0.1.min.js?1399541334985*/
; /* /bitrix/templates/fotosklad/js/jquery/jquery.inputmask.js?139954133458088*/
; /* /bitrix/templates/fotosklad/components/bitrix/subscribe.form/footer/script.js?15635474011356*/
